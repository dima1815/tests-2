Index: jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookRelatedSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookRelatedSteps.java	(date 1412147330000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookRelatedSteps.java	(revision )
@@ -6,6 +6,7 @@
 import org.jbehave.core.annotations.Given;
 import org.jbehave.core.annotations.Named;
 import org.jbehave.core.annotations.When;
+import org.jbehave.core.model.ExamplesTable;
 
 import java.util.List;
 
@@ -15,6 +16,13 @@
 public class BookRelatedSteps {
 
     private BookStore bookStore = new BookStore();
+
+
+    @Given("transaction events: $events")
+    public void givenSomeEvents(ExamplesTable events) {
+
+    }
+
 
     @When("something happens")
     public void whenSomething() {
Index: jbehave-for-jira/jbehave-for-jira-example-project/src/main/resources/ftl/jbehave-html-output.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/main/resources/ftl/jbehave-html-output.ftl	(revision )
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/main/resources/ftl/jbehave-html-output.ftl	(revision )
@@ -0,0 +1,284 @@
+<#ftl strip_whitespace=true>
+
+<#--<#macro renderEmptyElement text><!-- story element - ${text?html} was empty &ndash;&gt;</#macro>-->
+<#macro renderMultiline text>${text?html?replace("\n", "<br/>")}</#macro>
+
+<#macro renderMeta meta>
+<div class="meta">
+	<div class="keyword">${keywords.meta}</div>
+    <#assign metaProperties=meta.getProperties()>
+    <#list metaProperties.keySet() as name>
+        <#assign property = metaProperties.get(name)>
+		<div class="property">${keywords.metaProperty}${name?html} ${property?html}</div>
+    </#list>
+</div>
+</#macro>
+
+<#macro renderNarrative narrative>
+<div class="narrative">
+	<div class="keyword">${keywords.narrative}</div>
+    <#assign isAlternative=narrative.isAlternative()?string>
+    <#if isAlternative == "true">
+		<div class="element asA"><span class="keyword asA">${keywords.asA}</span><span class="text"> ${narrative.asA}</span></div>
+		<div class="element iWantTo"><span class="keyword iWantTo">${keywords.iWantTo}</span><span class="text"> ${narrative.iWantTo}</span>
+		</div>
+		<div class="element soThat"><span class="keyword soThat">${keywords.soThat}</span><span class="text"> ${narrative.soThat}</span>
+		</div>
+    <#else>
+		<div class="element inOrderTo"><span class="keyword inOrderTo">${keywords.inOrderTo}</span><span
+				class="text"> ${narrative.inOrderTo}</span></div>
+		<div class="element asA"><span class="keyword asA">${keywords.asA}</span><span class="text"> ${narrative.asA}</span></div>
+		<div class="element iWantTo"><span class="keyword iWantTo">${keywords.iWantTo}</span><span class="text"> ${narrative.iWantTo}</span>
+		</div>
+    </#if>
+</div>
+</#macro>
+
+<#macro renderGivenStories givenStories>
+<div class="givenStories">
+	<div class="keyword">${keywords.givenStories}</div>
+    <#list givenStories.getStories() as givenStory>
+		<div class="givenStory">${givenStory.path}</div>
+    </#list>
+</div>
+</#macro>
+
+<#macro renderLifecycle lifecycle>
+<div class="lifecycle">
+	<div class="keyword">${keywords.lifecycle}</div>
+    <#if !lifecycle.getBeforeSteps().isEmpty()>
+		<div class="before">
+			<div class="keyword">${keywords.before}</div>
+            <#list lifecycle.getBeforeSteps() as step>
+				<div class="step">${step?html}</div>
+            </#list>
+		</div>
+    </#if>
+    <#if !lifecycle.getAfterSteps().isEmpty()>
+		<div class="after">
+			<div class="keyword">${keywords.after}</div>
+            <#list lifecycle.getOutcomes() as outcome>
+				<div class="outcome">
+                <#--TODO - there is no keyword currently for 'Outcome', will need to be localized below-->
+					<div><span class="keyword">Outcome:</span><span class="text"> ${outcome}</span></div>
+                    <#list lifecycle.getAfterSteps(outcome) as step>
+						<div class="step">${step?html}</div>
+                    </#list>
+				</div>
+            </#list>
+		</div>
+    </#if>
+</div>
+</#macro>
+
+<#macro renderTable table>
+    <#assign rows=table.getRows()>
+    <#assign headers=table.getHeaders()>
+    <#assign oddEven="odd">
+<table>
+	<thead>
+	<tr>
+        <#list headers as header>
+			<th>${header?html}</th>
+        </#list>
+	</tr>
+	</thead>
+	<tbody>
+        <#list rows as row>
+		<tr class="${oddEven}">
+            <#list headers as header>
+                <#assign cell=row.get(header)>
+				<td>${cell?html}</td>
+            </#list>
+		</tr>
+            <#if oddEven == "odd">
+                <#assign oddEven="even">
+            <#else>
+                <#assign oddEven="odd">
+            </#if>
+        </#list>
+	</tbody>
+</table>
+</#macro>
+
+<#macro renderOutcomes table>
+    <#assign outcomes=table.getOutcomes()>
+    <#assign fields=table.getOutcomeFields()>
+<table>
+	<thead>
+	<tr>
+        <#list fields as field>
+			<th>${field?html}</th>
+        </#list>
+	</tr>
+	</thead>
+	<tbody>
+        <#list outcomes as outcome>
+            <#assign isVerified=outcome.isVerified()?string>
+            <#if isVerified == "true"> <#assign verified="verified"><#else><#assign verified="notVerified"></#if>
+		<tr class="${verified}">
+			<td>${outcome.description?html}</td>
+			<td><@renderOutcomeValue outcome.getValue() table.getDateFormat()/></td>
+			<td>${outcome.matcher?html}</td>
+			<td><#if isVerified == "true">${keywords.yes}<#else>${keywords.no}</#if></td>
+		</tr>
+        </#list>
+	</tbody>
+</table>
+</#macro>
+
+<#macro renderOutcomeValue value dateFormat>
+    <#if value?is_date>${value?string(dateFormat)}<#else>${value?html}</#if>
+</#macro>
+
+<#macro renderStep step>
+<#--<#assign formattedStep = step.getFormattedStep(EscapeMode.HTML, "<span class=\"step parameter\">{0}</span>")>-->
+<div class="step ${step.outcome}">
+<#--${formattedStep}-->
+
+    <#list step.getStepTokens() as token>
+        <#if token.getType() == "KEYWORD">
+			<span class="keyword">${token.asString()}</span>
+        <#elseif token.getType() == "TEXT">
+			<span class="text">${token.asString()?html}</span>
+        <#elseif token.getType() == "PARAMETER">
+			<span class="parameter">${token.asString()?html}</span>
+        <#elseif token.getType() == "TABULAR_PARAMETER">
+			<div class="tabular-parameter">
+                <@renderTable token.getTable()/>
+			</div>
+        </#if>
+    </#list>
+
+<#--<div class="step">${step?html}</div>-->
+
+<#--<#if step.getTable()??>-->
+<#--<span class="step parameter"><@renderTable step.getTable()/></span>-->
+<#--</#if>-->
+<#--<@renderStepOutcome step.getOutcome()/>-->
+</div>
+<#--<#if step.getFailure()??>-->
+<#--<pre class="failure">${step.failureCause?html}</pre></#if>-->
+<#--<#if step.getOutcomes()??>-->
+<#--<div class="outcomes">-->
+<#--<@renderOutcomes step.getOutcomes()/>-->
+<#--<#if step.getOutcomesFailureCause()??>-->
+<#--<pre class="failure">${step.outcomesFailureCause?html}</pre>-->
+<#--</#if>-->
+<#--</div>-->
+<#--</#if>-->
+</#macro>
+
+<#macro renderStepOutcome outcome><#if outcome=="pending"><span class="keyword ${outcome}">(${keywords.pending}
+	)</span></#if><#if outcome=="failed"><span class="keyword ${outcome}">(${keywords.failed})</span></#if><#if outcome=="notPerformed">
+<span class="keyword ${outcome}">(${keywords.notPerformed})</span></#if>
+</#macro>
+
+<#-- report start ======================================================================================================================-->
+
+<div class="jb-story-report">
+
+	<script type="text/javascript">
+		function storyReportToggleElement(event, idOfElementToToggle) {
+			AJS.$("#" + idOfElementToToggle).toggle();
+			if (event.preventDefault) {
+				event.preventDefault();
+			} else {
+				event.returnValue = false;
+			}
+		}
+	</script>
+
+<#if story.getDescription()??>
+	<div class="description">
+        <@renderMultiline story.getDescription()/>
+	</div>
+</#if>
+
+<#if story.getMeta()??><@renderMeta story.getMeta()/></#if>
+
+<#if story.getNarrative()??><@renderNarrative story.getNarrative()/></#if>
+
+<#if story.getLifecycle()??><@renderLifecycle story.getLifecycle()/></#if>
+
+<#assign scenarios = story.getScenarios()>
+<#assign scenarioIndex = 0>
+<#list scenarios as scenario>
+    <#assign scenarioContentId = "scenario_" + scenarioIndex + "_content">
+	<div class="scenario ${scenario.getOutcome()}">
+		<div class="title">
+			<a href="#" onclick="storyReportToggleElement(event, '${scenarioContentId}');">
+				<span class="keyword">${keywords.scenario}</span>
+				<span class="text"> <@renderMultiline scenario.getTitle()/></span>
+                <#if scenario.getOutcome() == "passed">
+					<span class="aui-lozenge aui-lozenge-success">passed</span>
+                <#elseif scenario.getOutcome() == "failed">
+					<span class="aui-lozenge aui-lozenge-error">failed</span>
+                <#elseif scenario.getOutcome() == "pending">
+					<span class="aui-lozenge aui-lozenge-current">pending</span>
+                <#elseif scenario.getOutcome() == "not_performed">
+					<span class="aui-lozenge">not performed</span>
+                <#elseif scenario.getOutcome() == "ignored">
+					<span class="aui-lozenge aui-lozenge-moved">ignored</span>
+                </#if>
+			</a>
+		</div>
+
+        <#if scenario.getOutcome() == "passed" || scenario.getOutcome() == "ignored" || scenario.getOutcome() == "not_performed">
+            <#assign scenarioStyle = "display: none;">
+        <#else>
+            <#assign scenarioStyle = "">
+        </#if>
+		<div id="${scenarioContentId}" class="content" style="${scenarioStyle}">
+            <#if scenario.getMeta()??><@renderMeta scenario.getMeta()/></#if>
+            <#if scenario.getGivenStories()??><@renderGivenStories scenario.getGivenStories()/></#if>
+            <#if scenario.getExamplesTable()??>
+				<div class="examples">
+					<div class="keyword">${keywords.examplesTable}</div>
+                    <#list scenario.getExamplesSteps() as step>
+						<div class="step">${step?html}</div>
+                    </#list>
+                    <@renderTable scenario.getExamplesTable()/>
+                <#--examples themselves-->
+                    <#if scenario.getExamples()??>
+                        <#list scenario.getExamples() as example>
+							<div class="example">
+								<div class="title">
+									<span class="keyword">${keywords.examplesTableRow}</span><span class="text"> ${example?html}</span>
+								</div>
+                                <#assign steps = scenario.getStepsByExample(example)>
+                                <#list steps as step>
+                                    <@renderStep step/>
+                                </#list>
+							</div>
+                        </#list>
+                    </#if>
+				</div>
+				<!-- end examples -->
+            <#else> <!-- normal scenario steps -->
+				<div class="steps">
+                    <#assign steps = scenario.getSteps()>
+            <#list steps as step>
+                    <@renderStep step/>
+                </#list>
+				</div>
+            </#if>
+            <#if scenario.getPendingMethods()??>
+                <#list scenario.getPendingMethods() as method>
+					<div>
+						<pre class="pending">${method?html}</pre>
+					</div>
+                </#list>
+            </#if>
+		</div>
+	</div>
+	<!-- end scenario -->
+    <#assign scenarioIndex = scenarioIndex + 1>
+</#list>
+<#if story.isCancelled()?string == 'true'>
+	<div class="cancelled">${keywords.storyCancelled} (${keywords.duration} ${story.storyDuration.durationInSecs} s)</div>
+</#if>
+</div>
+<!-- end story -->
+
+<#-- report end ========================================================================================================================-->
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-example-project/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/pom.xml	(date 1412147330000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/pom.xml	(revision )
@@ -29,7 +29,7 @@
                                 <artifactItem>
                                     <groupId>org.jbehave.site</groupId>
                                     <artifactId>jbehave-site-resources</artifactId>
-                                    <version>3.1.1</version>
+                                    <version>3.9.5</version>
                                     <type>zip</type>
                                     <outputDirectory>${project.build.directory}/jbehave/view</outputDirectory>
                                 </artifactItem>
@@ -47,7 +47,7 @@
                                 <artifactItem>
                                     <groupId>org.jbehave</groupId>
                                     <artifactId>jbehave-core</artifactId>
-                                    <version>3.1.2</version>
+                                    <version>3.9.5</version>
                                     <outputDirectory>${project.build.directory}/jbehave/view</outputDirectory>
                                     <includes>**\/*.css,**\/*.ftl,**\/*.js</includes>
                                 </artifactItem>
@@ -89,7 +89,7 @@
         <dependency>
             <groupId>org.jbehave</groupId>
             <artifactId>jbehave-core</artifactId>
-            <version>3.9.2</version>
+            <version>3.9.5</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
@@ -108,6 +108,11 @@
             <artifactId>jersey-json</artifactId>
             <version>1.18</version>
             <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.thoughtworks.paranamer</groupId>
+            <artifactId>paranamer</artifactId>
+            <version>2.7</version>
         </dependency>
     </dependencies>
 </project>
Index: jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java	(date 1412147330000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java	(revision )
@@ -41,7 +41,6 @@
     @ParameterInfo(suggestedValuesEnum = Format.class)
     private String format;
 
-
     public Double getDiscount() {
         return discount;
     }
Index: jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookStoreTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookStoreTest.java	(date 1412147330000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/BookStoreTest.java	(revision )
@@ -1,9 +1,10 @@
 package com.jbehaveforjira.exampleproject;
 
 import com.jbehaveforjira.groovyclient.GroovyStepDocReporter;
-import com.jbehaveforjira.groovyclient.GroovyStoryReporter;
+import com.jbehaveforjira.groovyclient.GroovyTemplateStoryReporter;
 import com.jbehaveforjira.javaclient.JiraStoryLoader;
 import com.jbehaveforjira.javaclient.JiraStoryPathsFinder;
+import org.jbehave.core.configuration.Keywords;
 import org.jbehave.core.configuration.MostUsefulConfiguration;
 import org.jbehave.core.embedder.Embedder;
 import org.jbehave.core.junit.JUnitStories;
@@ -14,8 +15,10 @@
 import org.jbehave.core.steps.CandidateSteps;
 import org.jbehave.core.steps.InjectableStepsFactory;
 import org.jbehave.core.steps.InstanceStepsFactory;
+import org.jbehave.core.steps.ParameterConverters;
 import org.junit.Test;
 
+import java.io.File;
 import java.util.List;
 
 /**
@@ -47,7 +50,10 @@
                     public StoryReporter reporterFor(String storyPath, org.jbehave.core.reporters.Format format) {
                         if (format.equals(org.jbehave.core.reporters.Format.HTML)) {
 //                            return new JiraStoryReporter(jiraUrl, jiraProject, "admin", "admin", environment);
-                            return new GroovyStoryReporter(jiraUrl, jiraProject, "admin", "admin", environment);
+//                            return new GroovyStoryReporter(jiraUrl, jiraProject, "admin", "admin", environment);
+                            Keywords keywords = keywords();
+                            return new GroovyTemplateStoryReporter(new File("target", "story_report.xml"), keywords,
+                                    jiraUrl, jiraProject, "admin", "admin", environment);
                         } else {
                             return super.reporterFor(storyPath, format);
                         }
@@ -71,7 +77,12 @@
         StepdocReporter stepDocReporter = new GroovyStepDocReporter(jiraUrl, jiraProject, "admin", "admin");
         configuration.useStepdocReporter(stepDocReporter);
 
+        ParameterConverters parameterConverters = configuration.parameterConverters();
+        parameterConverters.addConverters(new ParameterConverters.ExamplesTableParametersConverter());
+        configuration.useParameterConverters(parameterConverters);
+
         useConfiguration(configuration);
+
     }
 
     @Test
@@ -88,6 +99,7 @@
             embedder.runStoriesAsPaths(storyPaths());
         } catch (Exception e) {
             e.printStackTrace();
+            throw e;
         } finally {
             // report step docs
             List<CandidateSteps> candidateSteps = embedder.stepsFactory().createCandidateSteps();
