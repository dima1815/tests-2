Index: jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/org/bitbucket/jbehaveforjira/exampleproject/BookStoreTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/org/bitbucket/jbehaveforjira/exampleproject/BookStoreTest.java	(revision f2e209d7e57e40b60770092d48f4cec80ae0a366)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/org/bitbucket/jbehaveforjira/exampleproject/BookStoreTest.java	(revision )
@@ -35,7 +35,7 @@
                 new StoryReporterBuilder() {
                     public StoryReporter reporterFor(String storyPath, org.jbehave.core.reporters.Format format) {
                         if (format.equals(org.jbehave.core.reporters.Format.HTML)) {
-                            return new JiraStoryReporter(jiraUrl, jiraProject, environment);
+                            return new JiraStoryReporter(jiraUrl, jiraProject, "admin", "admin", environment);
                         } else {
                             return super.reporterFor(storyPath, format);
                         }
@@ -50,11 +50,11 @@
         );
 
         // set Jira story loader
-        JiraStoryLoader jiraLoader = new JiraStoryLoader(jiraUrl, jiraProject);
+        JiraStoryLoader jiraLoader = new JiraStoryLoader(jiraUrl, jiraProject, "admin", "admin");
         configuration.useStoryLoader(jiraLoader);
 
         // set Jira step doc reporter
-        StepdocReporter stepDocReporter = new JiraStepDocReporter(jiraUrl, jiraProject);
+        StepdocReporter stepDocReporter = new JiraStepDocReporter(jiraUrl, jiraProject, "admin", "admin");
 //        StepdocReporter stepDocReporter = new org.bitbucket.jbehaveforjira.javaclient.GroovyStepDocReporter(jiraUrl, jiraProject);
         configuration.useStepdocReporter(stepDocReporter);
 
@@ -82,7 +82,7 @@
     @Override
     protected List<String> storyPaths() {
 
-        JiraStoryPathsFinder storyFinder = new JiraStoryPathsFinder(jiraUrl, jiraProject);
+        JiraStoryPathsFinder storyFinder = new JiraStoryPathsFinder(jiraUrl, jiraProject, "admin", "admin");
         List<String> paths = storyFinder.findPaths();
         return paths;
     }
