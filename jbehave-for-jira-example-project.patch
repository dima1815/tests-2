Index: jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/transaction/FxTransaction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/transaction/FxTransaction.java	(date 1411760882000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/transaction/FxTransaction.java	(revision )
@@ -49,4 +49,8 @@
 
     @Parameter(name = "Reference")
     Long reference;
+
+    @Parameter(name = "Value date")
+    @ParameterInfo(formatPattern = "[1-3]?[0-9]/((0[1-9])|(1[0-2]))/[1,2][0-9]{3}", formatDisplayText = "dd/MM/yyyy")
+    String valueDate;
 }
Index: jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java	(date 1411760882000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/main/java/com/jbehaveforjira/exampleproject/bookstore/Book.java	(revision )
@@ -4,8 +4,6 @@
 import org.jbehave.core.annotations.AsParameters;
 import org.jbehave.core.annotations.Parameter;
 
-import java.util.List;
-
 /**
  * @author Maryna Pristrom
  */
@@ -39,10 +37,11 @@
 
     private Boolean inStock;
 
-    @Parameter(name = "Formats")
+    @Parameter(name = "Format")
     @ParameterInfo(suggestedValuesEnum = Format.class)
-    private List<String> formats;
+    private String format;
 
+
     public Double getDiscount() {
         return discount;
     }
@@ -75,8 +74,8 @@
         return inStock;
     }
 
-    public List<String> getFormats() {
-        return formats;
+    public String getFormat() {
+        return format;
     }
 
     @Override
Index: jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/TransactionSteps.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/TransactionSteps.java	(date 1411760882000)
+++ jbehave-for-jira/jbehave-for-jira-example-project/src/test/java/com/jbehaveforjira/exampleproject/TransactionSteps.java	(revision )
@@ -4,11 +4,14 @@
 import com.jbehaveforjira.exampleproject.transaction.FxTransaction;
 import com.jbehaveforjira.javaclient.ParameterInfo;
 import org.jbehave.core.annotations.Given;
+import org.jbehave.core.annotations.When;
 
 public class TransactionSteps {
 
     @Given("an FX transaction to buy $amount of $currency")
-    public void givenFxTransaction(@ParameterInfo(suggestedValues = {"100", "200", "300", "1000", "10000"}) Double amount, Currency currency) {
+    public void givenFxTransaction(@ParameterInfo(suggestedValues = {"100", "200", "300", "1000", "10000"},
+        formatPattern = "[0-9]{1,10}\\.[0-9]{2}", formatDisplayText = "###.##") Double amount,
+                                   Currency currency) {
         //
     }
 
@@ -19,6 +22,13 @@
 
     @Given("an FX transaction with the following fields: $transactionFields")
     public void givenFxTransaction(FxTransaction fxTransaction) {
+
+    }
+
+    @When("I query for transactions with value date $valueDate")
+    public void fetchTransactionsForValueDate(@ParameterInfo(
+            formatPattern = "[1-3]?[0-9]/((0[1-9])|(1[0-2]))/[1,2][0-9]{3}",
+            formatDisplayText = "dd/MM/yyyy") String valueDate) {
 
     }
 
