Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision )
@@ -192,6 +192,23 @@
         AJS.$('#storyReportsPanel').html(storyReportsContent);
         AJS.tabs.setup();
 
+        // assign expand triggers for failure traces
+        AJS.$('.failure-trace-expander-trigger').each(function (index, element) {
+
+            AJS.$(element).click(function(eventObject) {
+                eventObject.preventDefault();
+                var target = eventObject.target;
+                var targetNode = AJS.$(target)[0];
+                var traceContainerId = targetNode.getAttribute("failure-trace-container");
+                AJS.$("#" + traceContainerId).toggle();
+                var replaceText =targetNode.getAttribute("replace-text");
+                var currentHtml = AJS.$(targetNode).html();
+                AJS.$(targetNode).html(replaceText);
+                targetNode.setAttribute("replace-text", currentHtml);
+            });
+
+        });
+
         debug("# showStoryReports");
     }
 
@@ -266,7 +283,7 @@
 //            AJS.$("#storyMsgBar").empty();
             var waitingMsg = execspec.viewissuepage.showstory.renderWaitingMessage();
             AJS.$('#storyEditedMsgContainer').html(waitingMsg);
-            AJS.$('.save-story-button-spinner').spin();
+//            AJS.$('#save-story-button-spinner').spin();
         }
 
         this.showSuccessMessage = function (saveCancelMsg) {
@@ -585,6 +602,12 @@
             return matchedResult != null;
         }
 
+        this.startsWithAfter = function (text) {
+            var regExpPattern = new RegExp("^(After:)");
+            var matchedResult = regExpPattern.exec(text);
+            return matchedResult != null;
+        }
+
         this.startsWithOutcome = function (text) {
             var regExpPattern = new RegExp("^(Outcome:)\\s");
             var matchedResult = regExpPattern.exec(text);
@@ -755,6 +778,17 @@
             }
         }
 
+        this.lineStartsWithAfterOrOutcome = function (lineNumber) {
+
+            var lineHandle = editor.getLineHandle(lineNumber);
+            var lineText = lineHandle.text;
+            if (textUtils.startsWithAfter(lineText) || textUtils.startsWithOutcome(lineText)) {
+                return true;
+            } else {
+                return false;
+            }
+        }
+
         this.findTabularParameterEndingLineAfter = function (tableStartLine, notAtOrAfter) {
             var nextLineNumber = tableStartLine + 1;
             var lastStepLine = tableStartLine;
@@ -781,7 +815,8 @@
             var lastStepLine = lineNumber;
             while (nextLineNumber < lineCount) {
                 if (this.lineStartsWithStepKeyword(nextLineNumber)
-                    || this.lineStartsWithScenarioOrExamples(nextLineNumber)) {
+                    || this.lineStartsWithScenarioOrExamples(nextLineNumber)
+                    || this.lineStartsWithAfterOrOutcome(nextLineNumber)) {
                     break;
                 } else {
                     lastStepLine = nextLineNumber;
@@ -1041,7 +1076,7 @@
 
                 while (tableStartingLine != -1) {
                     // we have found at least one table in the edited text
-                    var tableEndingLine = editorUtils.findTabularParameterEndingLineAfter(tableStartingLine, editor.lineCount() - 1);
+                    var tableEndingLine = editorUtils.findTabularParameterEndingLineAfter(tableStartingLine, editor.lineCount());
                     if (tableEndingLine > tableStartingLine) {
                         // it actually a table, i.e. more than 1 line of text that starts with a '|'
                         tableAligner.alignTableBetween(tableStartingLine, tableEndingLine);
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js	(revision )
@@ -59,6 +59,8 @@
                     allowSteps: false,
                     allowAndStep: false,
 
+                    inTable: false,
+
                     inExamples: false,
                     allowExamples: false,
 
@@ -83,35 +85,40 @@
                     state.inLifecycleOutcome = false;
                 }
 
+                state.lastTokenType = "";
+
                 // LINE COMMENT
-                if (stream.sol() && (stream.match(/!--.*/) || stream.match(/\|--.*/))) {
+                if (stream.sol() && !state.inTable && (stream.match(/!--.*/) || stream.match(/\|--.*/))) {
 //                    state.lastTokenType =  "comment";
-                    state.lastTokenType = "jb-story-comment";
+                    state.lastTokenType += " jb-story-comment";
 
 //                    // TABLE COMMENT
-//                } else if (stream.sol() && stream.match(/\|--.*/)) {
-//                    return "comment";
+                } else if (stream.sol() && state.inTable && stream.match(/\|--.*/)) {
+                    state.lastTokenType += " jb-story-table-comment";
 
                     // META title
                 } else if (state.allowMeta && stream.sol() && stream.match(/(Meta):/)) {
 
                     state.inMeta = true;
                     state.inDescription = false;
+                    state.inTable = false;
 
                     state.allowDescription = false;
                     state.allowMeta = false;
                     state.allowMetaField = true;
 
-                    state.lastTokenType = "jb-story-meta-title";
+                    state.lastTokenType += " jb-story-meta-title";
 
                     // META field
                 } else if (state.allowMetaField && stream.sol() && stream.match(/@.*/)) {
 
-                    state.lastTokenType = "jb-story-meta-field";
+                    state.inTable = false;
+                    state.lastTokenType += " jb-story-meta-field";
 
                     // Narrative - title
                 } else if (state.allowNarrative && stream.sol() && stream.match(/Narrative:/)) {
 
+                    state.inTable = false;
                     state.inDescription = false;
                     state.inNarrative = true;
 
@@ -123,7 +130,7 @@
 
                     state.allowSteps = false;
 
-                    state.lastTokenType = "jb-story-narrative-title";
+                    state.lastTokenType += " jb-story-narrative-title";
 
                     // Narrative - In order to - keyword
                 } else if (state.allowNarrativeInOrderTo && stream.sol() && stream.match(/(In order to )/)) {
@@ -131,8 +138,9 @@
                     state.allowNarrativeInOrderTo = false;
                     state.allowNarrativeAsA = true;
                     state.inNarrativeField = true;
+                    state.inTable = false;
 
-                    state.lastTokenType = "jb-story-narrative-field-keyword";
+                    state.lastTokenType += " jb-story-narrative-field-keyword";
 
                     // Narrative - As a - keyword
                 } else if (state.allowNarrativeAsA && stream.sol() && stream.match(/(As a )/)) {
@@ -140,24 +148,27 @@
                     state.allowNarrativeAsA = false;
                     state.allowNarrativeIWantTo = true;
                     state.inNarrativeField = true;
+                    state.inTable = false;
 
-                    state.lastTokenType = "jb-story-narrative-field-keyword";
+                    state.lastTokenType += " jb-story-narrative-field-keyword";
 
                     // Narrative - I want to - keyword
                 } else if (state.allowNarrativeIWantTo && stream.sol() && stream.match(/(I want to )/)) {
 
                     state.allowNarrativeIWantTo = false;
                     state.inNarrativeField = true;
+                    state.inTable = false;
 
                     state.allowScenario = true;
                     state.allowLifecycle = true;
 
-                    state.lastTokenType = "jb-story-narrative-field-keyword";
+                    state.lastTokenType += " jb-story-narrative-field-keyword";
 
                     // Narrative - field value
                 } else if (state.inNarrativeField && stream.match(/.*/)) {
 
-                    state.lastTokenType = "jb-story-narrative-field-value";
+                    state.lastTokenType += " jb-story-narrative-field-value";
+                    state.inTable = false;
 
                     // Lifecycle
                 } else if (state.allowLifecycle && stream.sol() && stream.match(/Lifecycle:/)) {
@@ -167,8 +178,9 @@
                     state.allowLifecycle = false;
                     state.allowLifecycleBefore = true;
                     state.allowLifecycleAfter = true;
+                    state.inTable = false;
 
-                    state.lastTokenType = "jb-story-lifecycle";
+                    state.lastTokenType += " jb-story-lifecycle";
 
                     // Lifecycle - Before
                 } else if (state.allowLifecycleBefore && stream.sol() && stream.match(/Before:/)) {
@@ -176,6 +188,7 @@
                     state.inStep = false;
                     state.inLifecycleBefore = true;
                     state.inLifecycleAfter = false;
+                    state.inTable = false;
 
                     state.allowLifecycleBefore = false;
                     state.allowSteps = true;
@@ -185,7 +198,7 @@
                     state.currentStepKeyword = null;
                     state.lastStepStartedAt = null;
 
-                    state.lastTokenType = "jb-story-lifecycle-before";
+                    state.lastTokenType += " jb-story-lifecycle-before";
 
                     // Lifecycle - After
                 } else if (state.allowLifecycleAfter && stream.sol() && stream.match(/After:/)) {
@@ -193,6 +206,7 @@
                     state.inStep = false;
                     state.inLifecycleBefore = false;
                     state.inLifecycleAfter = true;
+                    state.inTable = false;
 
                     state.allowLifecycleBefore = false;
                     state.allowLifecycleAfter = false;
@@ -201,18 +215,19 @@
                     state.allowSteps = false;
                     state.allowAndStep = false;
 
-                    state.lastTokenType = "jb-story-lifecycle-after";
+                    state.lastTokenType += " jb-story-lifecycle-after";
 
                     // Lifecycle - Outcome keyword
                 } else if (state.allowLifecycleOutcome && stream.sol() && stream.match(/Outcome: /)) {
 
                     state.inStep = false;
+                    state.inTable = false;
                     state.inLifecycleOutcome = true;
 
                     state.allowLifecycleOutcome = false;
                     state.allowScenario = false;
 
-                    state.lastTokenType = "jb-story-lifecycle-outcome-keyword";
+                    state.lastTokenType += " jb-story-lifecycle-outcome-keyword";
 
                     // Lifecycle - Outcome value
                 } else if (state.inLifecycleOutcome && !stream.sol()
@@ -220,20 +235,22 @@
 
                     state.allowSteps = true;
 
+                    state.inTable = false;
                     state.lastStepKeyword = null;
                     state.currentStepKeyword = null;
                     state.lastStepStartedAt = null;
 
-                    state.lastTokenType = "jb-story-lifecycle-outcome-value";
+                    state.lastTokenType += " jb-story-lifecycle-outcome-value";
 
                     // SCENARIO keyword
-                } else if (state.allowScenario && stream.sol() && stream.match(/(Scenario):/)) {
+                } else if (state.allowScenario && stream.sol() && stream.match(/(Scenario): /)) {
 
                     state.inStep = false;
                     state.inLifecycle = false;
                     state.inLifecycleAfter = false;
                     state.inScenario = true;
                     state.inScenarioTitleLine = true;
+                    state.inTable = false;
 
                     state.allowLifecycle = false;
                     state.allowLifecycleBefore = false;
@@ -247,12 +264,13 @@
                     state.currentStepKeyword = null;
                     state.lastStepStartedAt = null;
 
-                    state.lastTokenType = "jb-story-scenario-keyword";
+                    state.lastTokenType += " jb-story-scenario-keyword";
 
                     // SCENARIO title
                 } else if (state.inScenarioTitleLine && !stream.sol() && stream.match(/.*/)) {
 
-                    state.lastTokenType = "jb-story-scenario-title";
+                    state.inTable = false;
+                    state.lastTokenType += " jb-story-scenario-title";
 
                     // GIVEN
                 } else if (state.allowSteps && stream.sol() && stream.match(/(Given )/)) {
@@ -274,7 +292,7 @@
                         state.allowAndStep = true;
                     }
 
-
+                    state.inTable = false;
                     state.inStep = true;
                     state.stepNumber++;
                     state.stepBody = "";
@@ -287,7 +305,7 @@
 
                     state.allowExamples = true;
 
-                    state.lastTokenType = "jb-story-step-keyword given-step";
+                    state.lastTokenType += " jb-story-step-keyword given-step";
 
                     // WHEN
                 } else if (state.allowSteps && stream.sol() && stream.match(/(When )/)) {
@@ -310,6 +328,7 @@
                     }
                     state.currentStepKeyword = "When";
 
+                    state.inTable = false;
                     state.stepStartingKeyword = "When "; //TODO
                     state.stepNumber++;
                     state.stepBody = "";
@@ -322,7 +341,7 @@
 
                     state.allowExamples = true;
 
-                    state.lastTokenType = "jb-story-step-keyword when-step";
+                    state.lastTokenType += " jb-story-step-keyword when-step";
 
                     // THEN
                 } else if (state.allowSteps && stream.sol() && stream.match(/(Then )/)) {
@@ -346,6 +365,7 @@
 
                     state.allowExamples = true;
 
+                    state.inTable = false;
                     state.inStep = true;
                     state.stepNumber++;
                     state.stepBody = "";
@@ -356,7 +376,7 @@
 
                     state.currentStepNumber++;
 
-                    state.lastTokenType = "jb-story-step-keyword then-step";
+                    state.lastTokenType += " jb-story-step-keyword then-step";
 
                     // AND
                 } else if (state.allowAndStep && stream.sol() && stream.match(/(And )/)) {
@@ -370,6 +390,7 @@
                     }
 
                     state.inStep = true;
+                    state.inTable = false;
 
                     state.stepNumber++;
                     state.stepBody = "";
@@ -386,25 +407,27 @@
 
                     state.currentStepNumber++;
 
-                    state.lastTokenType = "jb-story-step-keyword " + state.lastStepKeyword + "-step";
+                    state.lastTokenType += " jb-story-step-keyword " + state.lastStepKeyword + "-step";
 
                     // Examples
                 }else if (state.allowExamples && stream.sol() && stream.match(/(Examples):/)) {
 
                     state.inExamples = true;
                     state.inStep = false;
+                    state.inTable = false;
 
                     state.allowSteps = false;
                     state.allowAndStep = false;
                     state.allowExamples = false;
 
-                    state.lastTokenType = "jb-story-examples";
+                    state.lastTokenType += " jb-story-examples";
 
                     // Description
                 } else if (stream.sol() && state.allowDescription && stream.match(/(.*)/)) {
 
+                    state.inTable = false;
                     state.inDescription = true;
-                    state.lastTokenType = "jb-story-description-line";
+                    state.lastTokenType += " jb-story-description-line";
 
                     // Step body
                 } else if (state.inStep && stream.match(/(.*)/)) {
@@ -420,17 +443,39 @@
                     var stepBody = state.stepBody;
                     console.log("stepBody - " + stepBody);
 
-                    state.lastTokenType = "jb-story-step-body";
+                    state.lastTokenType += " jb-story-step-body";
 
+                    var current = stream.current();
+                    if (current.substring(0, 1) == "|") {
+                        state.lastTokenType += " jb-story-table-line";
+                        if (current.substring(0, 3) != "|--" && !state.inTable) {
+                            state.lastTokenType += " jb-story-first-table-line";
+                            state.inTable = true;
+                        }
+                    } else {
+                        state.inTable = false;
+                    }
+
                     // Examples body
                 } else if (state.inExamples && stream.match(/(.*)/)) {
 
-                    state.lastTokenType = "jb-story-examples-body";
+                    state.lastTokenType += " jb-story-examples-body";
 
+                    var current = stream.current();
+                    if (current.substring(0, 1) == "|") {
+                        state.lastTokenType += " jb-story-table-line";
+                        if (current.substring(0, 3) != "|--" && !state.inTable) {
+                            state.lastTokenType += " jb-story-first-table-line";
+                            state.inTable = true;
+                        }
+                    } else {
+                        state.inTable = false;
+                    }
+
                     // Fall through
                 } else {
                     stream.match(/(.*)/);
-                    state.lastTokenType = "jb-story-invalid-token";
+                    state.lastTokenType += " jb-story-invalid-token";
                 }
 
                 state.current = stream.current();
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(revision )
@@ -31,18 +31,9 @@
 {template .renderWaitingMessage}
  <div>
     <div class="savingMsgDiv">Saving&nbsp;&nbsp;&nbsp;&nbsp;</div>
-    <div class="save-story-button-spinner"></div>
+//    <div id="save-story-button-spinner" class="button-spinner"></div>
+    <span class="aui-icon aui-icon-wait">Saving...</span>
 </div>
-//    <table>
-//        <tr>
-//            <td style="width: 100%;">
-//                Saving...
-//            </td>
-//            <td style="width: auto;">
-//                <div class='button-spinner'></div>
-//            </td>
-//        </tr>
-//    </table>
 {/template}
 
 /**
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css	(revision )
@@ -82,10 +82,14 @@
     font-style: italic;
 }
 
-.cm-jb-story-step-keyword.matched-step {
+.cm-jb-story-step-keyword.matched-step, .matched-step .cm-jb-story-step-keyword {
     font-style: normal;
 }
 
+/*.matched-step.cm-jb-story-step-keyword.failed, .matched-step .cm-jb-story-step-keyword.failed {*/
+    /*background-color: #ffb1b8;*/
+/*}*/
+
 /*.hint-step-keyword {*/
 /*color: #aa5500;*/
 /*font-weight: bold;*/
@@ -107,11 +111,27 @@
     font-style: normal;
 }
 
+.cm-jb-story-step-body.matched-step, .matched-step .cm-jb-story-step-body {
+    font-style: normal;
+}
+
 .cm-jb-story-step-body.matched-step.step-parameter {
     font-weight: bold;
+    /*font-weight: normal;*/
     color: purple;
 }
 
+.cm-jb-story-step-body.matched-step.step-parameter.cm-jb-story-table-line {
+    /*font-weight: normal;*/
+}
+
+.cm-jb-story-step-body.matched-step.step-parameter.cm-jb-story-first-table-line {
+    /*font-weight: bold;*/
+    /*color: lightsteelblue;*/
+    /*font-style: italic;*/
+    /*background-color: lightgoldenrodyellow;*/
+}
+
 .cm-jb-story-examples {
     color: firebrick;
     font-weight: bold;
@@ -119,6 +139,7 @@
 
 .cm-jb-story-examples-body {
     color: purple;
+    font-weight: bold;
 }
 
 .savingMsgDiv {
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryServiceImpl.java	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryServiceImpl.java	(revision )
@@ -129,7 +129,7 @@
     @Override
     public List<JiraStory> findByProjectKey(String projectKey) {
 
-        List<Story> stories = storyDao.findAll();
+        List<Story> stories = storyDao.findByProjectKey(projectKey);
 
         List<JiraStory> storyDTOs = new ArrayList<JiraStory>(stories.size());
         for (Story story : stories) {
Index: jbehave-for-jira/jbehave-for-jira-plugin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/pom.xml	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/pom.xml	(revision )
@@ -13,7 +13,8 @@
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
         <amps.version>4.2.10</amps.version>
         <ao.version>0.19.7</ao.version>
-        <jira.version>6.1</jira.version>
+        <!--<jira.version>6.1</jira.version>-->
+        <jira.version>6.0.8</jira.version>
         <java.version>1.6</java.version>
     </properties>
     <build>
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(date 1409862849000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(revision )
@@ -13,7 +13,7 @@
 
 .aui-badge.pending {
     /*background-color: #4A6785;*/
-    background-color: #FFD351;
+    background-color: orange;
 }
 
 .aui-badge.skipped {
@@ -22,12 +22,12 @@
 
 /* Story report */
 .aui-badge.not-performed {
-    /*background-color: #fffe54;*/
+    background-color: dimgrey;
     /*apply default jira color scheme*/
 }
 
 /*pre.pending {*/
-    /*padding-left: 20px;*/
+/*padding-left: 20px;*/
 /*}*/
 
 /*.story-report-tab {*/
@@ -58,4 +58,82 @@
 /*font-size: 20px;*/
 /*font-weight: bold;*/
 /*padding-bottom: 5px;*/
-/*}*/
\ No newline at end of file
+/*}*/
+
+/*.story-report .cm-jb-story-description-line {*/
+/*padding-bottom: 10px;*/
+/*}*/
+
+/*table.tabular-parameter {*/
+/*border: 1px solid black;*/
+/*padding: 0px;*/
+/*margin: 0px;*/
+/*}*/
+
+/*table.tabular-parameter th {*/
+/*border: 1px solid black;*/
+/*margin: 0px;*/
+/*padding: 0px;*/
+/*}*/
+
+/*table.tabular-parameter td {*/
+/*border: 1px solid black;*/
+/*margin: 0px;*/
+/*padding: 0px;*/
+/*}*/
+/*table.tabular-parameter   {*/
+/*display: table; border-collapse: collapse;*/
+/*}*/
+/*tr {*/
+/*display: table-row; border: 1px solid #000;*/
+/*}*/
+/*td {*/
+/*display: table-cell;*/
+/*}*/
+table.tabular-parameter {
+    border: solid 1px purple;
+    /*margin: 0px;*/
+    /*padding: 0px;*/
+    border-collapse: collapse;
+}
+
+table.tabular-parameter td, th {
+    border-left: solid 1px purple;
+    /*border: solid 1px black;*/
+    font-weight: normal;
+    margin: 0px;
+    padding: 4px;
+}
+
+.cm-jb-story-step-failed-keyword {
+    /*font-weight: bold;*/
+    color: #ff0000;
+}
+
+.cm-jb-story-keyword-notPerformed {
+    color: #808080;
+}
+
+.cm-jb-story-step-failed-message {
+    color: #ff0000;
+}
+
+.cm-jb-story-step-successful-message {
+
+    color: green;
+}
+
+.cm-jb-story-keyword-pending {
+    color: orange;
+}
+
+.jb-story-report-step {
+    padding-top: 5px;
+}
+
+.jb-scenario-example {
+    color: firebrick;
+    font-weight: bold;
+    padding-top: 10px;
+}
+
