Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint.ORIG.css
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint.ORIG.css	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint.ORIG.css	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
@@ -1,38 +0,0 @@
-.CodeMirror-hints {
-    position: absolute;
-    z-index: 10;
-    overflow: hidden;
-    list-style: none;
-
-    margin: 0;
-    padding: 2px;
-
-    -webkit-box-shadow: 2px 3px 5px rgba(0, 0, 0, .2);
-    -moz-box-shadow: 2px 3px 5px rgba(0, 0, 0, .2);
-    box-shadow: 2px 3px 5px rgba(0, 0, 0, .2);
-    border-radius: 3px;
-    border: 1px solid silver;
-
-    background: white;
-    font-size: 90%;
-    font-family: monospace;
-
-    max-height: 20em;
-    overflow-y: auto;
-}
-
-.CodeMirror-hint {
-    margin: 0;
-    padding: 0 4px;
-    border-radius: 2px;
-    max-width: 19em;
-    overflow: hidden;
-    white-space: pre;
-    color: black;
-    cursor: pointer;
-}
-
-.CodeMirror-hint-active {
-    background: #08f;
-    color: white;
-}
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryResourceFind.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryResourceFind.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryFindResource.java	(revision )
@@ -27,7 +27,7 @@
  * @since 2.0.0-SNAPSHOT
  */
 @Path("/find")
-public class StoryResourceFind {
+public class StoryFindResource {
 
     private Logger log = LoggerFactory.getLogger(this.getClass());
 
@@ -41,7 +41,7 @@
 
     private JiraAuthenticationContext authenticationContext;
 
-    public StoryResourceFind(StoryService storyService,
+    public StoryFindResource(StoryService storyService,
                              StoryReportService storyReportService,
                              StepDocsService stepDocsSerivce, SearchService searchService,
                              JiraAuthenticationContext authenticationContext) {
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/conditions/ProfileUserEqualsCurrentUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/conditions/ProfileUserEqualsCurrentUser.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/conditions/ProfileUserEqualsCurrentUser.java	(revision )
@@ -7,7 +7,7 @@
 import java.util.Map;
 
 /**
- * TODO - add at least one line of java doc comment.
+ * Whether current user is equal to the profile user.
  *
  * @author stasyukd
  * @since 6.0.0-SNAPSHOT
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/PageUtils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/PageUtils.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/PageUtils.js	(revision )
@@ -19,13 +19,6 @@
         return AJS.$.trim(AJS.$("#key-val").text());
     };
 
-//    this.getIssueKey = function () {
-//        if (JIRA.IssueNavigator.isNavigator()) {
-//            return JIRA.IssueNavigator.getSelectedIssueKey();
-//        } else {
-//            return AJS.$.trim(AJS.$("#key-val").text());
-//        }
-//    };
 
     // Function for getting the project key of the Issue being edited.
     this.getProjectKey = function () {
@@ -37,21 +30,3 @@
 
 }
 
-//AJS.$(function () {
-//    JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function (e, context, reason) {
-//        var $context = AJS.$(context);
-//
-//        // Find our web panel. Handles the pageLoad and panelRefreshed reasons.
-//        var $webPanel = $context.find("*").andSelf().filter("#story-panel");
-//        if ($webPanel.length > 0) {
-//            console.log("processing - NEW_CONTENT_ADDED event for jbehave panel");
-//            jBehaveStoryView.processStoryPayload(jBehaveStoryView.$storyPayload);
-//        }
-//
-//        // Find our custom fields. There may be multiple!
-////        $context.find(".my-custom-field").each(function() {
-////            var $customField = AJS.$(this);
-////            // ...
-////        });
-//    });
-//});
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/edit-story.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/edit-story.css	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/edit-story.css	(revision )
@@ -15,7 +15,7 @@
 
 #storyMsgBar {
     /*border: solid #ca7841 thin;*/
-    width: 94%;
+    width: 100%;
     /*height: 45px;*/
     /*max-height: 45px;*/
     display:inline-block;
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm	(revision )
@@ -1,6 +1,57 @@
-##<div id="yuiEditorPanel" style="border-style: solid; border-width: 1px; border-color: green"></div>
-##<br><br><br>
-$webResourceManager.requireResourcesForContext("com.atlassian.auiplugin:aui-experimental-iconfont")
-$webResourceManager.requireResourcesForContext("execspec-view-issue-page-resources")
 <div id="story-panel"><!--DEFAULT content!--></div>
 
+##<div class="mod-content">
+##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field inactive">
+##        <form id="jbehaveStoryForm" class="" action="#">
+##            <div id="story-panel-container">
+##                <div id="story-panel"><!--DEFAULT content!--></div>
+##            </div>
+##            <span onclick="storyController.onEditorFocusHandler()" id="overlayIconContainer"
+##                  class="overlay-icon icon icon-edit-sml"></span>
+##
+##            <div id="storyEditorButtons" style="display: none;" tabindex="1" class="save-options">
+##                <button id="saveStoryButton" onclick="storyController.saveStoryHandler(event)"
+##                        type="submit" class="aui-button submit" accesskey="s"
+##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
+##                <button id="cancelEditStoryButton" onclick="storyController.cancelEditHandler(event)" type="cancel"
+##                        class="aui-button cancel"
+##                        accesskey="`" title="Press Alt+` to cancel"><span
+##                        class="icon icon-cancel">Cancel</span></button>
+##            </div>
+##        </form>
+##    </div>
+##</div>
+
+##<div class="mod-content">
+##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field active">
+##        <form class="ajs-dirty-warning-exempt aui" action="#">
+##            <div id="story-panel-container" class="active">
+##                <div id="story-panel" style="width: 100%"><!--DEFAULT content!--></div>
+##            </div>
+##            <span class="overlay-icon throbber"></span>
+##            <div tabindex="1" class="save-options">
+##                <button type="submit" class="aui-button submit" accesskey="s"
+##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
+##                <button type="cancel" class="aui-button cancel" accesskey="`" title="Press Alt+` to cancel"><span
+##                        class="icon icon-cancel">Cancel</span></button>
+##            </div>
+##        </form>
+##    </div>
+##</div>
+
+##<div class="mod-content">
+##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field active saving">
+##        <form class="ajs-dirty-warning-exempt aui" action="#">
+##            <div id="story-panel-container" class="active">
+##                <div id="story-panel" style="width: 100%"><!--DEFAULT content!--></div>
+##            </div>
+##            <span class="overlay-icon throbber"></span>
+##            <div tabindex="1" class="save-options">
+##                <button type="submit" class="aui-button submit" accesskey="s"
+##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
+##                <button type="cancel" class="aui-button cancel" accesskey="`" title="Press Alt+` to cancel"><span
+##                        class="icon icon-cancel">Cancel</span></button>
+##            </div>
+##        </form>
+##    </div>
+##</div>
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/gherkin/gherkin.js
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/gherkin/gherkin.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/gherkin/gherkin.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
@@ -1,178 +0,0 @@
-// CodeMirror, copyright (c) by Marijn Haverbeke and others
-// Distributed under an MIT license: http://codemirror.net/LICENSE
-
-/*
-Gherkin mode - http://www.cukes.info/
-Report bugs/issues here: https://github.com/marijnh/CodeMirror/issues
-*/
-
-// Following Objs from Brackets implementation: https://github.com/tregusti/brackets-gherkin/blob/master/main.js
-//var Quotes = {
-//  SINGLE: 1,
-//  DOUBLE: 2
-//};
-
-//var regex = {
-//  keywords: /(Feature| {2}(Scenario|In order to|As|I)| {4}(Given|When|Then|And))/
-//};
-
-(function(mod) {
-  if (typeof exports == "object" && typeof module == "object") // CommonJS
-    mod(require("../../lib/codemirror"));
-  else if (typeof define == "function" && define.amd) // AMD
-    define(["../../lib/codemirror"], mod);
-  else // Plain browser env
-    mod(CodeMirror);
-})(function(CodeMirror) {
-"use strict";
-
-CodeMirror.defineMode("gherkin", function () {
-  return {
-    startState: function () {
-      return {
-        lineNumber: 0,
-        tableHeaderLine: false,
-        allowNarrative: true,
-        allowDescription: false,
-        allowScenario: false,
-        allowSteps: false,
-        allowPlaceholders: false,
-        allowMultilineArgument: false,
-        inMultilineString: false,
-        inMultilineTable: false,
-        inKeywordLine: false
-      };
-    },
-    token: function (stream, state) {
-      if (stream.sol()) {
-        state.lineNumber++;
-        state.inKeywordLine = false;
-        if (state.inMultilineTable) {
-            state.tableHeaderLine = false;
-            if (!stream.match(/\s*\|/, false)) {
-              state.allowMultilineArgument = false;
-              state.inMultilineTable = false;
-            }
-        }
-      }
-
-      stream.eatSpace();
-
-      if (state.allowMultilineArgument) {
-
-        // STRING
-        if (state.inMultilineString) {
-          if (stream.match('"""')) {
-            state.inMultilineString = false;
-            state.allowMultilineArgument = false;
-          } else {
-            stream.match(/.*/);
-          }
-          return "string";
-        }
-
-        // TABLE
-        if (state.inMultilineTable) {
-          if (stream.match(/\|\s*/)) {
-            return "bracket";
-          } else {
-            stream.match(/[^\|]*/);
-            return state.tableHeaderLine ? "header" : "string";
-          }
-        }
-
-        // DETECT START
-        if (stream.match('"""')) {
-          // String
-          state.inMultilineString = true;
-          return "string";
-        } else if (stream.match("|")) {
-          // Table
-          state.inMultilineTable = true;
-          state.tableHeaderLine = true;
-          return "bracket";
-        }
-
-      }
-
-      // LINE COMMENT
-      if (stream.match(/#.*/)) {
-        return "comment";
-
-      // TAG
-      } else if (!state.inKeywordLine && stream.match(/@\S+/)) {
-        return "tag";
-
-      // FEATURE
-      } else if (!state.inKeywordLine && state.allowNarrative && stream.match(/(æ©Ÿèƒ½|åŠŸèƒ½|ãƒ•ã‚£ãƒ¼ãƒãƒ£|ê¸°ëŠ¥|à¹‚à¸„à¸£à¸‡à¸«à¸¥à¸±à¸|à¸„à¸§à¸²à¸¡à¸ªà¸²à¸¡à¸²à¸£à¸–|à¸„à¸§à¸²à¸¡à¸•à¹‰à¸­à¸‡à¸à¸²à¸£à¸—à¸²à¸‡à¸˜à¸¸à¸£à¸à¸´à¸ˆ|à²¹à³†à²šà³à²šà²³|à°—à±à°£à°®à±|à¨®à©à¨¹à¨¾à¨‚à¨¦à¨°à¨¾|à¨¨à¨•à¨¶ à¨¨à©à¨¹à¨¾à¨°|à¨–à¨¾à¨¸à©€à¨…à¨¤|à¤°à¥‚à¤ª à¤²à¥‡à¤–|ÙˆÙÛŒÚ˜Ú¯ÛŒ|Ø®Ø§ØµÙŠØ©|×ª×›×•× ×”|Ð¤ÑƒÐ½ÐºÑ†Ñ–Ð¾Ð½Ð°Ð»|Ð¤ÑƒÐ½ÐºÑ†Ð¸Ñ|Ð¤ÑƒÐ½ÐºÑ†Ð¸Ð¾Ð½Ð°Ð»Ð½Ð¾ÑÑ‚|Ð¤ÑƒÐ½ÐºÑ†Ð¸Ð¾Ð½Ð°Ð»|Ò®Ð·ÐµÐ½Ñ‡Ó™Ð»ÐµÐºÐ»ÐµÐ»ÐµÐº|Ð¡Ð²Ð¾Ð¹ÑÑ‚Ð²Ð¾|ÐžÑÐ¾Ð±Ð¸Ð½Ð°|ÐœÓ©Ð¼ÐºÐ¸Ð½Ð»ÐµÐº|ÐœÐ¾Ð³ÑƒÑ›Ð½Ð¾ÑÑ‚|Î›ÎµÎ¹Ï„Î¿Ï…ÏÎ³Î¯Î±|Î”Ï…Î½Î±Ï„ÏŒÏ„Î·Ï„Î±|WÅ‚aÅ›ciwoÅ›Ä‡|VlastnosÅ¥|Trajto|TÃ­nh nÄƒng|SavybÄ—|Pretty much|PoÅ¾iadavka|PoÅ¾adavek|Potrzeba biznesowa|Ã–zellik|Osobina|Ominaisuus|Omadus|OH HAI|MoguÄ‡nost|Mogucnost|JellemzÅ‘|HwÃ¦t|Hwaet|FunzionalitÃ |FunktionalitÃ©it|FunktionalitÃ¤t|Funkcja|Funkcionalnost|FunkcionalitÄte|Funkcia|Fungsi|Functionaliteit|FuncÈ›ionalitate|FuncÅ£ionalitate|Functionalitate|Funcionalitat|Funcionalidade|FonctionnalitÃ©|Fitur|FÄ«Äa|Feature|Eiginleiki|Egenskap|Egenskab|CaracterÃ­stica|Caracteristica|Business Need|Aspekt|Arwedd|Ahoy matey!|Ability):/)) {
-        state.allowScenario = true;
-        state.allowDescription = true;
-        state.allowPlaceholders = false;
-        state.allowSteps = false;
-        state.allowMultilineArgument = false;
-        state.inKeywordLine = true;
-        return "keyword";
-
-      // BACKGROUND
-      } else if (!state.inKeywordLine && state.allowDescription && stream.match(/(èƒŒæ™¯|ë°°ê²½|à¹à¸™à¸§à¸„à¸´à¸”|à²¹à²¿à²¨à³à²¨à³†à²²à³†|à°¨à±‡à°ªà°¥à±à°¯à°‚|à¨ªà¨¿à¨›à©‹à¨•à©œ|à¤ªà¥ƒà¤·à¥à¤ à¤­à¥‚à¤®à¤¿|Ø²Ù…ÛŒÙ†Ù‡|Ø§Ù„Ø®Ù„ÙÙŠØ©|×¨×§×¢|Ð¢Ð°Ñ€Ð¸Ñ…|ÐŸÑ€ÐµÐ´Ñ‹ÑÑ‚Ð¾Ñ€Ð¸Ñ|ÐŸÑ€ÐµÐ´Ð¸ÑÑ‚Ð¾Ñ€Ð¸Ñ|ÐŸÐ¾Ð·Ð°Ð´Ð¸Ð½Ð°|ÐŸÐµÑ€ÐµÐ´ÑƒÐ¼Ð¾Ð²Ð°|ÐžÑÐ½Ð¾Ð²Ð°|ÐšÐ¾Ð½Ñ‚ÐµÐºÑÑ‚|ÐšÐµÑ€ÐµÑˆ|Î¥Ï€ÏŒÎ²Î±Î¸ÏÎ¿|ZaÅ‚oÅ¼enia|Yo\-ho\-ho|Tausta|Taust|SituÄcija|Rerefons|Pozadina|Pozadie|PozadÃ­|Osnova|Latar Belakang|Kontext|Konteksts|Kontekstas|Kontekst|HÃ¡ttÃ©r|Hannergrond|Grundlage|GeÃ§miÅŸ|Fundo|Fono|First off|Dis is what went down|Dasar|Contexto|Contexte|Context|Contesto|CenÃ¡rio de Fundo|Cenario de Fundo|Cefndir|Bá»‘i cáº£nh|Bakgrunnur|Bakgrunn|Bakgrund|Baggrund|Background|B4|Antecedents|Antecedentes|Ã†r|Aer|Achtergrond):/)) {
-        state.allowPlaceholders = false;
-        state.allowSteps = true;
-        state.allowDescription = false;
-        state.allowMultilineArgument = false;
-        state.inKeywordLine = true;
-        return "keyword";
-
-      // SCENARIO OUTLINE
-      } else if (!state.inKeywordLine && state.allowScenario && stream.match(/(å ´æ™¯å¤§ç¶±|åœºæ™¯å¤§çº²|åŠ‡æœ¬å¤§ç¶±|å‰§æœ¬å¤§çº²|ãƒ†ãƒ³ãƒ—ãƒ¬|ã‚·ãƒŠãƒªã‚ªãƒ†ãƒ³ãƒ—ãƒ¬ãƒ¼ãƒˆ|ã‚·ãƒŠãƒªã‚ªãƒ†ãƒ³ãƒ—ãƒ¬|ã‚·ãƒŠãƒªã‚ªã‚¢ã‚¦ãƒˆãƒ©ã‚¤ãƒ³|ì‹œë‚˜ë¦¬ì˜¤ ê°œìš”|à¸ªà¸£à¸¸à¸›à¹€à¸«à¸•à¸¸à¸à¸²à¸£à¸“à¹Œ|à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¸­à¸‡à¹€à¸«à¸•à¸¸à¸à¸²à¸£à¸“à¹Œ|à²µà²¿à²µà²°à²£à³†|à°•à°¥à°¨à°‚|à¨ªà¨Ÿà¨•à¨¥à¨¾ à¨°à©‚à¨ª à¨°à©‡à¨–à¨¾|à¨ªà¨Ÿà¨•à¨¥à¨¾ à¨¢à¨¾à¨‚à¨šà¨¾|à¤ªà¤°à¤¿à¤¦à¥ƒà¤¶à¥à¤¯ à¤°à¥‚à¤ªà¤°à¥‡à¤–à¤¾|Ø³ÙŠÙ†Ø§Ø±ÙŠÙˆ Ù…Ø®Ø·Ø·|Ø§Ù„Ú¯ÙˆÛŒ Ø³Ù†Ø§Ø±ÛŒÙˆ|×ª×‘× ×™×ª ×ª×¨×—×™×©|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ð¸Ð¹Ð½Ñ‹Ò£ Ñ‚Ó©Ð·ÐµÐ»ÐµÑˆÐµ|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ð¸Ð¹ ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð°ÑÐ¸|Ð¡Ñ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° ÑÑ†ÐµÐ½Ð°Ñ€Ñ–ÑŽ|Ð¡Ñ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° ÑÑ†ÐµÐ½Ð°Ñ€Ð¸Ñ|Ð¡Ñ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° ÑÑ†ÐµÐ½Ð°Ñ€Ð¸Ñ˜Ð°|Ð¡ÐºÐ¸Ñ†Ð°|Ð Ð°Ð¼ÐºÐ° Ð½Ð° ÑÑ†ÐµÐ½Ð°Ñ€Ð¸Ð¹|ÐšÐ¾Ð½Ñ†ÐµÐ¿Ñ‚|Î ÎµÏÎ¹Î³ÏÎ±Ï†Î® Î£ÎµÎ½Î±ÏÎ¯Î¿Ï…|Wharrimean is|Template Situai|Template Senario|Template Keadaan|Tapausaihio|Szenariogrundriss|Szablon scenariusza|Swa hwÃ¦r swa|Swa hwaer swa|Struktura scenarija|StructurÄƒ scenariu|Structura scenariu|Skica|Skenario konsep|Shiver me timbers|Senaryo taslaÄŸÄ±|Schema dello scenario|Scenariomall|Scenariomal|Scenario Template|Scenario Outline|Scenario Amlinellol|ScenÄrijs pÄ“c parauga|Scenarijaus Å¡ablonas|Reckon it's like|Raamstsenaarium|Plang vum Szenario|Plan du ScÃ©nario|Plan du scÃ©nario|Osnova scÃ©nÃ¡Å™e|Osnova ScenÃ¡ra|NÃ¡Ärt ScenÃ¡ru|NÃ¡Ärt ScÃ©nÃ¡Å™e|NÃ¡Ärt ScenÃ¡ra|MISHUN SRSLY|Menggariskan Senario|LÃ½sing DÃ¦ma|LÃ½sing AtburÃ°arÃ¡sar|Konturo de la scenaro|Koncept|Khung tÃ¬nh huá»‘ng|Khung ká»‹ch báº£n|ForgatÃ³kÃ¶nyv vÃ¡zlat|Esquema do CenÃ¡rio|Esquema do Cenario|Esquema del escenario|Esquema de l'escenari|Esbozo do escenario|DelineaÃ§Ã£o do CenÃ¡rio|Delineacao do Cenario|All y'all|Abstrakt Scenario|Abstract Scenario):/)) {
-        state.allowPlaceholders = true;
-        state.allowSteps = true;
-        state.allowMultilineArgument = false;
-        state.inKeywordLine = true;
-        return "keyword";
-
-      // EXAMPLES
-      } else if (state.allowScenario && stream.match(/(ä¾‹å­|ä¾‹|ã‚µãƒ³ãƒ—ãƒ«|ì˜ˆ|à¸Šà¸¸à¸”à¸‚à¸­à¸‡à¹€à¸«à¸•à¸¸à¸à¸²à¸£à¸“à¹Œ|à¸Šà¸¸à¸”à¸‚à¸­à¸‡à¸•à¸±à¸§à¸­à¸¢à¹ˆà¸²à¸‡|à²‰à²¦à²¾à²¹à²°à²£à³†à²—à²³à³|à°‰à°¦à°¾à°¹à°°à°£à°²à±|à¨‰à¨¦à¨¾à¨¹à¨°à¨¨à¨¾à¨‚|à¤‰à¤¦à¤¾à¤¹à¤°à¤£|Ù†Ù…ÙˆÙ†Ù‡ Ù‡Ø§|Ø§Ù…Ø«Ù„Ø©|×“×•×’×ž××•×ª|Ò®Ñ€Ð½Ó™ÐºÐ»Ó™Ñ€|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ð¸Ñ˜Ð¸|ÐŸÑ€Ð¸Ð¼ÐµÑ€Ñ‹|ÐŸÑ€Ð¸Ð¼ÐµÑ€Ð¸|ÐŸÑ€Ð¸ÐºÐ»Ð°Ð´Ð¸|ÐœÐ¸ÑÐ¾Ð»Ð»Ð°Ñ€|ÐœÐ¸ÑÐ°Ð»Ð»Ð°Ñ€|Î£ÎµÎ½Î¬ÏÎ¹Î±|Î Î±ÏÎ±Î´ÎµÎ¯Î³Î¼Î±Ï„Î±|You'll wanna|Voorbeelden|Variantai|Tapaukset|Se Ã¾e|Se the|Se Ã°e|Scenarios|Scenariji|Scenarijai|PrzykÅ‚ady|Primjeri|Primeri|PÅ™Ã­klady|PrÃ­klady|PiemÄ“ri|PÃ©ldÃ¡k|PavyzdÅ¾iai|Paraugs|Ã–rnekler|Juhtumid|Exemplos|Exemples|Exemple|Exempel|EXAMPLZ|Examples|Esempi|Enghreifftiau|Ekzemploj|Eksempler|Ejemplos|Dá»¯ liá»‡u|Dead men tell no tales|DÃ¦mi|Contoh|CenÃ¡rios|Cenarios|Beispiller|Beispiele|AtburÃ°arÃ¡sir):/)) {
-        state.allowPlaceholders = false;
-        state.allowSteps = true;
-        state.allowDescription = false;
-        state.allowMultilineArgument = true;
-        return "keyword";
-
-      // SCENARIO
-      } else if (!state.inKeywordLine && state.allowScenario && stream.match(/(å ´æ™¯|åœºæ™¯|åŠ‡æœ¬|å‰§æœ¬|ã‚·ãƒŠãƒªã‚ª|ì‹œë‚˜ë¦¬ì˜¤|à¹€à¸«à¸•à¸¸à¸à¸²à¸£à¸“à¹Œ|à²•à²¥à²¾à²¸à²¾à²°à²¾à²‚à²¶|à°¸à°¨à±à°¨à°¿à°µà±‡à°¶à°‚|à¨ªà¨Ÿà¨•à¨¥à¨¾|à¤ªà¤°à¤¿à¤¦à¥ƒà¤¶à¥à¤¯|Ø³ÙŠÙ†Ø§Ø±ÙŠÙˆ|Ø³Ù†Ø§Ø±ÛŒÙˆ|×ª×¨×—×™×©|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ñ–Ð¹|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ð¸Ð¾|Ð¡Ñ†ÐµÐ½Ð°Ñ€Ð¸Ð¹|ÐŸÑ€Ð¸Ð¼ÐµÑ€|Î£ÎµÎ½Î¬ÏÎ¹Î¿|TÃ¬nh huá»‘ng|The thing of it is|Tapaus|Szenario|Swa|Stsenaarium|Skenario|Situai|Senaryo|Senario|Scenaro|Scenariusz|Scenariu|ScÃ©nario|Scenario|Scenarijus|ScenÄrijs|Scenarij|Scenarie|ScÃ©nÃ¡Å™|ScenÃ¡r|Primer|MISHUN|Ká»‹ch báº£n|Keadaan|Heave to|ForgatÃ³kÃ¶nyv|Escenario|Escenari|CenÃ¡rio|Cenario|Awww, look mate|AtburÃ°arÃ¡s):/)) {
-        state.allowPlaceholders = false;
-        state.allowSteps = true;
-        state.allowDescription = false;
-        state.allowMultilineArgument = false;
-        state.inKeywordLine = true;
-        return "keyword";
-
-      // STEPS
-      } else if (!state.inKeywordLine && state.allowSteps && stream.match(/(é‚£éº¼|é‚£ä¹ˆ|è€Œä¸”|ç•¶|å½“|å¹¶ä¸”|åŒæ™‚|åŒæ—¶|å‰æ|å‡è®¾|å‡è¨­|å‡å®š|å‡å¦‚|ä½†æ˜¯|ä½†ã—|ä¸¦ä¸”|ã‚‚ã—|ãªã‚‰ã°|ãŸã ã—|ã—ã‹ã—|ã‹ã¤|í•˜ì§€ë§Œ|ì¡°ê±´|ë¨¼ì €|ë§Œì¼|ë§Œì•½|ë‹¨|ê·¸ë¦¬ê³ |ê·¸ëŸ¬ë©´|à¹à¸¥à¸° |à¹€à¸¡à¸·à¹ˆà¸­ |à¹à¸•à¹ˆ |à¸”à¸±à¸‡à¸™à¸±à¹‰à¸™ |à¸à¸³à¸«à¸™à¸”à¹ƒà¸«à¹‰ |à²¸à³à²¥à²¿à²¤à²¿à²¯à²¨à³à²¨à³ |à²®à²¤à³à²¤à³ |à²¨à²¿à³•à²¡à²¿à²¦ |à²¨à²‚à²¤à²° |à²†à²¦à²°à³† |à°®à°°à°¿à°¯à± |à°šà±†à°ªà±à°ªà°¬à°¡à°¿à°¨à°¦à°¿ |à°•à°¾à°¨à°¿ |à°ˆ à°ªà°°à°¿à°¸à±à°¥à°¿à°¤à°¿à°²à±‹ |à°…à°ªà±à°ªà±à°¡à± |à¨ªà¨° |à¨¤à¨¦ |à¨œà©‡à¨•à¨° |à¨œà¨¿à¨µà©‡à¨‚ à¨•à¨¿ |à¨œà¨¦à©‹à¨‚ |à¨…à¨¤à©‡ |à¤¯à¤¦à¤¿ |à¤ªà¤°à¤¨à¥à¤¤à¥ |à¤ªà¤° |à¤¤à¤¬ |à¤¤à¤¦à¤¾ |à¤¤à¤¥à¤¾ |à¤œà¤¬ |à¤šà¥‚à¤‚à¤•à¤¿ |à¤•à¤¿à¤¨à¥à¤¤à¥ |à¤•à¤¦à¤¾ |à¤”à¤° |à¤…à¤—à¤° |Ùˆ |Ù‡Ù†Ú¯Ø§Ù…ÛŒ |Ù…ØªÙ‰ |Ù„ÙƒÙ† |Ø¹Ù†Ø¯Ù…Ø§ |Ø«Ù… |Ø¨ÙØ±Ø¶ |Ø¨Ø§ ÙØ±Ø¶ |Ø§Ù…Ø§ |Ø§Ø°Ø§Ù‹ |Ø¢Ù†Ú¯Ø§Ù‡ |×›××©×¨ |×•×’× |×‘×”×™× ×ª×Ÿ |××–×™ |××– |××‘×œ |Ð¯ÐºÑ‰Ð¾ |ÒºÓ™Ð¼ |Ð£Ð½Ð´Ð° |Ð¢Ð¾Ð´Ñ– |Ð¢Ð¾Ð³Ð´Ð° |Ð¢Ð¾ |Ð¢Ð°ÐºÐ¶Ðµ |Ð¢Ð° |ÐŸÑƒÑÑ‚ÑŒ |ÐŸÑ€Ð¸Ð¿ÑƒÑÑ‚Ð¸Ð¼Ð¾, Ñ‰Ð¾ |ÐŸÑ€Ð¸Ð¿ÑƒÑÑ‚Ð¸Ð¼Ð¾ |ÐžÐ½Ð´Ð° |ÐÐ¾ |ÐÐµÑ…Ð°Ð¹ |ÐÓ™Ñ‚Ð¸Ò—Ó™Ð´Ó™ |Ð›ÐµÐºÐ¸Ð½ |Ð›Ó™ÐºÐ¸Ð½ |ÐšÐ¾Ð»Ð¸ |ÐšÐ¾Ð³Ð´Ð° |ÐšÐ¾Ð³Ð°Ñ‚Ð¾ |ÐšÐ°Ð´Ð° |ÐšÐ°Ð´ |Ðš Ñ‚Ð¾Ð¼Ñƒ Ð¶Ðµ |Ð† |Ð˜ |Ð—Ð°Ð´Ð°Ñ‚Ð¾ |Ð—Ð°Ð´Ð°Ñ‚Ð¸ |Ð—Ð°Ð´Ð°Ñ‚Ðµ |Ð•ÑÐ»Ð¸ |Ð”Ð¾Ð¿ÑƒÑÑ‚Ð¸Ð¼ |Ð”Ð°Ð½Ð¾ |Ð”Ð°Ð´ÐµÐ½Ð¾ |Ð’Ó™ |Ð’Ð° |Ð‘Ð¸Ñ€Ð¾Ðº |Ó˜Ð¼Ð¼Ð° |Ó˜Ð¹Ñ‚Ð¸Ðº |Ó˜Ð³Ó™Ñ€ |ÐÐ¼Ð¼Ð¾ |ÐÐ»Ð¸ |ÐÐ»Ðµ |ÐÐ³Ð°Ñ€ |Ð Ñ‚Ð°ÐºÐ¾Ð¶ |Ð |Î¤ÏŒÏ„Îµ |ÎŒÏ„Î±Î½ |ÎšÎ±Î¹ |Î”ÎµÎ´Î¿Î¼Î­Î½Î¿Ï… |Î‘Î»Î»Î¬ |Ãžurh |Ãžegar |Ãža Ã¾e |ÃžÃ¡ |Ãža |Zatati |ZakÅ‚adajÄ…c |Zadato |Zadate |Zadano |Zadani |Zadan |Za pÅ™edpokladu |Za predpokladu |Youse know when youse got |Youse know like when |Yna |Yeah nah |Y'know |Y |Wun |Wtedy |When y'all |When |Wenn |WEN |wann |Ve |VÃ  |Und |Un |ugeholl |Too right |Thurh |ThÃ¬ |Then y'all |Then |Tha the |Tha |Tetapi |Tapi |Tak |Tada |Tad |Stel |Soit |Siis |È˜i |Åži |Si |Sed |Se |SÃ¥ |Quando |Quand |Quan |Pryd |Potom |Pokud |PokiaÄ¾ |PerÃ² |Pero |Pak |Oraz |Onda |Ond |Oletetaan |Og |Och |O zaman |Niin |NhÆ°ng |NÃ¤r |NÃ¥r |Mutta |Men |Mas |Maka |Majd |MajÄ…c |Mais |Maar |mÃ¤ |Ma |Lorsque |Lorsqu'|Logo |Let go and haul |Kun |Kuid |Kui |Kiedy |Khi |Ketika |Kemudian |KeÄ |KdyÅ¾ |Kaj |Kai |Kada |Kad |JeÅ¼eli |JeÅ›li |Ja |It's just unbelievable |Ir |I CAN HAZ |I |Ha |Givun |Givet |Given y'all |Given |Gitt |Gegeven |Gegeben seien |Gegeben sei |Gdy |Gangway! |Fakat |Ã‰tant donnÃ©s |Etant donnÃ©s |Ã‰tant donnÃ©es |Etant donnÃ©es |Ã‰tant donnÃ©e |Etant donnÃ©e |Ã‰tant donnÃ© |Etant donnÃ© |Et |Ã‰s |Entonces |EntÃ³n |EntÃ£o |Entao |En |EÄŸer ki |Ef |Eeldades |E |Ãurh |Duota |Dun |DonitaÄµo |Donat |Donada |Do |Diyelim ki |Diberi |Dengan |Den youse gotta |DEN |De |Dato |DaÈ›i fiind |DaÅ£i fiind |Dati fiind |Dati |Date fiind |Date |Data |Dat fiind |Dar |Dann |dann |Dan |Dados |Dado |Dadas |Dada |Ãa Ã°e |Ãa |Cuando |Cho |Cando |CÃ¢nd |Cand |Cal |But y'all |But at the end of the day I reckon |BUT |But |Buh |Blimey! |Biáº¿t |Bet |Bagi |Aye |awer |Avast! |Atunci |Atesa |AtÃ¨s |Apabila |Anrhegedig a |Angenommen |And y'all |And |AN |An |an |Amikor |Amennyiben |Ama |Als |Alors |Allora |Ali |Aleshores |Ale |Akkor |Ak |Adott |Ac |Aber |A zÃ¡roveÅˆ |A tieÅ¾ |A taktieÅ¾ |A takÃ© |A |a |7 |\* )/)) {
-        state.inStep = true;
-        state.allowPlaceholders = true;
-        state.allowMultilineArgument = true;
-        state.inKeywordLine = true;
-        return "keyword";
-
-      // INLINE STRING
-      } else if (stream.match(/"[^"]*"?/)) {
-        return "string";
-
-      // PLACEHOLDER
-      } else if (state.allowPlaceholders && stream.match(/<[^>]*>?/)) {
-        return "variable";
-
-      // Fall through
-      } else {
-        stream.next();
-        stream.eatWhile(/[^@"<#]/);
-        return null;
-      }
-    }
-  };
-});
-
-CodeMirror.defineMIME("text/x-feature", "gherkin");
-
-});
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryEditHandler.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryEditHandler.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryEditHandler.js	(revision )
@@ -17,744 +17,6 @@
     }
 
 
-    this.assignRichEditorHandlers = function (story) {
-
-        this.debug("> assignRichEditorHandlers");
-
-        this.addInsertLinks(story);
-
-        this.assignInsertLinkHandlers(story);
-
-        this.assignShowElementOperationsOnHover(story);
-
-        this.assignAutoHeightForTextAreas(story);
-
-        this.setSizeForTextAreas(story);
-
-        this.debug("# assignRichEditorHandlers");
-    }
-
-    this.setSizeForTextAreas = function (story) {
-
-        AJS.$('.story-multiline-edit-field').each(function (element, textArea) {
-            editButtonHandler.debug('> setSizeForTextAreas, textArea - ' + textArea);
-            editButtonHandler.resizeTextArea(textArea);
-            editButtonHandler.debug('# setSizeForTextAreas');
-        });
-    }
-
-    this.assignAutoHeightForTextAreas = function (story) {
-
-        // set height dynamically on key press
-        AJS.$('.story-editor-field').keydown(function (event) {
-            editButtonHandler.debug('keydown, event.target - ' + event.target);
-            var key = event.which;
-            editButtonHandler.debug('keydown, event.which - ' + key);
-            if (key == 13) {
-                editButtonHandler.debug('return pressed, resizing text area');
-                editButtonHandler.resizeTextArea(event.target);
-            }
-        });
-
-        AJS.$('.story-editor-field').keyup(function (event) {
-            editButtonHandler.resizeTextArea(event.target);
-        });
-
-        // add border on focus
-        AJS.$('.story-editor-field').focus(function (event) {
-            editButtonHandler.debug('focused, event.target - ' + event.target);
-            AJS.$(event.target).addClass("focused");
-
-        });
-        AJS.$('.story-editor-field').blur(function (event) {
-            editButtonHandler.debug('blurred, event.target - ' + event.target);
-            AJS.$(event.target).removeClass("focused");
-        });
-
-    }
-
-    this.resizeTextArea = function (textArea) {
-
-        editButtonHandler.debug("> resizeTextArea");
-
-        editButtonHandler.debug('textArea - ' + textArea);
-        var value = AJS.$(textArea).val();
-
-        if (value != null) {
-            editButtonHandler.debug('value - ' + value)
-            var lines = value.split(/\r*\n/);
-            editButtonHandler.debug('lines - ' + lines)
-            var lineCount = lines.length;
-            editButtonHandler.debug('lineCount - ' + lineCount);
-            var currentRows = AJS.$(textArea).attr("rows");
-            editButtonHandler.debug('currentRows - ' + currentRows);
-            if (Number(currentRows) != lineCount) {
-                AJS.$(textArea).attr("rows", lineCount);
-            }
-        } else {
-            editButtonHandler.debug('not resizing text area as the value is null');
-        }
-
-        editButtonHandler.debug("# resizeTextArea");
-    }
-
-    this.assignInsertLinkHandlers = function (story) {
-
-        AJS.$(".insert-element-link-div").mouseenter(function (event) {
-            var div = event.target;
-            editButtonHandler.debug("> mouse enter on - insert-element-link-div");
-//            editButtonHandler.debug("hiding all insert links");
-//            AJS.$(".insert-element-link").hide();
-//            editButtonHandler.debug("div - " + div);
-
-            var target = event.target;
-            if (AJS.$(target).hasClass("insert-element-link-div")) {
-                AJS.$(target).children(".insert-element-link").show();
-            } else {
-                // this is the case of hover over text area input field
-                AJS.$(target)
-                    .closest(".insert-element-link-div")
-                    .children(".insert-element-link")
-                    .show();
-            }
-
-            AJS.$(div).children(".insert-element-link").show();
-
-            editButtonHandler.debug("# mouse enter on - insert-element-link-div");
-        });
-
-        AJS.$(".insert-element-link-div").mouseleave(function (event) {
-
-            editButtonHandler.debug("> mouse leave on - insert-element-link-div");
-            editButtonHandler.debug("event.target - " + event.target);
-
-            var target = event.target;
-            var insertLinkElement = null;
-            if (AJS.$(target).hasClass("insert-element-link-div")) {
-                insertLinkElement = AJS.$(target).children(".insert-element-link");
-            } else {
-                // this is the case of hover over text area input field
-                insertLinkElement = AJS.$(target)
-                    .closest(".insert-element-link-div")
-                    .children(".insert-element-link");
-            }
-
-            var isPressed = insertLinkElement.attr("pressed");
-            if (isPressed == "true") {
-                editButtonHandler.debug("Not hiding the insert button as is currently pressed");
-            } else {
-                editButtonHandler.debug("Hiding the insert button as pressed is - " + isPressed);
-                insertLinkElement.hide();
-            }
-
-            editButtonHandler.debug("# mouse leave on - insert-element-link-div");
-        });
-
-        AJS.$(".insert-dropdown-content").on({
-
-            "aui-dropdown2-show": function (event) {
-                var target = event.target;
-                editButtonHandler.debug("showing dropdown, event.target.id - " + AJS.$(target).attr("id"));
-                var triggerDivId = AJS.$(target).attr("trigger-div-id");
-                editButtonHandler.debug("event.target.attr(\"trigger-div-id\") - " + triggerDivId);
-
-                var triggerDiv = AJS.$("#" + triggerDivId);
-                var insertLink = triggerDiv.children(".insert-element-link");
-                insertLink.attr("pressed", "true");
-            },
-
-            "aui-dropdown2-hide": function (event) {
-
-                var target = event.target;
-                editButtonHandler.debug("hiding dropdown, event.target.id - " + AJS.$(target).attr("id"));
-
-                var triggerDivId = AJS.$(target).attr("trigger-div-id");
-                editButtonHandler.debug("event.target.attr(\"trigger-div-id\") - " + triggerDivId);
-                var triggerDiv = AJS.$("#" + triggerDivId);
-                var insertLink = triggerDiv.children(".insert-element-link");
-
-                insertLink.attr("pressed", "false");
-
-                var isHovered = triggerDiv.is(":hover");
-                if (isHovered) {
-                    editButtonHandler.debug("NOT hiding the insert link");
-                } else {
-                    editButtonHandler.debug("hiding the insert link");
-                    insertLink.hide();
-                }
-            }
-
-        });
-
-    }
-
-    this.assignShowElementOperationsOnHover = function (story) {
-
-        // description
-        {
-            AJS.$(".story-element-container").mouseenter(function (event) {
-                editButtonHandler.debug("> mouse enter on - story-element-container");
-                editButtonHandler.debug("event.target - " + event.target);
-
-//                editButtonHandler.debug("hiding all insert links");
-//                AJS.$(".insert-element-link").hide();
-
-                var target = event.target;
-                if (AJS.$(target).hasClass("story-element-container")) {
-                    AJS.$(target).children(".element-operations-container").show();
-                } else {
-                    // this is the case of hover over text area input field
-                    AJS.$(target)
-                        .closest(".story-element-container")
-                        .children(".element-operations-container")
-                        .show();
-                }
-
-                editButtonHandler.debug("# mouse enter on - story-element-container");
-            });
-
-            AJS.$(".story-element-container").mouseleave(function (event) {
-
-                editButtonHandler.debug("> mouse leave on - story-element-container");
-                editButtonHandler.debug("event.target - " + event.target);
-
-                var target = event.target;
-                if (AJS.$(target).hasClass("story-element-container")) {
-                    AJS.$(target).children(".element-operations-container").hide();
-                } else {
-                    // this is the case of hover over text area input field
-                    AJS.$(target)
-                        .closest(".story-element-container")
-                        .children(".element-operations-container")
-                        .hide();
-                }
-
-                editButtonHandler.debug("# mouse leave on - story-element-container");
-            });
-        }
-
-    }
-
-    this.addInsertLinks = function (story) {
-
-        // before Meta
-        {
-            if (story.description == null && story.meta != null) {
-                var templateObj = new Object();
-                templateObj.dropdownItems = [];
-                templateObj.triggerDivId = "insertTriggerDivBeforeMeta";
-                templateObj.dropdownDivId = "insertDropdownDivBeforeMeta";
-                var insertDescriptionLinkInfo = new Object();
-                insertDescriptionLinkInfo.text = "Description";
-                insertDescriptionLinkInfo.onClickFunction = "insertElement";
-                insertDescriptionLinkInfo.elementName = "description";
-                templateObj.dropdownItems.push(insertDescriptionLinkInfo);
-                var insertBeforeNarrativeHtml = execspec.viewissuepage.editstory.rich.renderInsertLinkDiv(templateObj);
-                AJS.$('#insertLinkContainerBeforeMeta').html(insertBeforeNarrativeHtml);
-            } else {
-                AJS.$('#insertLinkContainerBeforeMeta').html("");
-            }
-        }
-
-        // Meta properties
-        {
-            if (story.meta != null) {
-                var templateObj = new Object();
-                templateObj.dropdownItems = [];
-                templateObj.triggerDivId = "insertTriggerDivMetaProperty";
-                templateObj.dropdownDivId = "insertDropdownDivMetaProperty";
-                var insertMetaPropertyLinkInfo = new Object();
-                insertMetaPropertyLinkInfo.text = "New meta field";
-                insertMetaPropertyLinkInfo.onClickFunction = "insertElement";
-                insertMetaPropertyLinkInfo.elementName = "metaField";
-                templateObj.dropdownItems.push(insertMetaPropertyLinkInfo);
-                var insertMetaPropertyHtml = execspec.viewissuepage.editstory.rich.renderInsertLinkDiv(templateObj);
-                AJS.$('#insertLinkContainerMetaProperty').html(insertMetaPropertyHtml);
-            }
-
-        }
-
-        // before Narrative
-        {
-            var templateObj = new Object();
-            templateObj.triggerDivId = "insertBeforeNarrativeTriggerDiv";
-            templateObj.dropdownDivId = "insertBeforeNarrativeDropdownDiv";
-
-            var insertDescriptionLinkInfo = new Object();
-            insertDescriptionLinkInfo.text = "Description";
-            insertDescriptionLinkInfo.onClickFunction = "insertElement";
-            insertDescriptionLinkInfo.elementName = "description";
-
-            var insertMetaLinkInfo = new Object();
-            insertMetaLinkInfo.text = "Meta";
-            insertMetaLinkInfo.onClickFunction = "insertElement";
-            insertMetaLinkInfo.elementName = "meta";
-
-            templateObj.dropdownItems = [];
-            if (story.description == null && story.meta == null) {
-                templateObj.dropdownItems.push(insertDescriptionLinkInfo);
-                templateObj.dropdownItems.push(insertMetaLinkInfo);
-            } else if (story.meta == null) {
-                templateObj.dropdownItems.push(insertMetaLinkInfo);
-            }
-
-            if (templateObj.dropdownItems.length > 0) {
-                var insertBeforeNarrativeHtml = execspec.viewissuepage.editstory.rich.renderInsertLinkDiv(templateObj);
-                AJS.$('#insertLinkContainerBeforeNarrative').html(insertBeforeNarrativeHtml);
-            } else {
-                AJS.$('#insertLinkContainerBeforeNarrative').html("");
-            }
-        }
-
-        // after scenarios
-        {
-            var templateObj = new Object();
-            templateObj.triggerDivId = "insertAfterScenariosTriggerDiv";
-            templateObj.dropdownDivId = "insertAfterScenariosDropdownDiv";
-
-            var insertScenarioLinkInfo = new Object();
-            insertScenarioLinkInfo.text = "Scenario";
-            insertScenarioLinkInfo.onClickFunction = "insertElement";
-            insertScenarioLinkInfo.elementName = "scenario";
-
-//            var insertMetaLinkInfo = new Object();
-//            insertMetaLinkInfo.text = "Meta";
-//            insertMetaLinkInfo.onClickFunction = "insertElement";
-//            insertMetaLinkInfo.elementName = "meta";
-
-            templateObj.dropdownItems = [];
-//            if (story.description == null && story.meta == null) {
-//                templateObj.dropdownItems.push(insertScenarioLinkInfo);
-//                templateObj.dropdownItems.push(insertMetaLinkInfo);
-//            } else if (story.meta == null) {
-//                templateObj.dropdownItems.push(insertMetaLinkInfo);
-//            }
-            templateObj.dropdownItems.push(insertScenarioLinkInfo);
-
-            var insertAfterScenariosHtml = execspec.viewissuepage.editstory.rich.renderInsertLinkDiv(templateObj);
-            AJS.$('#insertLinkContainerAfterScenarios').html(insertAfterScenariosHtml);
-        }
-
-        // after scenario steps
-        {
-            AJS.$('.insert-link-container-after-scenario-steps').each(
-                function (index, element) {
-
-                    var templateObj = new Object();
-
-                    templateObj.triggerDivId = "insertAfterScenarioStepsTriggerDiv_" + index;
-                    templateObj.dropdownDivId = "insertAfterScenarioStepsDropdownDiv_" + index;
-
-                    templateObj.additionalParams = [];
-                    templateObj.additionalParams.push(index);
-
-                    templateObj.dropdownItems = [];
-
-                    var insertGivenLink = new Object();
-                    insertGivenLink.text = "Given";
-//                    insertGivenLink.onClickFunction = "insertElement";
-                    insertGivenLink.elementName = "given";
-                    templateObj.dropdownItems.push(insertGivenLink);
-
-                    var insertWhenLink = new Object();
-                    insertWhenLink.text = "When";
-//                    insertWhenLink.onClickFunction = "insertElement";
-                    insertWhenLink.elementName = "when";
-                    templateObj.dropdownItems.push(insertWhenLink);
-
-                    var insertThenLink = new Object();
-                    insertThenLink.text = "Then";
-//                    insertThenLink.onClickFunction = "insertElement";
-                    insertThenLink.elementName = "then";
-                    templateObj.dropdownItems.push(insertThenLink);
-
-                    var insertAndLink = new Object();
-                    insertAndLink.text = "And";
-//                    insertAndLink.onClickFunction = "insertElement";
-                    insertAndLink.elementName = "and";
-                    templateObj.dropdownItems.push(insertAndLink);
-
-                    var insertAfterScenariosHtml = execspec.viewissuepage.editstory.rich.renderInsertStepLinkDiv(templateObj);
-                    AJS.$(element).html(insertAfterScenariosHtml);
-                }
-            );
-        }
-
-    }
-
-    this.richTextEditorClicked = function (event) {
-
-        this.debug("> richTextEditorClicked");
-
-        var richEditorButtons = execspec.viewissuepage.editstory.rich.renderRichEditorOperationButtons();
-        AJS.$("#editorOperationsButtons").html(richEditorButtons);
-
-        AJS.$("#richTextEditorButton").attr("aria-pressed", "true");
-        AJS.$("#rawTextEditorButton").attr("aria-pressed", "false");
-
-        AJS.$("#rawEditStoryContainer").hide();
-        AJS.$("#richEditStoryContainer").show();
-
-        event.preventDefault();
-        this.debug("# richTextEditorClicked");
-    }
-
-    this.rawTextEditorClicked = function (event) {
-
-        this.debug("> rawTextEditorClicked");
-
-        var rawEditorButtons = execspec.viewissuepage.editstory.renderRawEditorOperationButtons();
-        AJS.$("#editorOperationsButtons").html(rawEditorButtons);
-
-        AJS.$("#richTextEditorButton").attr("aria-pressed", "false");
-        AJS.$("#rawTextEditorButton").attr("aria-pressed", "true");
-
-        AJS.$("#richEditStoryContainer").hide();
-        AJS.$("#rawEditStoryContainer").show();
-
-        event.preventDefault();
-        this.debug("# rawTextEditorClicked");
-    }
-
-    this.getArrayIndexFromPath = function (str) {
-//        this.debug("> getArrayIndexFromPath");
-        var regExp = new RegExp('\\[(\\d+)\\]$');
-        var match = regExp.exec(str);
-        if (match != null) {
-            return match[1];
-        } else {
-            return null;
-        }
-//        this.debug("# getArrayIndexFromPath");
-    }
-
-    this.bindInputElementsToModel = function () {
-
-        this.debug("> bindInputElementsToModel");
-
-        this.debug("story before binding:\n" + JSON.stringify(storyController.currentStory, null, "\t"));
-
-        AJS.$("#richStoryEditContent").find(".story-editor-field").each(
-            function () {
-//                editButtonHandler.debug("> bindInputElementsToModel.each(story-editor-field)");
-                var fieldName = AJS.$(this).attr("name");
-                var fieldValue = AJS.$(this).attr("value");
-//                editButtonHandler.debug("fieldName = " + fieldName + ", value = " + fieldValue);
-
-                var path = fieldName.split('.');
-                var obj = storyController.currentStory;
-                for (var i = 0; i < path.length - 1; i++) {
-                    var pathPart = path[i];
-//                    if (obj[ pathPart] == null) {
-//                        obj[pathPart] = {};
-//                    }
-//                    editButtonHandler.debug("### checking if fieldName part ends in array index - " + pathPart);
-                    var arrayIndexFromPath = editButtonHandler.getArrayIndexFromPath(pathPart);
-                    if (arrayIndexFromPath != null) {
-//                        editButtonHandler.debug("### fieldName part ends in array index - " + pathPart);
-                        var partWithoutIndex = pathPart.substr(0, pathPart.length - (arrayIndexFromPath.length + 2));
-//                        editButtonHandler.debug("### partWithoutIndex " + partWithoutIndex);
-                        obj = obj[partWithoutIndex][arrayIndexFromPath];
-                    } else {
-                        obj = obj[pathPart];
-                    }
-
-                }
-                obj[path[path.length - 1]] = fieldValue;
-
-                //console.log("s before - '" + s + "'");
-//                fieldName = fieldName.replace(/\[(\w+)\]/g, '.$1');  // convert indexes to properties
-//                //console.log("s after - '" + s + "'");
-//                fieldName = fieldName.replace(/^\./, ''); // strip leading dot
-//                var token = fieldName.split('.');
-//                var o = storyController.currentStory;
-//                while (token.length) {
-//                    var n = token.shift();
-//                    editButtonHandler.debug("processing token - " + n);
-//                    o = o[n];
-//                    o = fieldValue;
-//                }
-
-//                editButtonHandler.debug("# bindInputElementsToModel.each(story-editor-field)");
-            }
-        );
-
-        this.debug("story after binding:\n" + JSON.stringify(storyController.currentStory, null, "\t"));
-
-        this.debug("# bindInputElementsToModel");
-    }
-
-    this.insertElement = function (event, elementName, scenarioIndex) {
-
-        this.debug("> insertElement");
-        this.debug("elementName = " + elementName);
-
-        this.bindInputElementsToModel();
-
-        if (elementName == "description") {
-            this.insertDescription();
-        } else if (elementName == "meta") {
-            this.insertMeta();
-        } else if (elementName == "metaField") {
-            this.insertMetaField(null, null);
-        } else if (elementName == "scenario") {
-            this.insertScenario();
-        } else {
-            console.error("Attempting to insert unsupported element - " + elementName);
-        }
-
-        this.assignRichEditorHandlers(storyController.currentStory);
-        this.assignShowElementOperationsOnHover(storyController.currentStory);
-
-        event.preventDefault();
-        this.debug("# insertElement");
-    }
-
-    this.removeElement = function (event, elementName, index) {
-
-        this.debug("> removeElement");
-        this.debug("elementName - " + elementName);
-
-        this.bindInputElementsToModel();
-
-        if (elementName == "description") {
-            this.removeDescription();
-        } else if (elementName == "meta") {
-            this.removeMeta();
-        } else if (elementName == "metaField") {
-            this.removeMetaField(index);
-        } else if (elementName == "scenario") {
-            this.removeScenario(index);
-        } else {
-            console.error("attempted to remove unsupported element - " + elementName);
-        }
-
-        this.assignRichEditorHandlers(storyController.currentStory);
-        this.assignShowElementOperationsOnHover(storyController.currentStory);
-
-        event.preventDefault();
-        this.debug("# removeElement");
-    }
-
-    this.insertDescription = function () {
-
-        this.debug("> insertDescription");
-
-        storyController.currentStory.description = "";
-
-        var descriptionHtml = execspec.viewissuepage.editstory.rich.renderStoryDescriptionField(storyController.currentStory);
-        AJS.$("#storyDescriptionContainer").html(descriptionHtml);
-
-        this.debug("# insertDescription");
-    }
-
-    this.removeMeta = function () {
-
-        this.debug("> removeMeta");
-        storyController.currentStory.meta = null;
-
-        AJS.$("#storyMetaContainer").html("");
-        this.debug("# removeMeta");
-    }
-
-    this.removeMetaField = function (index) {
-
-        this.debug("> removeMetaField");
-
-//        this.debug("story before removing property at index - " + index
-//            + ":\n" + JSON.stringify(storyController.currentStory, null, "\t"));
-
-        storyController.currentStory.meta.properties.splice(index, 1);
-
-        this.debug("story after removing property at index - " + index
-            + ":\n" + JSON.stringify(storyController.currentStory, null, "\t"));
-
-        var metaHtml = execspec.viewissuepage.editstory.rich.renderStoryMeta(storyController.currentStory);
-        AJS.$("#storyMetaContainer").html(metaHtml);
-        this.debug("# removeMetaField");
-    }
-
-    this.removeScenario = function (index) {
-
-        this.debug("> removeScenario");
-        this.debug("index - " + index);
-
-        storyController.currentStory.scenarios.splice(index, 1);
-
-        this.debug("story after removing scenario at index - " + index
-            + ":\n" + JSON.stringify(storyController.currentStory, null, "\t"));
-
-        var scenariosHtml;
-        if (storyController.currentStory.scenarios.length > 0) {
-            scenariosHtml = execspec.viewissuepage.editstory.rich.renderScenarios(storyController.currentStory);
-        } else {
-            scenariosHtml = "";
-        }
-        AJS.$("#storyScenariosContainer").html(scenariosHtml);
-
-        this.debug("# removeScenario");
-    }
-
-
-    this.removeDescription = function () {
-
-        this.debug("> removeDescription");
-        storyController.currentStory.description = null;
-
-        AJS.$("#storyDescriptionContainer").html("");
-        this.debug("# removeDescription");
-    }
-
-    this.insertMeta = function () {
-
-        this.debug("> insertMeta");
-
-        var meta = new Object();
-        meta.keyword = "Meta:";
-        meta.properties = [];
-        storyController.currentStory.meta = meta;
-
-        var metaHtml = execspec.viewissuepage.editstory.rich.renderStoryMeta(storyController.currentStory);
-        AJS.$("#storyMetaContainer").html(metaHtml);
-
-        this.debug("# insertMeta");
-    }
-
-    this.insertMetaField = function (fieldName, fieldValue) {
-
-        this.debug("> insertMetaField");
-
-        var meta = storyController.currentStory.meta;
-        var newEntry = new Object();
-        newEntry.name = fieldName;
-        newEntry.value = fieldValue;
-        meta.properties.push(newEntry);
-
-        var metaHtml = execspec.viewissuepage.editstory.rich.renderStoryMeta(storyController.currentStory);
-        AJS.$("#storyMetaContainer").html(metaHtml);
-
-        this.debug("# insertMetaField");
-    }
-
-    this.insertGivenStories = function (event) {
-
-        this.debug("> insertGivenStories");
-
-        var givenStories = new Object();
-        givenStories.keyword = "GivenStories:";
-        storyController.currentStory.givenStories = givenStories;
-
-        storyView.editStory(storyController.currentStory);
-
-        event.preventDefault();
-        this.debug("# insertGivenStories");
-    }
-
-    this.insertLifecycle = function (event) {
-
-        this.debug("> insertLifecycle");
-
-        var lifecycle = new Object();
-        lifecycle.keyword = "Lifecycle:";
-        storyController.currentStory.lifecycle = lifecycle;
-
-        storyView.editStory(storyController.currentStory);
-
-        event.preventDefault();
-        this.debug("# insertLifecycle");
-    }
-
-    this.insertScenario = function () {
-
-        this.debug("> insertScenario");
-
-        var scenario = new Object();
-        scenario.keyword = "Scenario:";
-        storyController.currentStory.scenarios.push(scenario);
-
-        var jsonStory = JSON.stringify(storyController.currentStory, null, "\t");
-        this.debug("after insert of new scenario into story model:\n" + jsonStory);
-
-        var scenarioHtml = execspec.viewissuepage.editstory.rich.renderScenarios(storyController.currentStory);
-        AJS.$("#storyScenariosContainer").html(scenarioHtml);
-
-        this.debug("# insertScenario");
-    }
-
-    this.insertStep = function (event, elementName, scenarioIndex) {
-
-        this.debug("> insertStep");
-        this.debug("scenarioIndex - " + scenarioIndex);
-
-        this.bindInputElementsToModel();
-
-        if (elementName == "step") {
-            this.insertStep(event.target, scenarioIndex);
-        } else if (elementName == "given") {
-            this.insertGiven(event.target, scenarioIndex);
-        } else {
-            console.error("Attempting to insert unsupported step element - " + elementName);
-        }
-
-//        AJS.$(".step-filter-input").each(
-//            function (index, element) {
-//                AJS.$(element).closest("");
-//            }
-//        );
-        AJS.$('.step-filter-input').keydown(function (event) {
-            editButtonHandler.debug('keydown on step filter, event.target - ' + event.target);
-            var key = event.which;
-            editButtonHandler.debug('keydown on step filter, event.which - ' + key);
-            if (key == 13) {
-                editButtonHandler.debug('return pressed, ignoring it');
-//                editButtonHandler.resizeTextArea(event.target);
-            }
-        });
-
-
-        this.assignRichEditorHandlers(storyController.currentStory);
-        this.assignShowElementOperationsOnHover(storyController.currentStory);
-
-        event.preventDefault();
-
-        this.debug("# insertStep");
-    }
-
-    this.insertGiven = function (target, scenarioIndex) {
-
-        this.debug("> insertGiven");
-        this.debug("scenarioIndex - " + scenarioIndex);
-        this.debug("target - " + target);
-
-        AJS.$(target).closest(".dropdown-items").each(
-            function (index, element) {
-                editButtonHandler.debug("> replacing dropdown items for Given step");
-
-                AJS.$(element).children(".insert-step-link-container").hide();
-
-//                AJS.$(element).children(".concrete-given-step").removeClass("hidden");
-//                AJS.$(element).children(".concrete-given-step").children("a").removeClass("disabled");
-//                AJS.$(element).children(".concrete-given-step").children("a").attr("aria-disabled", "false");
-
-                var filterStepHtml = execspec.viewissuepage.editstory.rich.renderStepFilterElement();
-                AJS.$(element).append(filterStepHtml);
-
-                var stepHintHtml = "<li><a href='#'>step hint here</a></li>";
-                AJS.$(element).append(stepHintHtml);
-
-                var stepHintHtml2 = "<li><a href='#'>step hint 2 here</a></li>";
-                AJS.$(element).append(stepHintHtml2);
-
-                editButtonHandler.debug("# replacing dropdown items for Given step");
-            }
-        );
-
-//        var stepHintHtml = "<li><a href='#'>step hint here</a></li>";
-//        AJS.$(target).closest(".dropdown-items").html(stepHintHtml);
-
-        this.debug("# insertGiven");
-    }
-
     this.saveStory = function (event) {
 
         this.debug("> saveStory");
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css	(revision )
@@ -1,5 +1,56 @@
+#story-panel-container.active {
+    width: 100%;
+    border-bottom-color: #CCC;
+    border-bottom-left-radius: 3.01667px;
+    border-bottom-right-radius: 3.01667px;
+    border-bottom-style: solid;
+    border-bottom-width: 0.833333px;
+    border-image-outset: 0 0 0 0;
+    border-image-repeat: stretch stretch;
+    border-image-slice: 100% 100% 100% 100%;
+    border-image-source: none;
+    border-image-width: 1 1 1 1;
+    border-left-color: #CCC;
+    border-left-style: solid;
+    border-left-width: 0.833333px;
+    border-right-color: #CCC;
+    border-right-style: solid;
+    border-right-width: 0.833333px;
+    border-spacing: 0px 0px;
+    border-top-color: #CCC;
+    border-top-left-radius: 3.01667px;
+    border-top-right-radius: 3.01667px;
+    border-top-style: solid;
+    border-top-width: 0.833333px;
+    box-shadow: #E8E8E8 0px 1px 3px 0px inset;
+    box-sizing: border-box;
+    /*color: #333;*/
+    cursor: text;
+    /*font-family: Arial,sans-serif;*/
+    /*font-size: 14px;*/
+    /*height: 91px;*/
+    /*line-height: 20px;*/
+    margin-bottom: 0px;
+    margin-left: 0px;
+    margin-right: 0px;
+    margin-top: 0px;
+    max-width: none;
+    overflow: hidden;
+    overflow-x: hidden;
+    overflow-y: hidden;
+    padding-bottom: 2px;
+    padding-left: 3px;
+    padding-right: 3px;
+    padding-top: 2px;
+    text-alignleftvertical-aligntopwidth: 969px;
+    -moz-border-bottom-colors: none;
+    -moz-border-left-colors: none;
+    -moz-border-right-colors: none;
+    -moz-border-top-colors: none;
+}
+
 #story-panel {
-    margin: 0;
+    /*margin: 2px;*/
     font-family: "Lucida Grande", "Arial", "Helvetica", "Verdana", sans-serif;
     font-size: 1em;
     /*font-size: 13px;*/
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml	(revision )
@@ -19,7 +19,6 @@
         <resource type="download" name="codemirror.js" location="/3rdparty/codemirror-4.3/lib/codemirror.js"/>
         <resource type="download" name="codemirror.css" location="/3rdparty/codemirror-4.3/lib/codemirror.css"/>
         <!--codemirror modes-->
-        <resource type="download" name="gherkin.js" location="/3rdparty/codemirror-4.3/mode/gherkin/gherkin.js"/>
         <resource type="download" name="jbehave.js" location="/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js"/>
         <!--codemirror hints-->
         <resource type="download" name="show-hint.js" location="/3rdparty/codemirror-4.3/addon/hint/show-hint.js"/>
@@ -72,9 +71,9 @@
     <!-- ==================================================================================================== -->
     <!--REST api-->
     <!-- ==================================================================================================== -->
-    <rest name="Story Resource" i18n-name-key="rest.storyResource.name" key="stories-res" path="/story-res"
+    <rest name="Story Resource" i18n-name-key="rest.storyResource.name" key="stories-res" path="/jbehave-for-jira"
           version="1.0">
-        <description key="rest.storyResource.description">The story rest resource plugin</description>
+        <description key="rest.storyResource.description">JBehave for Jira rest resource plugin</description>
     </rest>
     <!-- ==================================================================================================== -->
     <!--Localization-->
@@ -137,22 +136,22 @@
     <!--<link linkId="delete-jbehave-story-link">/delete-jbehave-story</link>-->
     <!--<styleClass>delete-story-button</styleClass>-->
     <!--</web-item>-->
-    <web-item name="Clear JBehave Story Tests" i18n-name-key="viewIssuePage.webItem.clearStoryTest.name"
-              key="viewIssuePage.webItem.clearStoryTest.key"
-              section="jbehave-links-section" weight="30">
-        <description key="viewIssuePage.webItem.clearStoryTest.description">The Clear Story Test Web Item</description>
-        <conditions type="and">
-            <condition class="com.atlassian.jira.plugin.webfragment.conditions.IsIssueEditableCondition"/>
-            <condition class="com.atlassian.jira.plugin.webfragment.conditions.HasIssuePermissionCondition">
-                <param name="permission" value="edit"/>
-            </condition>
-            <condition class="org.bitbucket.jbehaveforjira.plugin.contextproviders.JiraIssueHasStoryReportsCondition">
-            </condition>
-        </conditions>
-        <label key="viewIssuePage.webItem.clearStoryTest.label"/>
-        <link linkId="clear-jbehave-story-tests-link">/clear-jbehave-story-tests</link>
-        <styleClass>clear-story-test-button</styleClass>
-    </web-item>
+    <!--<web-item name="Clear JBehave Story Tests" i18n-name-key="viewIssuePage.webItem.clearStoryTest.name"-->
+              <!--key="viewIssuePage.webItem.clearStoryTest.key"-->
+              <!--section="jbehave-links-section" weight="30">-->
+        <!--<description key="viewIssuePage.webItem.clearStoryTest.description">The Clear Story Test Web Item</description>-->
+        <!--<conditions type="and">-->
+            <!--<condition class="com.atlassian.jira.plugin.webfragment.conditions.IsIssueEditableCondition"/>-->
+            <!--<condition class="com.atlassian.jira.plugin.webfragment.conditions.HasIssuePermissionCondition">-->
+                <!--<param name="permission" value="edit"/>-->
+            <!--</condition>-->
+            <!--<condition class="org.bitbucket.jbehaveforjira.plugin.conditions.JiraIssueHasStoryReportsCondition">-->
+            <!--</condition>-->
+        <!--</conditions>-->
+        <!--<label key="viewIssuePage.webItem.clearStoryTest.label"/>-->
+        <!--<link linkId="clear-jbehave-story-tests-link">/clear-jbehave-story-tests</link>-->
+        <!--<styleClass>clear-story-test-button</styleClass>-->
+    <!--</web-item>-->
     <!-- ==================================================================================================== -->
     <!--JBehave Preferences-->
     <!-- ==================================================================================================== -->
@@ -238,12 +237,11 @@
                class="org.bitbucket.jbehaveforjira.plugin.service.StoryReportServiceImpl"/>
     <component key="step-doc-service" name="Step Doc Service"
                class="org.bitbucket.jbehaveforjira.plugin.service.StepDocsServiceImpl"/>
-
     <!-- ==================================================================================================== -->
     <!--Active Objects-->
     <!-- ==================================================================================================== -->
     <ao key="ao-module">
-        <description>The module configuring the Active Objects service used by this plugin</description>
+        <description>JBehave for Jira Active Objects module</description>
         <entity>org.bitbucket.jbehaveforjira.plugin.ao.JBehaveStory</entity>
         <entity>org.bitbucket.jbehaveforjira.plugin.ao.JBehaveStoryReport</entity>
         <entity>org.bitbucket.jbehaveforjira.plugin.ao.JBehaveStepDoc</entity>
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/contextproviders/JiraIssueHasStoryCondition.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/contextproviders/JiraIssueHasStoryCondition.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/conditions/JiraIssueHasStoryCondition.java	(revision )
@@ -1,4 +1,4 @@
-package org.bitbucket.jbehaveforjira.plugin.contextproviders;
+package org.bitbucket.jbehaveforjira.plugin.conditions;
 
 import com.atlassian.jira.issue.Issue;
 import com.atlassian.jira.project.Project;
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryReportServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryReportServiceImpl.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/service/StoryReportServiceImpl.java	(revision )
@@ -43,7 +43,7 @@
             JBehaveStory story = byIssueKey.get(0);
 
             // first we delete any storyReport that exists for the same environment as in the received reportDTO
-            JBehaveStoryReport[] storyHtmlReports = story.getStoryHtmlReports();
+            JBehaveStoryReport[] storyHtmlReports = story.getStoryReports();
             String reportedEnvironment = storyReportDTO.getEnvironment();
             if (storyHtmlReports.length > 0) {
                 // find one for the reportedEnvironment if exists and delete it since it will be replaced by the one received
@@ -75,7 +75,7 @@
         } else {
             JBehaveStory story = byIssueKey.get(0);
 
-            JBehaveStoryReport[] storyTestReports = story.getStoryHtmlReports();
+            JBehaveStoryReport[] storyTestReports = story.getStoryReports();
             if (storyTestReports.length == 0) {
                 // createStoryReport a new report
                 return Collections.emptyList();
@@ -101,7 +101,7 @@
             throw new RuntimeException("More than one story was found for issue key - " + issueKey);
         } else {
             JBehaveStory story = byIssueKey.get(0);
-            JBehaveStoryReport[] storyTestReports = story.getStoryHtmlReports();
+            JBehaveStoryReport[] storyTestReports = story.getStoryReports();
             if (storyTestReports.length != 0) {
                 for (JBehaveStoryReport storyTestReport : storyTestReports) {
                     storyReportDao.delete(storyTestReport);
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/UserPreferencesResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/UserPreferencesResource.java	(revision )
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/UserPreferencesResource.java	(revision )
@@ -0,0 +1,51 @@
+package org.bitbucket.jbehaveforjira.plugin.rest;
+
+import com.atlassian.core.user.preferences.Preferences;
+import com.atlassian.jira.security.JiraAuthenticationContext;
+import com.atlassian.jira.user.ApplicationUser;
+import com.atlassian.jira.user.preferences.UserPreferencesManager;
+import org.bitbucket.jbehaveforjira.plugin.actions.UpdateJBehavePreferencesAction;
+import org.bitbucket.jbehaveforjira.plugin.dto.preferences.UserPreferencesDTO;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+/**
+ * Created by Dmytro on 8/25/2014.
+ */
+@Path("/preferences")
+public class UserPreferencesResource {
+
+    private JiraAuthenticationContext authenticationContext;
+    private UserPreferencesManager preferencesManager;
+
+    public UserPreferencesResource(JiraAuthenticationContext authenticationContext,
+                                   UserPreferencesManager preferencesManager) {
+
+        this.authenticationContext = authenticationContext;
+        this.preferencesManager = preferencesManager;
+    }
+
+    @GET
+    @Path("/for-user")
+    @Produces({MediaType.APPLICATION_JSON})
+    public UserPreferencesDTO getForCurrentUser(){
+
+        ApplicationUser user = authenticationContext.getUser();
+        final Preferences preferences = preferencesManager.getPreferences(user);
+
+        boolean showLineNumbers = preferences.getBoolean(UpdateJBehavePreferencesAction.PREFERENCE_KEY_SHOW_LINE_NUMBERS);
+        boolean autoAlignTables = preferences.getBoolean(UpdateJBehavePreferencesAction.PREFERENCE_KEY_AUTO_ALIGN_TABLES);
+        boolean autoInsertTabularFields = preferences.getBoolean(UpdateJBehavePreferencesAction.PREFERENCE_KEY_AUTO_INSERT_TABLES);
+
+        UserPreferencesDTO userPrefs = new UserPreferencesDTO();
+        userPrefs.setShowLineNumbers(showLineNumbers);
+        userPrefs.setAutoAlignTables(autoAlignTables);
+        userPrefs.setAutoInsertTabularFields(autoInsertTabularFields);
+        return userPrefs;
+    }
+
+
+}
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision )
@@ -99,6 +99,11 @@
         });
         this.editor = editor;
         editor.on("change", this.onEditorChangeHandler);
+
+//        editor.on("focus", this.onEditorFocusHandler);
+//        editor.on("blur", this.onEditorBlurHandler);
+
+//        AJS.$("#story-panel-container").on("focusout", storyController.onEditorFocusOut);
 //
 //        editor.on("beforeChange", function() {
 //           storyController.debug("##### on beforeChange");
@@ -109,29 +114,6 @@
 //            storyController.onEditorUpdateHandler(editor);
         });
 
-//        editor.on("keypress", function () {
-//            storyController.debug("##### on editor 'keypress'");
-////            this.onEditorChangeHandler
-//        });
-//
-//        editor.on("change", function (editor, changeObj) {
-//            storyController.debug("##### on editor CHANGE");
-//            storyController.onEditorChangeHandler(editor, changeObj);
-//            var paramStart = {line: 0, ch: 0};
-//            var paramEnd = {line: 1, ch: 10};
-//            var options = new Object();
-//            options.className = "test-marker";
-//            editor.getDoc().markText(paramStart, paramEnd, options);
-//        });
-
-//        AJS.$('#storyEditorSettingsTrigger').fadeToggle();
-//        AJS.$("#storyEditorHeader").mouseenter(function (event) {
-//            AJS.$('#storyEditorSettingsTrigger').fadeToggle(300);
-//        });
-//        AJS.$("#storyEditorHeader").mouseleave(function (event) {
-//            AJS.$('#storyEditorSettingsTrigger').fadeToggle(300);
-//        });
-
         AJS.$("#showLineNumbersTrigger").click(function (event) {
             var target = event.target;
             if (AJS.$(target).hasClass("checked")) {
@@ -172,6 +154,99 @@
         storyController.debug("# init");
     }
 
+    this.onEditorFocusHandler = function () {
+        storyController.debug("> onEditorFocusHandler");
+
+        AJS.$("#jbehave-story-val").removeClass("inactive");
+        AJS.$("#jbehave-story-val").addClass("active");
+
+        AJS.$("#overlayIconContainer").removeClass("icon-edit-sml");
+        AJS.$("#overlayIconContainer").addClass("throbber");
+
+        AJS.$("#jbehaveStoryForm").addClass("ajs-dirty-warning-exempt");
+        AJS.$("#jbehaveStoryForm").addClass("aui");
+
+        AJS.$("#story-panel-container").addClass("active");
+
+        AJS.$("#storyEditorButtons").show();
+
+        storyController.debug("# onEditorFocusHandler");
+    }
+
+    this.onEditorFocusOut = function (event) {
+
+        storyController.debug("> onEditorFocusOut");
+
+        var triggeredByFormButton = false;
+
+        var target = event.target;
+        var foundMatches = AJS.$("story-panel-container").find(target);
+
+        var relatedTarget = event.relatedTarget;
+        if (relatedTarget != null) {
+            var relatedTargetElements = AJS.$(relatedTarget);
+            if (relatedTargetElements.length > 0) {
+                var relatedTargetElement = relatedTargetElements[0];
+                var relatedTargetId = relatedTargetElement.getAttribute("id");
+                if (relatedTargetId == "saveStoryButton" || relatedTargetId == "cancelEditStoryButton") {
+                    // ignore event
+                    triggeredByFormButton = true;
+                }
+            }
+        }
+
+        if (!triggeredByFormButton) {
+            storyController.onEditorBlurHandler();
+            storyController.debug("# onEditorFocusOut");
+        }
+
+    }
+
+    this.onEditorBlurHandler = function () {
+
+        storyController.debug("> onEditorBlurHandler");
+
+        if (storyController.storyChanged) {
+            storyController.saveStory();
+        } else {
+            storyController.unfocusEditor();
+        }
+
+        storyController.debug("# onEditorBlurHandler");
+    }
+
+    this.unfocusEditor = function () {
+
+        storyController.debug("> unfocusEditor");
+
+        AJS.$("#jbehave-story-val").removeClass("saving");
+
+        AJS.$("#jbehave-story-val").addClass("inactive");
+        AJS.$("#jbehave-story-val").removeClass("active");
+
+        AJS.$("#overlayIconContainer").addClass("icon-edit-sml");
+        AJS.$("#overlayIconContainer").removeClass("throbber");
+
+        AJS.$("#jbehaveStoryForm").removeClass("ajs-dirty-warning-exempt");
+        AJS.$("#jbehaveStoryForm").removeClass("aui");
+
+
+        AJS.$("#story-panel-container").removeClass("active");
+
+        AJS.$("#storyEditorButtons").hide();
+
+        storyController.debug("# unfocusEditor");
+    }
+
+    this.showSavingMode = function () {
+
+        storyController.debug("> showSavingMode");
+
+        AJS.$("#jbehave-story-val").addClass("saving");
+
+        storyController.debug("# showSavingMode");
+    }
+
     this.alignTableBetween = function (tableStartLine, tableEndLine) {
 
         storyController.debug("> alignTableBetween");
@@ -767,6 +842,7 @@
     }
 
     this.onEditorChangeHandler = function (editor, changeObj) {
+
         storyController.debug("> onEditorChangeHandler");
 
         if (storyController.storyChanged == false) {
@@ -791,14 +867,17 @@
     }
 
     this.showSuccessMessage = function (saveCancelMsg) {
-        AJS.$("#storyMsgBar").empty();
-        AJS.messages.success("#storyMsgBar", {
-            title: null,
-            fadeout: true,
-            delay: 3000,
-            body: saveCancelMsg,
-            closeable: true
-        });
+
+        JIRA.Messages.showSuccessMsg("Story updated successfully");
+
+//        AJS.$("#storyMsgBar").empty();
+//        AJS.messages.success("#storyMsgBar", {
+//            title: null,
+//            fadeout: true,
+//            delay: 3000,
+//            body: saveCancelMsg,
+//            closeable: true
+//        });
     }
 
     this.loadStory = function () {
@@ -828,7 +907,6 @@
 
                 storyController.debug("# loadStory.callback");
             }
-
         );
 
         this.debug("# loadStory");
@@ -876,7 +954,6 @@
 
                     storyController.debug("# findStoryReports.callback");
                 }
-
             );
 
         }
@@ -898,12 +975,8 @@
         this.debug("# showStoryReports");
     }
 
+    this.saveStory = function () {
 
-    this.saveStory = function (event) {
-
-        this.debug("> saveStory");
-        event.preventDefault();
-
         var storyBeingSaved = new StoryModel();
         storyBeingSaved.projectKey = this.currentStory.projectKey;
         storyBeingSaved.issueKey = this.currentStory.issueKey;
@@ -914,13 +987,14 @@
         var storyPayload = JSON.stringify(storyBeingSaved, null, "\t");
         this.debug("saving story:\n" + storyPayload);
 
+        this.editor.setOption("readOnly", true);
+
         var waitingMsg = execspec.viewissuepage.showstory.renderWaitingMessage();
-//        storyController.showWarningMessage(waitingMsg);
+        storyController.showWarningMessage(waitingMsg);
         AJS.$('#storyEditedMsgContainer').html(waitingMsg);
         AJS.$('.save-story-button-spinner').spin();
+        this.showSavingMode();
 
-        this.editor.setOption("readOnly", true);
-
         storyService.saveOrUpdateStory(storyPayload, function (savedStory) {
             storyController.debug("> saveOrUpdateStory callback");
 //            storyView.showStoryReportButtons(savedStory);
@@ -930,21 +1004,29 @@
             storyController.showSuccessMessage("Story was saved successfully!");
             storyController.showStory(savedStory);
             storyController.debug("# saveOrUpdateStory callback");
+            storyController.unfocusEditor();
         });
 
+    }
 
-        this.debug("# saveStory");
+    this.saveStoryHandler = function (event) {
+
+        this.debug("> saveStoryHandler");
+        event.preventDefault();
+        storyController.saveStory();
+        this.debug("# saveStoryHandler");
     }
 
-    this.cancelEdit = function (event) {
+    this.cancelEditHandler = function (event) {
 
         this.debug("> cancelEditingStory");
         event.preventDefault();
 
-        this.showStory(this.currentStory);
+        storyController.showStory(this.currentStory);
 
-        // hide story edited message
+        //hide story edited message
         AJS.$("#storyMsgBar").empty();
+        storyController.unfocusEditor();
 
         this.debug("# cancelEditingStory");
     }
@@ -952,17 +1034,21 @@
 }
 
 AJS.$(function () {
+
     var ctr = new StoryController();
     ctr.init();
-});
 
-AJS.$(function () {
     // handling page updates in response to inline editing of other jira fields
     JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function (e, context, reason) {
-//            console.log("reason");
         if (reason != "inlineEditStarted ") {
             var ctr = new StoryController();
             ctr.init();
         }
+//        if (reason == JIRA.CONTENT_ADDED_REASON.pageLoad) {
+//        if (storyController == null) {
+//            var ctr = new StoryController();
+//            ctr.init();
+//        }
+//        }
     });
 });
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint-ORIG.js
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint-ORIG.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/show-hint-ORIG.js	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
@@ -1,434 +0,0 @@
-// CodeMirror, copyright (c) by Marijn Haverbeke and others
-// Distributed under an MIT license: http://codemirror.net/LICENSE
-
-(function (mod) {
-    if (typeof exports == "object" && typeof module == "object") // CommonJS
-        mod(require("../../lib/codemirror"));
-    else if (typeof define == "function" && define.amd) // AMD
-        define(["../../lib/codemirror"], mod);
-    else // Plain browser env
-        mod(CodeMirror);
-})(function (CodeMirror) {
-    "use strict";
-
-    var HINT_ELEMENT_CLASS = "CodeMirror-hint";
-    var ACTIVE_HINT_ELEMENT_CLASS = "CodeMirror-hint-active";
-
-    // This is the old interface, kept around for now to stay
-    // backwards-compatible.
-    CodeMirror.showHint = function (cm, getHints, options) {
-        if (!getHints) return cm.showHint(options);
-        if (options && options.async) getHints.async = true;
-        var newOpts = {hint: getHints};
-        if (options) for (var prop in options) newOpts[prop] = options[prop];
-        return cm.showHint(newOpts);
-    };
-
-    CodeMirror.defineExtension("showHint", function (options) {
-        // We want a single cursor position.
-        if (this.listSelections().length > 1 || this.somethingSelected()) return;
-
-        if (this.state.completionActive) this.state.completionActive.close();
-        var completion = this.state.completionActive = new Completion(this, options);
-        var getHints = completion.options.hint;
-        if (!getHints) return;
-
-        CodeMirror.signal(this, "startCompletion", this);
-        if (getHints.async)
-            getHints(this, function (hints) {
-                completion.showHints(hints);
-            }, completion.options);
-        else
-            return completion.showHints(getHints(this, completion.options));
-    });
-
-    function Completion(cm, options) {
-        this.cm = cm;
-        this.options = this.buildOptions(options);
-        this.widget = this.onClose = null;
-    }
-
-    Completion.prototype = {
-        close: function () {
-            if (!this.active()) return;
-            this.cm.state.completionActive = null;
-
-            if (this.widget) this.widget.close();
-            if (this.onClose) this.onClose();
-            CodeMirror.signal(this.cm, "endCompletion", this.cm);
-        },
-
-        active: function () {
-            return this.cm.state.completionActive == this;
-        },
-
-        pick: function (data, i) {
-            var completion = data.list[i];
-            if (completion.hint) completion.hint(this.cm, data, completion);
-            else this.cm.replaceRange(getText(completion), completion.from || data.from,
-                completion.to || data.to, "complete");
-            CodeMirror.signal(data, "pick", completion);
-            this.close();
-        },
-
-        showHints: function (data) {
-            if (!data || !data.list.length || !this.active()) return this.close();
-
-            if (this.options.completeSingle && data.list.length == 1)
-                this.pick(data, 0);
-            else
-                this.showWidget(data);
-        },
-
-        showWidget: function (data) {
-            this.widget = new Widget(this, data);
-            CodeMirror.signal(data, "shown");
-
-            var debounce = 0, completion = this, finished;
-            var closeOn = this.options.closeCharacters;
-            var startPos = this.cm.getCursor(), startLen = this.cm.getLine(startPos.line).length;
-
-            var requestAnimationFrame = window.requestAnimationFrame || function (fn) {
-                return setTimeout(fn, 1000 / 60);
-            };
-            var cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;
-
-            function done() {
-                if (finished) return;
-                finished = true;
-                completion.close();
-                completion.cm.off("cursorActivity", activity);
-                if (data) CodeMirror.signal(data, "close");
-            }
-
-            function update() {
-                if (finished) return;
-                CodeMirror.signal(data, "update");
-                var getHints = completion.options.hint;
-                if (getHints.async)
-                    getHints(completion.cm, finishUpdate, completion.options);
-                else
-                    finishUpdate(getHints(completion.cm, completion.options));
-            }
-
-            function finishUpdate(data_) {
-                data = data_;
-                if (finished) return;
-                if (!data || !data.list.length) return done();
-                if (completion.widget) completion.widget.close();
-                completion.widget = new Widget(completion, data);
-            }
-
-            function clearDebounce() {
-                if (debounce) {
-                    cancelAnimationFrame(debounce);
-                    debounce = 0;
-                }
-            }
-
-            function activity() {
-                clearDebounce();
-                var pos = completion.cm.getCursor(), line = completion.cm.getLine(pos.line);
-                if (pos.line != startPos.line || line.length - pos.ch != startLen - startPos.ch ||
-                    pos.ch < startPos.ch || completion.cm.somethingSelected() ||
-                    (pos.ch && closeOn.test(line.charAt(pos.ch - 1)))) {
-                    completion.close();
-                } else {
-                    debounce = requestAnimationFrame(update);
-                    if (completion.widget) completion.widget.close();
-                }
-            }
-
-            this.cm.on("cursorActivity", activity);
-            this.onClose = done;
-        },
-
-        buildOptions: function (options) {
-            var editor = this.cm.options.hintOptions;
-            var out = {};
-            for (var prop in defaultOptions) out[prop] = defaultOptions[prop];
-            if (editor) for (var prop in editor)
-                if (editor[prop] !== undefined) out[prop] = editor[prop];
-            if (options) for (var prop in options)
-                if (options[prop] !== undefined) out[prop] = options[prop];
-            return out;
-        }
-    };
-
-    function getText(completion) {
-        if (typeof completion == "string") return completion;
-        else return completion.text;
-    }
-
-    function buildKeyMap(completion, handle) {
-        var baseMap = {
-            Up: function () {
-                handle.moveFocus(-1);
-            },
-            Down: function () {
-                handle.moveFocus(1);
-            },
-            PageUp: function () {
-                handle.moveFocus(-handle.menuSize() + 1, true);
-            },
-            PageDown: function () {
-                handle.moveFocus(handle.menuSize() - 1, true);
-            },
-            Home: function () {
-                handle.setFocus(0);
-            },
-            End: function () {
-                handle.setFocus(handle.length - 1);
-            },
-            Enter: handle.pick,
-            Tab: handle.pick,
-            Esc: handle.close
-        };
-        var custom = completion.options.customKeys;
-        var ourMap = custom ? {} : baseMap;
-
-        function addBinding(key, val) {
-            var bound;
-            if (typeof val != "string")
-                bound = function (cm) {
-                    return val(cm, handle);
-                };
-            // This mechanism is deprecated
-            else if (baseMap.hasOwnProperty(val))
-                bound = baseMap[val];
-            else
-                bound = val;
-            ourMap[key] = bound;
-        }
-
-        if (custom)
-            for (var key in custom) if (custom.hasOwnProperty(key))
-                addBinding(key, custom[key]);
-        var extra = completion.options.extraKeys;
-        if (extra)
-            for (var key in extra) if (extra.hasOwnProperty(key))
-                addBinding(key, extra[key]);
-        return ourMap;
-    }
-
-    function getHintElement(hintsElement, el) {
-        while (el && el != hintsElement) {
-            if (el.nodeName.toUpperCase() === "LI" && el.parentNode == hintsElement) return el;
-            el = el.parentNode;
-        }
-    }
-
-    function Widget(completion, data) {
-
-        console.log("### in Widget");
-
-        this.completion = completion;
-        this.data = data;
-        var widget = this, cm = completion.cm;
-
-        var hints = this.hints = document.createElement("ul");
-        hints.className = "CodeMirror-hints";
-        this.selectedHint = data.selectedHint || 0;
-
-        var completions = data.list;
-        for (var i = 0; i < completions.length; ++i) {
-            var elt = hints.appendChild(document.createElement("li")), cur = completions[i];
-            var className = HINT_ELEMENT_CLASS + (i != this.selectedHint ? "" : " " + ACTIVE_HINT_ELEMENT_CLASS);
-            if (cur.className != null) className = cur.className + " " + className;
-            elt.className = className;
-            if (cur.render) cur.render(elt, data, cur);
-            else elt.appendChild(document.createTextNode(cur.displayText || getText(cur)));
-            elt.hintId = i;
-        }
-
-        var pos = cm.cursorCoords(completion.options.alignWithWord ? data.from : null);
-        var left = pos.left, top = pos.bottom, below = true;
-        hints.style.left = left + "px";
-        hints.style.top = top + "px";
-        // If we're at the edge of the screen, then we want the menu to appear on the left of the cursor.
-        var winW = window.innerWidth || Math.max(document.body.offsetWidth, document.documentElement.offsetWidth);
-        var winH = window.innerHeight || Math.max(document.body.offsetHeight, document.documentElement.offsetHeight);
-        (completion.options.container || document.body).appendChild(hints);
-        var box = hints.getBoundingClientRect(), overlapY = box.bottom - winH;
-        if (overlapY > 0) {
-            var height = box.bottom - box.top, curTop = box.top - (pos.bottom - pos.top);
-            if (curTop - height > 0) { // Fits above cursor
-                hints.style.top = (top = curTop - height) + "px";
-                below = false;
-            } else if (height > winH) {
-                hints.style.height = (winH - 5) + "px";
-                hints.style.top = (top = pos.bottom - box.top) + "px";
-                var cursor = cm.getCursor();
-                if (data.from.ch != cursor.ch) {
-                    pos = cm.cursorCoords(cursor);
-                    hints.style.left = (left = pos.left) + "px";
-                    box = hints.getBoundingClientRect();
-                }
-            }
-        }
-        var overlapX = box.left - winW;
-        if (overlapX > 0) {
-            if (box.right - box.left > winW) {
-                hints.style.width = (winW - 5) + "px";
-                overlapX -= (box.right - box.left) - winW;
-            }
-            hints.style.left = (left = pos.left - overlapX) + "px";
-        }
-
-        cm.addKeyMap(this.keyMap = buildKeyMap(completion, {
-            moveFocus: function (n, avoidWrap) {
-                widget.changeActive(widget.selectedHint + n, avoidWrap);
-            },
-            setFocus: function (n) {
-                widget.changeActive(n);
-            },
-            menuSize: function () {
-                return widget.screenAmount();
-            },
-            length: completions.length,
-            close: function () {
-                completion.close();
-            },
-            pick: function () {
-                widget.pick();
-            },
-            data: data
-        }));
-
-        if (completion.options.closeOnUnfocus) {
-            var closingOnBlur;
-            cm.on("blur", this.onBlur = function () {
-                closingOnBlur = setTimeout(function () {
-                    completion.close();
-                }, 100);
-            });
-            cm.on("focus", this.onFocus = function () {
-                clearTimeout(closingOnBlur);
-            });
-        }
-
-        var startScroll = cm.getScrollInfo();
-        cm.on("scroll", this.onScroll = function () {
-            var curScroll = cm.getScrollInfo(), editor = cm.getWrapperElement().getBoundingClientRect();
-            var newTop = top + startScroll.top - curScroll.top;
-            var point = newTop - (window.pageYOffset || (document.documentElement || document.body).scrollTop);
-            if (!below) point += hints.offsetHeight;
-            if (point <= editor.top || point >= editor.bottom) return completion.close();
-            hints.style.top = newTop + "px";
-            hints.style.left = (left + startScroll.left - curScroll.left) + "px";
-        });
-
-        CodeMirror.on(hints, "dblclick", function (e) {
-            var t = getHintElement(hints, e.target || e.srcElement);
-            if (t && t.hintId != null) {
-                widget.changeActive(t.hintId);
-                widget.pick();
-            }
-        });
-
-        CodeMirror.on(hints, "click", function (e) {
-            var t = getHintElement(hints, e.target || e.srcElement);
-            if (t && t.hintId != null) {
-                widget.changeActive(t.hintId);
-                if (completion.options.completeOnSingleClick) widget.pick();
-            }
-        });
-
-        CodeMirror.on(hints, "mousedown", function () {
-            setTimeout(function () {
-                cm.focus();
-            }, 20);
-        });
-
-        CodeMirror.signal(data, "select", completions[0], hints.firstChild);
-        return true;
-    }
-
-    Widget.prototype = {
-        close: function () {
-            if (this.completion.widget != this) return;
-            this.completion.widget = null;
-            this.hints.parentNode.removeChild(this.hints);
-            this.completion.cm.removeKeyMap(this.keyMap);
-
-            var cm = this.completion.cm;
-            if (this.completion.options.closeOnUnfocus) {
-                cm.off("blur", this.onBlur);
-                cm.off("focus", this.onFocus);
-            }
-            cm.off("scroll", this.onScroll);
-        },
-
-        pick: function () {
-            this.completion.pick(this.data, this.selectedHint);
-        },
-
-        changeActive: function (i, avoidWrap) {
-            console.log("### avoidWrap - " + avoidWrap);
-            if (i >= this.data.list.length)
-                i = avoidWrap ? this.data.list.length - 1 : 0;
-            else if (i < 0)
-                i = avoidWrap ? 0 : this.data.list.length - 1;
-            if (this.selectedHint == i) return;
-            var node = this.hints.childNodes[this.selectedHint];
-            node.className = node.className.replace(" " + ACTIVE_HINT_ELEMENT_CLASS, "");
-            node = this.hints.childNodes[this.selectedHint = i];
-            node.className += " " + ACTIVE_HINT_ELEMENT_CLASS;
-            if (node.offsetTop < this.hints.scrollTop)
-                this.hints.scrollTop = node.offsetTop - 3;
-            else if (node.offsetTop + node.offsetHeight > this.hints.scrollTop + this.hints.clientHeight)
-                this.hints.scrollTop = node.offsetTop + node.offsetHeight - this.hints.clientHeight + 3;
-            CodeMirror.signal(this.data, "select", this.data.list[this.selectedHint], node);
-        },
-
-        screenAmount: function () {
-            return Math.floor(this.hints.clientHeight / this.hints.firstChild.offsetHeight) || 1;
-        }
-    };
-
-    CodeMirror.registerHelper("hint", "auto", function (cm, options) {
-        var helpers = cm.getHelpers(cm.getCursor(), "hint"), words;
-        if (helpers.length) {
-            for (var i = 0; i < helpers.length; i++) {
-                var cur = helpers[i](cm, options);
-                if (cur && cur.list.length) return cur;
-            }
-        } else if (words = cm.getHelper(cm.getCursor(), "hintWords")) {
-            if (words) return CodeMirror.hint.fromList(cm, {words: words});
-        } else if (CodeMirror.hint.anyword) {
-            return CodeMirror.hint.anyword(cm, options);
-        }
-    });
-
-    CodeMirror.registerHelper("hint", "fromList", function (cm, options) {
-        var cur = cm.getCursor(), token = cm.getTokenAt(cur);
-        var found = [];
-        for (var i = 0; i < options.words.length; i++) {
-            var word = options.words[i];
-            if (word.slice(0, token.string.length) == token.string)
-                found.push(word);
-        }
-
-        if (found.length) return {
-            list: found,
-            from: CodeMirror.Pos(cur.line, token.start),
-            to: CodeMirror.Pos(cur.line, token.end)
-        };
-    });
-
-    CodeMirror.commands.autocomplete = CodeMirror.showHint;
-
-    var defaultOptions = {
-        hint: CodeMirror.hint.auto,
-        completeSingle: true,
-        alignWithWord: true,
-        closeCharacters: /[\s()\[\]{};:>,]/,
-        closeOnUnfocus: true,
-        completeOnSingleClick: false,
-        container: null,
-        customKeys: null,
-        extraKeys: null
-    };
-
-    CodeMirror.defineOption("hintOptions", null);
-});
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryResourceCrud.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryResourceCrud.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/rest/StoryCrudResource.java	(revision )
@@ -21,7 +21,7 @@
  * @since 2.0.0-SNAPSHOT
  */
 @Path("/crud")
-public class StoryResourceCrud {
+public class StoryCrudResource {
 
     private Logger log = LoggerFactory.getLogger(this.getClass());
 
@@ -31,7 +31,7 @@
 
     private JiraAuthenticationContext authenticationContext;
 
-    public StoryResourceCrud(StoryService storyService, SearchService searchService,
+    public StoryCrudResource(StoryService storyService, SearchService searchService,
                              JiraAuthenticationContext authenticationContext) {
         this.storyService = storyService;
         this.searchService = searchService;
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/actions/UpdateJBehavePreferencesAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/actions/UpdateJBehavePreferencesAction.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/actions/UpdateJBehavePreferencesAction.java	(revision )
@@ -22,13 +22,13 @@
     private static final Logger log = LoggerFactory.getLogger(UpdateJBehavePreferencesAction.class);
 
     private final static String PARAM_NAME_SHOW_LINE_NUMBERS = "showLineNumbers";
-    private final static String PREFERENCE_KEY_SHOW_LINE_NUMBERS = "jbehave.prefs.showLineNumbers";
+    public final static String PREFERENCE_KEY_SHOW_LINE_NUMBERS = "jbehave.prefs.showLineNumbers";
 
     private final static String PARAM_NAME_AUTO_ALIGN_TABLES = "autoAlignTables";
-    private final static String PREFERENCE_KEY_AUTO_ALIGN_TABLES = "jbehave.prefs.autoAlignTables";
+    public final static String PREFERENCE_KEY_AUTO_ALIGN_TABLES = "jbehave.prefs.autoAlignTables";
 
     private final static String PARAM_NAME_AUTO_INSERT_TABLES = "autoInsertTabularFields";
-    private final static String PREFERENCE_KEY_AUTO_INSERT_TABLES = "jbehave.prefs.autoInsertTabularFields";
+    public final static String PREFERENCE_KEY_AUTO_INSERT_TABLES = "jbehave.prefs.autoInsertTabularFields";
 
     private Long id;
 
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/dto/preferences/UserPreferencesDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/dto/preferences/UserPreferencesDTO.java	(revision )
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/dto/preferences/UserPreferencesDTO.java	(revision )
@@ -0,0 +1,43 @@
+package org.bitbucket.jbehaveforjira.plugin.dto.preferences;
+
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlRootElement;
+
+/**
+ * Created by Dmytro on 8/25/2014.
+ */
+@XmlRootElement
+@XmlAccessorType(XmlAccessType.FIELD)
+public class UserPreferencesDTO {
+
+    private boolean showLineNumbers;
+
+    private boolean autoAlignTables;
+
+    private boolean autoInsertTabularFields;
+
+    public boolean isShowLineNumbers() {
+        return showLineNumbers;
+    }
+
+    public void setShowLineNumbers(boolean showLineNumbers) {
+        this.showLineNumbers = showLineNumbers;
+    }
+
+    public boolean isAutoAlignTables() {
+        return autoAlignTables;
+    }
+
+    public void setAutoAlignTables(boolean autoAlignTables) {
+        this.autoAlignTables = autoAlignTables;
+    }
+
+    public boolean isAutoInsertTabularFields() {
+        return autoInsertTabularFields;
+    }
+
+    public void setAutoInsertTabularFields(boolean autoInsertTabularFields) {
+        this.autoInsertTabularFields = autoInsertTabularFields;
+    }
+}
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/temp.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/temp.html	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/temp.html	(revision )
@@ -1,188 +1,40 @@
-<div class="CodeMirror-code">
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">1</div>
+<div class="field-ignore-highlight editable-field active saving saving-description" id="description-val">
+    <form action="#" class="ajs-dirty-warning-exempt aui" id="description-form">
+        <div class="inline-edit-fields" tabindex="1">
+            <div class="field-group">
+
+
+                <div class="wiki-edit">
+                    <div class="wiki-edit-content" id="description-wiki-edit">
+                        <textarea data-issuekey="TESTING-1" data-projectkey="TESTING" wrap="virtual" rows="12"
+                                  name="description" id="description"
+                                  class="textarea long-field wiki-textfield long-field mentionable"
+                                  style="height: 91px; overflow-x: hidden; overflow-y: auto;"
+                                  disabled="disabled">asdf</textarea>
+
+                        <div class="content-inner">
-        </div>
+                        </div>
-        <pre class=" number-line-0 "><span style="padding-right: 0.1px;"><span class="cm-meta-title">Meta:</span></span></pre>
-    </div>
+                    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">2</div>
-        </div>
+                </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-meta-field">@testMetaValues</span></span></pre>
+
+
-    </div>
+            </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">3</div>
         </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span>​</span></span></pre>
+        <span class="overlay-icon throbber"></span>
+
+        <div class="save-options" tabindex="1">
+            <div class="field-tools">
+
+                <a title="preview" id="description-preview_link" href="#" class="fullscreen"><span
+                        class="aui-icon wiki-renderer-icon"></span></a>
+                <a data-helplink="local" title="Get local help about wiki markup help"
+                   href="/jira/secure/WikiRendererHelpAction.jspa?section=texteffects" id="viewHelp"
+                   class="help-lnk"><span class="aui-icon aui-icon-small aui-iconfont-help"></span></a>
-    </div>
+            </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">4</div>
+            <button title="Press Alt+s to submit this form" accesskey="s" class="aui-button submit" type="submit"
+                    disabled="disabled"><span class="icon icon-save">Save</span></button>
+            <button title="Press Alt+` to cancel" accesskey="`" class="aui-button cancel" type="cancel"
+                    disabled="disabled"><span class="icon icon-cancel">Cancel</span></button>
         </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-narrative-title">Narrative:</span>  </span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">5</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-narrative-field-keyword">In order to </span><span
-                class="cm-narrative-field-value">communicate effectively to the business some functionality</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">6</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-narrative-field-keyword">As a </span><span
-                class="cm-narrative-field-value">development team</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">7</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-narrative-field-keyword">I want to </span><span
-                class="cm-narrative-field-value">use Behaviour-Driven Development</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">8</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span>​</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">9</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-scenario-keyword">Scenario:</span><span class="cm-scenario-title"> my test scenario 1 add</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">10</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-given-step cm-matched-step">Given </span><span
-                class="cm-step-body cm-matched-step">test parameter value - </span><span
-                class="cm-step-body cm-matched-step cm-step-parameter">$paramValue</span><span
-                class="cm-step-body cm-matched-step"> units</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">11</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-given-step cm-matched-step">Given </span><span
-                class="cm-step-body cm-matched-step">something else:</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">12</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span
-                class="cm-step-body cm-matched-step cm-step-parameter">|transactionId  |amosdfs unt |</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">13</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-body cm-matched-step cm-step-parameter">|1<span
-                class="cm-tab">  </span>a<span class="cm-tab">   </span><span class="cm-tab">    </span><span class="cm-tab">    </span>|100 fgdfg<span
-                class="cm-tab">  </span>|</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">14</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span
-                class="cm-step-body cm-matched-step cm-step-parameter">asdfa sfa fad</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">15</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span>​</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">16</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-then-step">Then </span><span class="cm-step-body">the scenario should fail</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">17</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-body">sWhen I send the following request:</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">18</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-body">|action |value |currency |</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">19</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-body">|Buy    |100   |USD      |</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">20</div>
-        </div>
-        <pre><span style="padding-right: 0.1px;"><span class="cm-step-body">|Sell   |20    |GBP      |</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">21</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-then-step">Then </span><span class="cm-step-body">something should happen asdf</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">22</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-Then-step">And </span><span class="cm-step-body">asfasfasfasf</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">23</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span>​</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">24</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-scenario-keyword">Scenario:</span><span class="cm-scenario-title"> sad path asdfsfasdf</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">25</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-given-step">Given </span><span
-                class="cm-step-body">something</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">26</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-when-step">When </span><span class="cm-step-body">I try a step that has not yet been implemented</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">27</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-keyword cm-then-step">Then </span><span class="cm-step-body">an error should be reported in the test  report asadfa</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">28</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-body">sdfasfasf</span></span></pre>
-    </div>
-    <div style="position: relative;">
-        <div class="CodeMirror-gutter-wrapper" style="position: absolute; left: -29px;">
-            <div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;">29</div>
-        </div>
-        <pre class=""><span style="padding-right: 0.1px;"><span class="cm-step-body">asfasfasdfasdfadsf</span></span></pre>
-    </div>
+    </form>
 </div>
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(revision )
@@ -5,26 +5,26 @@
  */
 {template .renderStoryPanel}
 <div id="storyContainer">
-    <div id="storyEditorHeader">
+//    <div id="storyEditorHeader">
         <div id="storyMsgBar"></div>
-        <div id="editorSettingsContainer">
-              <a id="storyEditorSettingsTrigger" href="#storyEditorSettings" aria-owns="storyEditorSettings" aria-haspopup="true"
-                class="aui-button aui-button-link aui-dropdown2-trigger aui-dropdown2-trigger-arrowless aui-style-default">
-                <span class="aui-icon aui-icon-small aui-iconfont-configure aui-dropdown2-trigger-arrowless">Configure</span>
-                </a>
-              <!-- Simple Dropdown - dropdown -->
-              <div id="storyEditorSettings" class="aui-dropdown2 aui-style-default">
-                  <ul class="aui-list-truncate">
-                    <li><a id="showLineNumbersTrigger"
-                        class="aui-dropdown2-checkbox interactive">show line numbers</a></li>
-                      <li><a id="autoAlignTableParamsTrigger"
-                        class="aui-dropdown2-checkbox interactive">auto align tables</a></li>
-                      <li><a id="autoInsertTabularParametersTrigger"
-                        class="aui-dropdown2-checkbox interactive">auto insert tabular parameters</a></li>
-                  </ul>
-              </div><!-- .aui-dropdown2 -->
-        </div>
-    </div>
+//        <div id="editorSettingsContainer">
+//              <a id="storyEditorSettingsTrigger" href="#storyEditorSettings" aria-owns="storyEditorSettings" aria-haspopup="true"
+//                class="aui-button aui-button-link aui-dropdown2-trigger aui-dropdown2-trigger-arrowless aui-style-default">
+//                <span class="aui-icon aui-icon-small aui-iconfont-configure aui-dropdown2-trigger-arrowless">Configure</span>
+//                </a>
+//              <!-- Simple Dropdown - dropdown -->
+//              <div id="storyEditorSettings" class="aui-dropdown2 aui-style-default">
+//                  <ul class="aui-list-truncate">
+//                    <li><a id="showLineNumbersTrigger"
+//                        class="aui-dropdown2-checkbox interactive">show line numbers</a></li>
+//                      <li><a id="autoAlignTableParamsTrigger"
+//                        class="aui-dropdown2-checkbox interactive">auto align tables</a></li>
+//                      <li><a id="autoInsertTabularParametersTrigger"
+//                        class="aui-dropdown2-checkbox interactive">auto insert tabular parameters</a></li>
+//                  </ul>
+//              </div><!-- .aui-dropdown2 -->
+//        </div>
+//    </div>
 
     <div id="storyEditAreaContainer">
         <textarea id="storyTextArea"
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/contextproviders/JiraIssueHasStoryReportsCondition.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/contextproviders/JiraIssueHasStoryReportsCondition.java	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/conditions/JiraIssueHasStoryReportsCondition.java	(revision )
@@ -1,4 +1,4 @@
-package org.bitbucket.jbehaveforjira.plugin.contextproviders;
+package org.bitbucket.jbehaveforjira.plugin.conditions;
 
 import com.atlassian.jira.issue.Issue;
 import com.atlassian.jira.project.Project;
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesEditStoryRich.soy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesEditStoryRich.soy	(revision 911067faa5b5da15890c539dbee2b80ff7f3f7e7)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesEditStoryRich.soy	(revision )
@@ -18,60 +18,7 @@
 </li>
 {/template}
 
-/**
- * Renders the '+' insert icon link to add scenario steps.
- * @param triggerDivId
- * @param dropdownDivId
- * @param dropdownItems
- * @param additionalParams
- */
-{template .renderInsertStepLinkDiv}
-    {let $addIconClass: 'aui-icon aui-icon-small aui-iconfont-add' /}
-    <div class="insert-element-link-div">
-        &nbsp;
-        <a aria-controls="dropdown2-more" href="#{$dropdownDivId}" aria-owns="{$dropdownDivId}"
-            aria-haspopup="true"
-            class="aui-dropdown2-trigger aui-style-default aui-dropdown2-trigger-arrowless insert-element-link"
-            style="display: none"
-            pressed="false">
-            <span class="{$addIconClass} insert-element-icon"></span>
-        </a>
-        <div id="{$dropdownDivId}" trigger-div-id="{$triggerDivId}"
-            class="aui-dropdown2 aui-style-default insert-dropdown-content"
-            aria-hidden="true" data-dropdown2-alignment="left"
-//            style="left: 280.6px; top: 801.3px; display: none;"
-            style="display: none; min-width: 700px; max-width: 700px;"
-            >
-            <ul class="aui-list-truncate dropdown-items">
-                {foreach $item in $dropdownItems}
-                    <li class="insert-step-link-container">
-                        <a href="#"
-                        class="story-element-insert-link interactive"
-                        onclick="editButtonHandler.insertStep(event, '{$item.elementName}'
-                        {if $additionalParams != null}
-                            {foreach $param in $additionalParams}
-                                , '{$param}'
-                            {/foreach}
-                        {/if}
-                        )">{$item.text}</a></li>
-                {/foreach}
-//                <li class="concrete-given-step hidden">
-//                    <a href="http://example.com/">
-//                        Long Comment, asfasfasdfasfa fas fas fasdfa sfa sfd asdf as fdasfasdfasdfas fdasdfasdf
-//                    </a>
-//                </li>
-//                <li class="concrete-given-step hidden">
-//                    <a href="http://example.com/">Concrete step</a>
-//                </li>
-            </ul>
-        </div>
-        <div class="step-auto-complete-container"
-//            style="left: 280.6px; top: 801.3px; display: none;"
-        >
-            TODO
-        </div>
-    </div>
-{/template}
+
 
 /**
  * Renders the text area type editable field.
