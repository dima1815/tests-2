Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision )
@@ -251,6 +251,18 @@
         }
     }
 
+    var createScenarioLozenge = function(text, type) {
+        var lozengeContainer = document.createElement("SPAN");
+        AJS.$(lozengeContainer).addClass("jb-story-report-lozenge-container");
+        var lozengeElement = document.createElement("SPAN");
+        AJS.$(lozengeElement).html(text);
+        AJS.$(lozengeElement).addClass("aui-lozenge");
+        AJS.$(lozengeElement).addClass("aui-lozenge-" + type);
+        AJS.$(lozengeElement).addClass("jb-story-report-lozenge");
+        AJS.$(lozengeContainer).append(lozengeElement);
+        return lozengeContainer;
+    }
+
     this.showStoryReports = function (storyTestReports) {
 
         debug("> showStoryReports");
@@ -325,6 +337,44 @@
         AJS.$('.jb-story-ele-exp-trigger').mouseout(function (event) {
             var target = AJS.$(event.target)[0];
             AJS.$(target).closest(".jb-story-ele-exp-trigger").removeClass("mouse-over");
+        });
+
+        // expand failed and pending scenarios
+
+        // append scenario status lozenge, depending on the step
+        AJS.$('.jb-story-report-scenario').each(function(index, element) {
+
+            var failedSteps = AJS.$(element).find(".jb-story-report-step-failed");
+            if (failedSteps != null && failedSteps.length > 0) {
+                // story has failed
+                var titleContainer = AJS.$(element).find(".jb-story-report-scenario-title")[0];
+                AJS.$(titleContainer).append(createScenarioLozenge("failed", "error"));
+
+                AJS.$(element).find(".jb-story-ele-exp-trigger").removeClass("collapsed");
+                AJS.$(element).find(".jb-story-ele-exp-trigger").addClass("expanded");
+                var contentDiv = AJS.$(element).find(".jb-story-ele-exp-content")[0];
+                AJS.$(contentDiv).toggle();
+
+            } else {
+                // check for pending steps
+                var pendingSteps = AJS.$(element).find(".jb-story-report-step-pending");
+                if (pendingSteps != null && pendingSteps.length > 0) {
+                    // story has failed
+                    var titleContainer = AJS.$(element).find(".jb-story-report-scenario-title")[0];
+                    AJS.$(titleContainer).append(createScenarioLozenge("pending", "current"));
+
+                    AJS.$(element).find(".jb-story-ele-exp-trigger").removeClass("collapsed");
+                    AJS.$(element).find(".jb-story-ele-exp-trigger").addClass("expanded");
+                    var contentDiv = AJS.$(element).find(".jb-story-ele-exp-content")[0];
+                    AJS.$(contentDiv).toggle();
+
+                } else {
+                    // check for successful steps
+                    var titleContainer = AJS.$(element).find(".jb-story-report-scenario-title")[0];
+                    AJS.$(titleContainer).append(createScenarioLozenge("success", "success"));
+                }
+            }
+
         });
 
         debug("# showStoryReports");
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/show-story.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/show-story.css	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/show-story.css	(revision )
@@ -165,7 +165,7 @@
 
 
 #storyEditAreaContainer {
-    padding-top: 10px;
+    padding-top: 5px;
 }
 
 /*#storyMsgBar {*/
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(revision )
@@ -130,19 +130,23 @@
 }
 
 .jb-story-report-step {
+    /*padding-top: 5px;*/
+}
+
+.jb-story-report-scenario {
     padding-top: 5px;
 }
 
 .jb-scenario-example {
     color: firebrick;
     font-weight: bold;
-    padding-top: 10px;
+    padding-top: 5px;
 }
 
 /*.jb-story-report-scenario-title, */
 .jb-story-report-meta {
     color: #770088;
-    /*padding-left: 14px;*/
+    padding-top: 5px;
 }
 
 .jb-story-report-meta-keyword {
@@ -152,6 +156,10 @@
     /*padding-left: 14px;*/
 }
 
+.jb-story-report-lifecycle {
+    padding-top: 5px;
+}
+
 .jb-story-report-lifecycle-keyword {
     color: #594300;
     font-size: 16px;
@@ -160,6 +168,7 @@
 
 .jb-story-report-narrative {
     color: #0000cc;
+    padding-top: 5px;
 }
 
 .jb-story-report-narrative-keyword {
@@ -173,7 +182,7 @@
 }
 
 .jb-story-report-description {
-    padding-top: 10px;
+    padding-top: 5px;
 }
 
 .jb-story-ele-exp-trigger {
@@ -206,5 +215,14 @@
 .jb-story-report-description {
     color: #d04437;
     padding-left: 16px;
-    padding-bottom: 10px;
+    /*padding-bottom: 10px;*/
+}
+
+.jb-story-report-lozenge {
+    vertical-align: text-top;
+}
+
+.jb-story-report-lozenge-container {
+    margin-left: 4px;
+    /*vertical-align: text-top;*/
-}
+}
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/TabularFieldInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/TabularFieldInfo.java	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/TabularFieldInfo.java	(revision )
@@ -11,8 +11,14 @@
 
     private String fieldName;
 
+    public boolean mandatory;
+
     private List<String> allowedValues;
 
+    public List<String> suggestedValues;
+
+    public String format;
+
     public String getFieldName() {
         return fieldName;
     }
@@ -29,4 +35,27 @@
         this.allowedValues = allowedValues;
     }
 
+    public boolean isMandatory() {
+        return mandatory;
+    }
+
+    public void setMandatory(boolean mandatory) {
+        this.mandatory = mandatory;
+    }
+
+    public List<String> getSuggestedValues() {
+        return suggestedValues;
+    }
+
+    public void setSuggestedValues(List<String> suggestedValues) {
+        this.suggestedValues = suggestedValues;
+    }
+
+    public String getFormat() {
+        return format;
+    }
+
+    public void setFormat(String format) {
+        this.format = format;
+    }
 }
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/ParameterInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/ParameterInfo.java	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/com/jbehaveforjira/plugin/dto/stepdoc/ParameterInfo.java	(revision )
@@ -17,6 +17,10 @@
 
     private List<String> allowedValues;
 
+    public List<String> suggestedValues;
+
+    public String format;
+
     private List<TabularFieldInfo> tabularFieldInfos;
 
     public List<TabularFieldInfo> getTabularFieldInfos() {
@@ -59,4 +63,19 @@
         this.allowedValues = allowedValues;
     }
 
+    public List<String> getSuggestedValues() {
+        return suggestedValues;
+    }
+
+    public void setSuggestedValues(List<String> suggestedValues) {
+        this.suggestedValues = suggestedValues;
+    }
+
+    public String getFormat() {
+        return format;
+    }
+
+    public void setFormat(String format) {
+        this.format = format;
+    }
 }
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/jbehave-hint.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/jbehave-hint.js	(date 1411365815000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/addon/hint/jbehave-hint.js	(revision )
@@ -528,8 +528,30 @@
                                                             globalToCh = stepHint.to.ch;
                                                         }
                                                     }
+                                                }else {
+                                                    var fieldSuggestedValues = tabularFieldInfo.suggestedValues;
+                                                    if (fieldSuggestedValues != null && fieldSuggestedValues.length > 0) {
+                                                        for (var d = 0; d < fieldSuggestedValues.length; d++) {
+                                                            var fieldSuggestedValue = fieldSuggestedValues[d];
+                                                            if (columnValue.length == 0 || fieldSuggestedValue.substring(0, columnValue.length) == columnValue) {
+                                                                // do the hint on field suggested value
+                                                                var stepHint = new Object();
+                                                                stepHint.text = fieldSuggestedValue;
+                                                                stepHint.html = "<span class='cm-jb-story-step-body matched-step step-parameter'>" + fieldSuggestedValue + "</span>";
+                                                                stepHint.render = function (element, data, self) {
+                                                                    element.innerHTML = self.html;
+                                                                };
+                                                                stepHint.from = CodeMirror.Pos(cursor.line, columnStartPos);
+                                                                stepHint.to = CodeMirror.Pos(cursor.line, columnStartPos + columnValue.length);
+                                                                list.push(stepHint);
+                                                                hintedOnTabularParameter = true;
+                                                                globalFromCh = stepHint.from.ch;
+                                                                globalToCh = stepHint.to.ch;
-                                                }
-                                            }
+                                                            }
+                                                        }
+                                                    }
+                                                }
+                                            }
 
                                         }
                                     }
@@ -604,6 +626,36 @@
                                         hintedOnRegularParameter = true;
                                         globalFromCh = stepHint.from.ch;
                                         globalToCh = stepHint.to.ch;
+                                    }
+                                } else {
+                                    var suggestedValues = paramInfo.suggestedValues;
+                                    if (suggestedValues != null && suggestedValues.length > 0) {
+                                        for (var i = 0; i < suggestedValues.length; i++) {
+                                            var suggestedValue = suggestedValues[i];
+                                            var stepHint = new Object();
+                                            stepHint.text = suggestedValue;
+                                            stepHint.html = "<span class='cm-jb-story-step-body matched-step step-parameter'>" + suggestedValue + "</span>";
+                                            stepHint.render = function (element, data, self) {
+                                                element.innerHTML = self.html;
+                                            };
+
+                                            if (parameterReplaceFrom != null && parameterReplaceTo != null) {
+                                                var fromPosition = CodeMirror.Pos(cursor.line, parameterReplaceFrom);
+                                                stepHint.from = fromPosition;
+                                                var toPosition = CodeMirror.Pos(cursor.line, parameterReplaceTo);
+                                                stepHint.to = toPosition;
+                                                editor.getDoc().setSelection({line: fromPosition.line, ch: fromPosition.ch},
+                                                    {line: toPosition.line, ch: toPosition.ch});
+
+                                            } else {
+                                                stepHint.from = CodeMirror.Pos(cursor.line, cursor.ch);
+                                                stepHint.to = CodeMirror.Pos(cursor.line, cursor.ch);
+                                            }
+                                            list.push(stepHint);
+                                            hintedOnRegularParameter = true;
+                                            globalFromCh = stepHint.from.ch;
+                                            globalToCh = stepHint.to.ch;
+                                        }
                                     }
                                 }
                             }
