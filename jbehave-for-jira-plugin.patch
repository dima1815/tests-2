Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(date 1414057529000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision )
@@ -831,10 +831,15 @@
         }
 
         this.startsWithTableComment = function (text) {
-            var firstChar = text.substring(0, 3);
-            return firstChar == "|--";
+            var firstChars = text.substring(0, 3);
+            return firstChars == "|--";
         }
+
+        this.startsWithLineComment = function (text) {
+            var firstChars = text.substring(0, 3);
+            return firstChars == "!--";
-    }
+        }
+    }
 
 //    this.addModeGutterError = function (from, to, message) {
 //        errorsGutter.addModeError(from, to, message);
@@ -1405,6 +1410,17 @@
             }
         }
 
+        this.lineStartsWithLineComment = function (lineNumber) {
+
+            var lineHandle = editor.getLineHandle(lineNumber);
+            var lineText = lineHandle.text;
+            if (textUtils.startsWithLineComment(lineText)) {
+                return true;
+            } else {
+                return false;
+            }
+        }
+
         this.lineStartsWithAfterOrOutcome = function (lineNumber) {
 
             var lineHandle = editor.getLineHandle(lineNumber);
@@ -1443,7 +1459,8 @@
             while (nextLineNumber < lineCount) {
                 if (this.lineStartsWithStepKeyword(nextLineNumber)
                     || this.lineStartsWithScenarioOrExamples(nextLineNumber)
-                    || this.lineStartsWithAfterOrOutcome(nextLineNumber)) {
+                    || this.lineStartsWithAfterOrOutcome(nextLineNumber)
+                    || this.lineStartsWithLineComment(nextLineNumber)) {
                     break;
                 } else {
                     lastStepLine = nextLineNumber;
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js	(date 1414057529000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/mode/jbehave/jbehave.js	(revision )
@@ -789,7 +789,9 @@
                 state.lastTokenType = "";
 
                 // LINE COMMENT
-                if (stream.sol() && !state.inTable && stream.match(/!--.*/)) {
+                if (stream.sol() &&
+//                    !state.inTable &&
+                    stream.match(/!--.*/)) {
 //                    clearErrorsGutter();
                     state.lastTokenType += " jb-story-comment";
 
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(date 1414057529000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(revision )
@@ -216,6 +216,12 @@
     font-weight: bold;
 }
 
+.jb-story-report .step .comment {
+    /*display: block;*/
+    font-style: italic;
+    color: #808080;
+}
+
 .jb-story-report .step .outcome-keyword.pending {
     color: #ffd351;
 }
\ No newline at end of file
