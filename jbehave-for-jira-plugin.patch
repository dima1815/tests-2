Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/js/StoryController.js	(revision )
@@ -33,7 +33,10 @@
     var stepDocs = undefined;
 
     var storyChanged = false;
+    var initialized = false;
 
+    var currentStoryInput = "current input";
+
     // initialization sequence
     restService.getUserPreferences(function (fetchedPreferences) {
         prefs = fetchedPreferences;
@@ -46,6 +49,12 @@
         });
     });
 
+    this.updateCurrentStoryInput = function () {
+        if (initialized) {
+            currentStoryInput = editor.getValue();
+        }
+    }
+
     this.initEditor = function () {
         // initialize story panel
         var storyPanelContent = execspec.viewissuepage.showstory.renderStoryPanel();
@@ -55,7 +64,7 @@
         CodeMirror.commands.autocomplete = function (cm) {
             cm.showHint({hint: CodeMirror.hint.jbehave});
         }
-        var editor = CodeMirror.fromTextArea(document.getElementById("storyTextArea"), {
+        var editor = CodeMirror.fromTextArea(document.getElementById("jbStoryTextArea"), {
             mode: "jbehave",
 //            lineComment: "!--",
             lineNumbers: prefs.showLineNumbers,
@@ -107,9 +116,21 @@
 
         editor.on("change", storyController.onEditorChangeHandler);
 
+        editor.on("focus", storyController.onEditorFocusHandler);
+        editor.on("blur", storyController.onEditorBlurHandler);
+
         return editor;
     }
 
+    this.onEditorFocusHandler = function (editor, changeObj) {
+        console.log("#### editor focused");
+        AJS.$("#myDiv").focus();
+    }
+
+    this.onEditorBlurHandler = function (editor, changeObj) {
+        console.log("#### editor blurred");
+    }
+
     this.onEditorChangeHandler = function (editor, changeObj) {
         debug("> onEditorChangeHandler");
 
@@ -135,6 +156,32 @@
         });
     }
 
+    this.reshowStory = function () {
+
+        debug("> reshowStory");
+
+        if (initialized) {
+
+            editor = storyController.initEditor();
+
+            editor.off("change", storyController.onEditorChangeHandler);
+            editor.setValue(currentStoryInput);
+            editor.on("change", storyController.onEditorChangeHandler);
+
+            storyController.remarkAllSteps();
+            if (loadedStory.version != null) {
+                storyController.fetchAndShowStoryReports();
+            }
+
+            msgBar.reshowCurrentMsg();
+
+        } else {
+            // we have not initialized our first run
+        }
+
+        debug("# reshowStory");
+    }
+
     this.showStory = function (storyModel) {
 
         debug("> showStory");
@@ -148,35 +195,44 @@
 
         editor.setOption("readOnly", false);
 
-        debug("# showStory");
+        storyController.remarkAllSteps();
+        if (storyModel.version != null) {
+            storyController.fetchAndShowStoryReports();
+        }
 
-        var stepStartingLine = editorUtils.findStepStartingLineAfter(-1);
-        while (stepStartingLine > -1) {
-            var stepEndingLine = editorUtils.findLastStepLineFrom(stepStartingLine);
-            editorUtils.remarkStepBetween(stepStartingLine, stepEndingLine);
-            if (stepEndingLine >= editor.lineCount()) {
-                stepStartingLine = -1;
-            } else {
-                stepStartingLine = editorUtils.findStepStartingLineAfter(stepEndingLine);
+        debug("# showStory");
-            }
+    }
-        }
 
-        if (storyModel.version != null) {
+    this.fetchAndShowStoryReports = function () {
-            // this is NOT a new story, so check and show any story reports
-            restService.findStoryReports(pageUtils.getProjectKey(), pageUtils.getIssueKey(),
-                function (storyReportsPayload) {
-                    debug("> findStoryReports.callback");
-                    if (storyReportsPayload != undefined && storyReportsPayload.storyTestReports.length != 0) {
-                        debug("found storyReportsPayload - " + JSON.stringify(storyReportsPayload, null, "\t"));
-                        storyController.showStoryReports(storyReportsPayload.storyTestReports);
-                    } else {
-                        debug("no story reports were found for project");
-                    }
+        // this is NOT a new story, so check and show any story reports
+        restService.findStoryReports(pageUtils.getProjectKey(), pageUtils.getIssueKey(),
+            function (storyReportsPayload) {
+                debug("> findStoryReports.callback");
+                if (storyReportsPayload != undefined && storyReportsPayload.storyTestReports.length != 0) {
+                    debug("found storyReportsPayload - " + JSON.stringify(storyReportsPayload, null, "\t"));
+                    storyController.showStoryReports(storyReportsPayload.storyTestReports);
+                } else {
+                    debug("no story reports were found for project");
+                }
+                initialized = true;
-                    debug("# findStoryReports.callback");
-                }
-            );
-        }
+                debug("# findStoryReports.callback");
+            }
+        );
+    }
+
+    this.remarkAllSteps = function () {
+
+        var stepStartingLine = editorUtils.findStepStartingLineAfter(-1);
+        while (stepStartingLine > -1) {
+            var stepEndingLine = editorUtils.findLastStepLineFrom(stepStartingLine);
+            editorUtils.remarkStepBetween(stepStartingLine, stepEndingLine);
+            if (stepEndingLine >= editor.lineCount()) {
+                stepStartingLine = -1;
+            } else {
+                stepStartingLine = editorUtils.findStepStartingLineAfter(stepEndingLine);
-    }
+            }
+        }
+    }
 
     this.showStoryReports = function (storyTestReports) {
 
@@ -194,7 +250,7 @@
         // assign expand triggers for failure traces
         AJS.$('.failure-trace-expander-trigger').each(function (index, element) {
 
-            AJS.$(element).click(function(eventObject) {
+            AJS.$(element).click(function (eventObject) {
                 if (eventObject.preventDefault) {
                     eventObject.preventDefault();
                 } else {
@@ -204,7 +260,7 @@
                 var targetNode = AJS.$(target)[0];
                 var traceContainer = AJS.$(targetNode).siblings(".jb-story-report-failure-trace-container")[0];
                 AJS.$(traceContainer).toggle();
-                var replaceText =targetNode.getAttribute("replace-text");
+                var replaceText = targetNode.getAttribute("replace-text");
                 var currentHtml = AJS.$(targetNode).html();
                 AJS.$(targetNode).html(replaceText);
                 targetNode.setAttribute("replace-text", currentHtml);
@@ -267,10 +323,17 @@
 
     function MsgBar() {
 
+        var currentMsgContent = "";
+
         this.clear = function () {
             AJS.$("#storyMsgBar").empty();
+            currentMsgContent = AJS.$("#storyMsgBar").html();
         }
 
+        this.reshowCurrentMsg = function () {
+            AJS.$("#storyMsgBar").html(currentMsgContent);
+        }
+
         this.showSaveCancelMsg = function () {
             var saveCancelContent = execspec.viewissuepage.showstory.renderSaveCancelMsg();
             AJS.$("#storyMsgBar").empty();
@@ -280,15 +343,16 @@
                 body: saveCancelContent,
                 closeable: false
             });
+            currentMsgContent = AJS.$("#storyMsgBar").html();
         }
 
         this.showSavingMsg = function () {
             var waitingMsg = execspec.viewissuepage.showstory.renderWaitingMessage();
             AJS.$('#storyEditedMsgContainer').html(waitingMsg);
+            currentMsgContent = AJS.$("#storyMsgBar").html();
         }
 
         this.showSuccessMessage = function (saveCancelMsg) {
-
             AJS.$("#storyMsgBar").empty();
             AJS.messages.success("#storyMsgBar", {
                 title: null,
@@ -297,6 +361,7 @@
                 body: saveCancelMsg,
                 closeable: true
             });
+            currentMsgContent = AJS.$("#storyMsgBar").html();
         }
     }
 
@@ -1039,7 +1104,7 @@
             var nextStepStartLine = this.findStepStartingLineInSameScenarioAfter(scanEndLine);
             var startsWithAnd;
             if (nextStepStartLine != -1) {
-                startsWithAnd= this.lineStartsWithAndKeyword(nextStepStartLine);
+                startsWithAnd = this.lineStartsWithAndKeyword(nextStepStartLine);
             }
             while (nextStepStartLine != -1 && (nextStepStartLine <= toLine || startsWithAnd)) {
                 scanStartLine = nextStepStartLine;
@@ -1226,8 +1291,9 @@
 
     // handling page updates in response to inline editing of other jira fields
     JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED, function (e, context, reason) {
+        storyController.updateCurrentStoryInput();
-        if (reason != "inlineEditStarted ") {
+        if (reason != "inlineEditStarted") {
-            storyController = new StoryController();
+            storyController.reshowStory();
         }
 //        if (reason == JIRA.CONTENT_ADDED_REASON.pageLoad) {
 //        if (storyController == null) {
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/velocity/story_panel.vm	(revision )
@@ -1,57 +1,27 @@
 <div id="story-panel"><!--DEFAULT content!--></div>
 
-##<div class="mod-content">
-##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field inactive">
-##        <form id="jbehaveStoryForm" class="" action="#">
-##            <div id="story-panel-container">
-##                <div id="story-panel"><!--DEFAULT content!--></div>
-##            </div>
-##            <span onclick="storyController.onEditorFocusHandler()" id="overlayIconContainer"
-##                  class="overlay-icon icon icon-edit-sml"></span>
+##<div id="story-panel">
+##    <div id="myDiv" tabindex="-1" class="editable-field active">
+##        <script type="text/javascript">
+##            var counter = 0;
+##            counter++;
+##//            alert("hello world - " + counter);
 ##
-##            <div id="storyEditorButtons" style="display: none;" tabindex="1" class="save-options">
-##                <button id="saveStoryButton" onclick="storyController.saveStoryHandler(event)"
-##                        type="submit" class="aui-button submit" accesskey="s"
-##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
-##                <button id="cancelEditStoryButton" onclick="storyController.cancelEditHandler(event)" type="cancel"
-##                        class="aui-button cancel"
-##                        accesskey="`" title="Press Alt+` to cancel"><span
-##                        class="icon icon-cancel">Cancel</span></button>
+##//            AJS.$(function () {
+##//                alert("Alert on window load event");
+##//            });
+##        </script>
+##        <textarea rows="10" >Test area</textarea><br><br>
+##        <span class="overlay-icon icon icon-edit-sml"></span>
-##            </div>
+##    </div>
-##        </form>
+##    <div id="storyContainer" class="editable-field active">
+##        <div id="storyMsgBar"></div>
+##        <div id="storyEditAreaContainer">
+##            <textarea id="jbStoryTextArea"
+##                      rows="10"
+####                      style="display: none;"
+##                      placeholder="enter story text here"></textarea>
-##    </div>
+##        </div>
-##</div>
+##    </div>
-
-##<div class="mod-content">
-##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field active">
-##        <form class="ajs-dirty-warning-exempt aui" action="#">
-##            <div id="story-panel-container" class="active">
-##                <div id="story-panel" style="width: 100%"><!--DEFAULT content!--></div>
-##            </div>
+##</div>
-##            <span class="overlay-icon throbber"></span>
-##            <div tabindex="1" class="save-options">
-##                <button type="submit" class="aui-button submit" accesskey="s"
-##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
-##                <button type="cancel" class="aui-button cancel" accesskey="`" title="Press Alt+` to cancel"><span
-##                        class="icon icon-cancel">Cancel</span></button>
-##            </div>
-##        </form>
-##    </div>
-##</div>
 
-##<div class="mod-content">
-##    <div id="jbehave-story-val" class="field-ignore-highlight editable-field active saving">
-##        <form class="ajs-dirty-warning-exempt aui" action="#">
-##            <div id="story-panel-container" class="active">
-##                <div id="story-panel" style="width: 100%"><!--DEFAULT content!--></div>
-##            </div>
-##            <span class="overlay-icon throbber"></span>
-##            <div tabindex="1" class="save-options">
-##                <button type="submit" class="aui-button submit" accesskey="s"
-##                        title="Press Alt+s to submit this form"><span class="icon icon-save">Save</span></button>
-##                <button type="cancel" class="aui-button cancel" accesskey="`" title="Press Alt+` to cancel"><span
-##                        class="icon icon-cancel">Cancel</span></button>
-##            </div>
-##        </form>
-##    </div>
-##</div>
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/lib/codemirror.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/lib/codemirror.css	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/3rdparty/codemirror-4.3/lib/codemirror.css	(revision )
@@ -428,6 +428,16 @@
     z-index: 1;
 }
 
+/*.CodeMirror-focused  {*/
+    /*border: 2px solid green;*/
+    /*box-sizing: border-box;*/
+    /*border-spacing: 0;*/
+    /*box-shadow: 0 0 0 0 transparent;*/
+    /*border: 1px solid #ccc;*/
+    /*border-radius: 3.01px;*/
+    /*border-radius: 2.01px;*/
+/*}*/
+
 .CodeMirror-focused div.CodeMirror-cursors {
     visibility: visible;
 }
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/soy/TemplatesShowStory.soy	(revision )
@@ -5,9 +5,34 @@
  */
 {template .renderStoryPanel}
 <div id="storyContainer">
-    <div id="storyMsgBar"></div>
+    <div id="storyMsgBar">
+//            <div id="storyModifiedMessage">
+//                {call aui.message.warning}
+//                    {param title: '' /}
+//                    {param closeable: 'true' /}
+////                    {param id: 'messageIDattribute' /}
+//                    {param content}
+//                         <span>Story has been modified! <span
+//                            class="edit-operation-link"><a href="#" onclick="storyController.buttonHandler.saveStoryHandler(event)">Save</a></span> or <span
+//                            class="edit-operation-link"><a href="#" onclick="storyController.buttonHandler.cancelEditHandler(event)">Cancel</a></span></span>
+//                    {/param}
+//                {/call}
+//            </div>
+//            <div id="storySavingMessage" class="aui-message aui-message-error">
+//                <p>Saving</p>
+//                <span class="aui-icon aui-icon-wait" class="save-story-button-spinner">Saving...</span>
+//            </div>
+//            <div id="storySavedMessage" class="aui-message aui-message-success">
+//                <p>Story was saved successfully!</p>
+//            </div>
+//            <div class="aui-message success closeable shadowed">
+//            	<p class="title">
+//            	    <span class="aui-icon icon-success"></span><strong></strong></p>Story was saved successfully!
+//            	    <span class="aui-icon icon-close" role="button" tabindex="0"></span>
+//            </div>
+    </div>
     <div id="storyEditAreaContainer">
-        <textarea id="storyTextArea"
+        <textarea id="jbStoryTextArea"
             rows="10"
             placeholder="enter story text here"></textarea>
     </div>
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/listeners/IssueDeletedEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/listeners/IssueDeletedEventListener.java	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/java/org/bitbucket/jbehaveforjira/plugin/listeners/IssueDeletedEventListener.java	(revision )
@@ -15,7 +15,7 @@
 import java.util.List;
 
 /**
- * @author Maryna Stasyuk
+ * @author Maryna Pristrom
  */
 public class IssueDeletedEventListener implements InitializingBean, DisposableBean {
 
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/atlassian-plugin.xml	(revision )
@@ -4,8 +4,14 @@
                   plugins-version="2">
     <plugin-info>
         <description>Provides integration with JBehave BDD framework</description>
-        <version>1.0.0</version>
+        <version>1.0.1</version>
         <vendor name="Maryna Pristrom" url="https://bitbucket.org/pristrom/jbehave-for-jira-java-client/wiki/Home"/>
+        <param name="atlassian-licensing-enabled">true</param>
+        <!--<param name="plugin-icon">images/marketing/pluginIcon.jpg</param>-->
+        <param name="plugin-logo">images/marketing/pluginLogo.jpg</param>
+        <param name="plugin-banner">images/marketing/pluginBanner.jpg</param>
+        <param name="vendor-icon">images/marketing/vendorIcon.jpg</param>
+        <param name="vendor-logo">images/marketing/vendorLogo.jpg</param>
     </plugin-info>
     <!-- ==================================================================================================== -->
     <!--3rd party scripts-->
@@ -43,14 +49,14 @@
         <resource type="download" name="TemplatesShowStory.soy.js" location="/soy/TemplatesShowStory.soy"/>
         <resource type="download" name="TemplatesShowStoryReports.soy.js" location="/soy/TemplatesShowStoryReports.soy"/>
         <!-- CSS -->
-        <resource type="download" name="story.css" location="css/story.css">
+        <resource type="download" name="story-report.css" location="css/story-report.css">
             <param name="content-type" value="text/css"/>
         </resource>
-        <resource type="download" name="story-report.css" location="css/story-report.css">
+        <resource type="download" name="show-story.css" location="css/show-story.css">
             <param name="content-type" value="text/css"/>
         </resource>
         <!--other-->
-        <resource type="download" name="img/" location="img">
+        <resource type="download" name="images/" location="images">
             <!--<param name="content-type" value="image/gif"/>-->
         </resource>
         <context>jira.view.issue</context>
@@ -145,6 +151,7 @@
         <decription>Processes @Transactional annotations.</decription>
     </component>
     <component-import key="eventPublisher" interface="com.atlassian.event.api.EventPublisher"/>
+    <component-import key="pluginLicenseManager" interface="com.atlassian.upm.api.license.PluginLicenseManager"/>
     <!-- ==================================================================================================== -->
     <!-- Event listenders -->
     <!-- ==================================================================================================== -->
Index: jbehave-for-jira/jbehave-for-jira-plugin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/pom.xml	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/pom.xml	(revision )
@@ -6,7 +6,7 @@
     <artifactId>jbehave-for-jira-plugin</artifactId>
     <packaging>atlassian-plugin</packaging>
     <name>JBehave For Jira - Plugin</name>
-    <version>1.0.0-SNAPSHOT</version>
+    <version>1.0.1</version>
     <description>Jira plugin for JBehave</description>
     <url>https://bitbucket.org/pristrom/jbehave-for-jira-plugin/overview</url>
     <properties>
@@ -27,6 +27,8 @@
                 <configuration>
                     <productVersion>${jira.version}</productVersion>
                     <productDataVersion>${jira.version}</productDataVersion>
+                    <compressCss>true</compressCss>
+                    <compressJs>true</compressJs>
                 </configuration>
             </plugin>
             <plugin>
@@ -56,10 +58,10 @@
                         <id>default-minify</id>
                         <configuration>
                             <cssSourceFiles>
-                                <cssSourceFile>css/story.css</cssSourceFile>
+                                <!--<cssSourceFile>css/show-story.css</cssSourceFile>-->
                             </cssSourceFiles>
                             <jsSourceFiles>
-                                <jsSourceFile>js/StoryController.js</jsSourceFile>
+                                <!--<jsSourceFile>js/StoryController.js</jsSourceFile>-->
                             </jsSourceFiles>
                         </configuration>
                         <goals>
@@ -75,6 +77,18 @@
         <!--Jira provided dependencies-->
         <!-- ================================================================================= -->
         <dependency>
+            <groupId>com.atlassian.upm</groupId>
+            <artifactId>licensing-api</artifactId>
+            <version>2.0.1</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.atlassian.upm</groupId>
+            <artifactId>upm-api</artifactId>
+            <version>2.0.1</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
             <groupId>com.atlassian.jira</groupId>
             <artifactId>jira-api</artifactId>
             <version>${jira.version}</version>
@@ -114,7 +128,7 @@
         </dependency>
         <!--<dependency>-->
             <!--<groupId>org.bitbucket.pristrom</groupId>-->
-            <!--<artifactId>jbehave-for-jira-java-client-impl</artifactId>-->
+            <!--<artifactId>jbehave-for-jira-ja`va-client-impl</artifactId>-->
             <!--<version>1.0.0-SNAPSHOT</version>-->
             <!--<scope>provided</scope>-->
         <!--</dependency>-->
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story-report.css	(revision )
@@ -144,3 +144,7 @@
 .aui-lozenge {
     vertical-align: middle;
 }
+
+.jb-story-report-description {
+    padding-top: 10px;
+}
\ No newline at end of file
Index: jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css
===================================================================
--- jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/story.css	(date 1410434732000)
+++ jbehave-for-jira/jbehave-for-jira-plugin/src/main/resources/css/show-story.css	(revision )
@@ -8,7 +8,7 @@
 }
 
 .cm-jb-story-invalid-token {
-    background: url(img/underline.gif) bottom repeat-x;
+    background: url(images/ui/underline.gif) bottom repeat-x;
 }
 
 .cm-jb-story-description-line {
@@ -143,10 +143,10 @@
 }
 
 .savingMsgDiv {
-    display: inline;
-    border-style: solid;
-    border-width: 1px;
-    border-color: green;
+    /*display: inline;*/
+    /*border-style: solid;*/
+    /*border-width: 1px;*/
+    /*border-color: green;*/
 }
 
 .save-story-button-spinner {
@@ -154,7 +154,8 @@
     /*border-width: 1px;*/
     /*border-color: red;*/
     /*float: left;*/
-    display: inline;
+    /*display: inline;*/
+    /*position: relative;*/
 }
 
 #storyMsgBar {
\ No newline at end of file
