{namespace execspec.viewissuepage.editstory.rich}

/**
 * Renders story edit buttons.
 */
{template .renderRichEditorOperationButtons}
//    <div class="aui-toolbar2-inner">
//        <div class="aui-toolbar2-primary">
//            <div id="editorTypeButtons" class="aui-buttons">
//                <button id="richTextEditorButton" class="aui-button"
//                    onclick="editButtonHandler.richTextEditorClicked(event)">
//                    <b>Rich</b>
//                </button>
//                <button id="rawTextEditorButton" class="aui-button"
//                    onclick="editButtonHandler.rawTextEditorClicked(event)">
//                    <b>Text</b>
//                </button>
//            </div>
//            <div id="editOperationsButtons" class="aui-buttons">
//                <button id="insertTableButton" class="aui-button">
//                    <span class="aui-icon aui-icon-small aui-iconfont-appswitcher">Table Parameter</span>
//                </button>
//                <button id="insertTableButton" class="aui-button">
//                    <span class="aui-icon aui-icon-small aui-iconfont-arrows-left">Table Parameter</span>
//                </button>

//            </div>
//        </div>
//    </div>
{/template}

/**
 * Renders the '+' insert icon link to add story elements.
 * @param triggerDivId
 * @param dropdownDivId
 * @param dropdownItems
 * @param additionalParams
 */
{template .renderInsertLinkDiv}
    {let $addIconClass: 'aui-icon aui-icon-small aui-iconfont-add' /}
    <div class="insert-element-link-div">
        &nbsp;
        <a aria-controls="dropdown2-more" href="#{$dropdownDivId}" aria-owns="{$dropdownDivId}"
            aria-haspopup="true"
            class="aui-dropdown2-trigger aui-style-default aui-dropdown2-trigger-arrowless insert-element-link"
            style="display: none"
            pressed="false">
            <span class="{$addIconClass} insert-element-icon"></span>
        </a>
        <div id="{$dropdownDivId}" trigger-div-id="{$triggerDivId}"
            class="aui-dropdown2 aui-style-default insert-dropdown-content"
            aria-hidden="true" data-dropdown2-alignment="left"
            style="left: 280.6px; top: 801.3px; display: none;">
            <ul class="aui-list-truncate">
                {foreach $item in $dropdownItems}
                    <li><a href="#"
                        onclick="editButtonHandler.{$item.onClickFunction}(event, '{$item.elementName}'
                        {if $additionalParams != null}
                            {foreach $param in $additionalParams}
                                , '{$param}'
                            {/foreach}
                        {/if}
                        )">{$item.text}</a></li>
                {/foreach}
//                <li class="concrete-given-step hidden">
//                    <a href="http://example.com/">
//                        Long Comment, asfasfasdfasfa fas fas fasdfa sfa sfd asdf as fdasfasdfasdfas fdasdfasdf
//                    </a>
//                </li>
//                <li class="concrete-given-step hidden">
//                    <a href="http://example.com/">Concrete step</a>
//                </li>
            </ul>
        </div>
        <div class="step-auto-complete-container"
//            style="left: 280.6px; top: 801.3px; display: none;"
        >
        </div>
    </div>
{/template}

/**
 * Render the step filter
 */
{template .renderStepFilterElement}
    <li>
        <span
//        style="width: 100%;"
        >
//            Filter:
            <input
                style="width: 695px;"
                class="text long-field interactive step-filter-input"
                type="text"></input>
    //                        Comment
        </span>
</li>
{/template}

/**
 * Renders the '+' insert icon link to add scenario steps.
 * @param triggerDivId
 * @param dropdownDivId
 * @param dropdownItems
 * @param additionalParams
 */
{template .renderInsertStepLinkDiv}
    {let $addIconClass: 'aui-icon aui-icon-small aui-iconfont-add' /}
    <div class="insert-element-link-div">
        &nbsp;
        <a aria-controls="dropdown2-more" href="#{$dropdownDivId}" aria-owns="{$dropdownDivId}"
            aria-haspopup="true"
            class="aui-dropdown2-trigger aui-style-default aui-dropdown2-trigger-arrowless insert-element-link"
            style="display: none"
            pressed="false">
            <span class="{$addIconClass} insert-element-icon"></span>
        </a>
        <div id="{$dropdownDivId}" trigger-div-id="{$triggerDivId}"
            class="aui-dropdown2 aui-style-default insert-dropdown-content"
            aria-hidden="true" data-dropdown2-alignment="left"
//            style="left: 280.6px; top: 801.3px; display: none;"
            style="display: none; min-width: 700px; max-width: 700px;"
            >
            <ul class="aui-list-truncate dropdown-items">
                {foreach $item in $dropdownItems}
                    <li class="insert-step-link-container">
                        <a href="#"
                        class="story-element-insert-link interactive"
                        onclick="editButtonHandler.insertStep(event, '{$item.elementName}'
                        {if $additionalParams != null}
                            {foreach $param in $additionalParams}
                                , '{$param}'
                            {/foreach}
                        {/if}
                        )">{$item.text}</a></li>
                {/foreach}
//                <li class="concrete-given-step hidden">
//                    <a href="http://example.com/">
//                        Long Comment, asfasfasdfasfa fas fas fasdfa sfa sfd asdf as fdasfasdfasdfas fdasdfasdf
//                    </a>
//                </li>
//                <li class="concrete-given-step hidden">
//                    <a href="http://example.com/">Concrete step</a>
//                </li>
            </ul>
        </div>
        <div class="step-auto-complete-container"
//            style="left: 280.6px; top: 801.3px; display: none;"
        >
            TODO
        </div>
    </div>
{/template}

/**
 * Renders the text area type editable field.
 * @param fieldName
 * @param displayValue
 * @param fieldValue
 */
{template .renderMultiLineField}
    <textarea class="textarea story-editor-field story-multiline-edit-field"
        name="{$fieldName}"
        rows="1"
        wrap="off"
        placeholder="enter '{$displayValue}' here">
        {if $fieldValue != null}
            {$fieldValue}
        {/if}
    </textarea>
{/template}

/**
 * Renders the text field type editable field.
 * @param fieldName
 * @param displayValue
 * @param fieldValue
 */
{template .renderLongSingleLineField}
    {call .renderSingleLineField}
        {param fieldName: $fieldName /}
        {param displayValue: $displayValue /}
        {param fieldValue: $fieldValue /}
        {param isLongField: true /}
    {/call}
{/template}

/**
 * Renders the text field type editable field.
 * @param fieldName
 * @param displayValue
 * @param fieldValue
 */
{template .renderShortSingleLineField}
    {call .renderSingleLineField}
        {param fieldName: $fieldName /}
        {param displayValue: $displayValue /}
        {param fieldValue: $fieldValue /}
        {param isLongField: false /}
    {/call}
{/template}

/**
 * Renders the text field type editable field.
 * @param fieldName
 * @param displayValue
 * @param fieldValue
 * @param isLongField
 */
{template .renderSingleLineField}
    {if $fieldValue != null}
        {if $isLongField == true}
            <input
                class="text story-editor-field long-field story-element-field-long"
                name="{$fieldName}"
                title="{$fieldName}" type="text"
                placeholder="enter '{$displayValue}' here"
                value="{$fieldValue}"/>
        {else}
            <input
                class="text story-editor-field story-element-field-short"
                name="{$fieldName}"
                title="{$fieldName}" type="text"
                placeholder="enter '{$displayValue}' here"
                value="{$fieldValue}"/>
        {/if}

    {else}
        {if $isLongField == true}
            <input
                class="text story-editor-field long-field story-element-field-long"
                name="{$fieldName}"
                title="{$fieldName}" type="text"
                placeholder="enter '{$displayValue}' here"/>
        {else}
            <input
                class="text story-editor-field story-element-field-short"
                name="{$fieldName}"
                title="{$fieldName}" type="text"
                placeholder="enter '{$displayValue}' here"/>
        {/if}
    {/if}
{/template}

/**
 * Renders story description input field.
 * @param description
 */
{template .renderStoryDescriptionField}
    <div class="story-element-container">
        <div class="element-operations-container"
            style="display: none">
            <a class="remove-element-link"
                  href="#"
                  onclick="editButtonHandler.removeElement(event, 'description')"
                >
                <span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span>
            </a>
        </div>
        <div class="element-content-container story-description">
            {call .renderMultiLineField}
                {param fieldName: 'description' /}
                {param displayValue: 'Description' /}
                {param fieldValue: $description /}
            {/call}
        </div>
    </div>
{/template}

/**
 * Renders story meta input field.
 * @param meta
 */
{template .renderStoryMeta}
    <div class="story-element-container">
        <div class="element-operations-container"
            style="display: none">
            <a class="remove-element-link"
                  href="#"
                  onclick="editButtonHandler.removeElement(event, 'meta')"
                >
                <span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span>
            </a>
        </div>
        <div class="element-content-container story-meta">
            <div class="story-meta-keyword">
                {$meta.keyword}
            </div>
            {if $meta.properties != null}
                <div class="story-meta-properties">
                    {foreach $metaProperty in $meta.properties}
                        <div class="story-element-container">
                            <div class="element-operations-container"
                                style="display: none">
                                <a class="remove-element-link"href="#"
                                      onclick="editButtonHandler.removeElement(event, 'metaField', '{index($metaProperty)}')">
                                    <span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span>
                                </a>
                            </div>
                            <div class="story-meta-property element-content-container">
                                <span class="meta-property-start-symbol">@</span>
                                <span class="meta-property-name">
                                    {call .renderShortSingleLineField}
                                        {param fieldName: 'meta.properties['+ index($metaProperty) + '].name' /}
                                        {param displayValue: 'Property key' /}
                                        {param fieldValue: $metaProperty.name /}
                                    {/call}
                                </span>
                                &nbsp;
                                <span class="meta-preperty-value">
                                    {call .renderShortSingleLineField}
                                        {param fieldName: 'meta.properties['+ index($metaProperty) + '].value' /}
                                        {param displayValue: 'Property value' /}
                                        {param fieldValue: $metaProperty.value /}
                                    {/call}
                                </span>
                            </div>
                        </div>
                    {/foreach}
                </div>
            {/if}
            <div id="insertLinkContainerMetaProperty"/>
        </div>
    </div>
{/template}


/** Renders narrative
 * @param narrative
 */
{template .renderNarrative}
    <div class="narrative">
        <div class="title">{$narrative.keyword}</div>
        <div class="inOrderTo">
            <table>
                <tr>
                    <td style="vertical-align: top; text-align: left; width: 1%; white-space:nowrap;">
                        <span class="keyword">{$narrative.inOrderTo.keyword}</span>
                    </td>
                    <td style="text-align: left;">
                        {call .renderLongSingleLineField}
                            {param fieldName: 'narrative.inOrderTo.value' /}
                            {param displayValue: 'In order to' /}
                            {param fieldValue: $narrative.inOrderTo.value /}
                        {/call}
                    </td>
                </tr>
            </table>
        </div>
        <div class="asA">
            <table>
                <tr>
                    <td style="vertical-align: top; text-align: left; width: 1%; white-space:nowrap;">
                        <span class="keyword">{$narrative.asA.keyword}</span>
                    </td>
                    <td style="text-align: left;">
                        {call .renderLongSingleLineField}
                            {param fieldName: 'narrative.asA.value' /}
                            {param displayValue: 'As a' /}
                            {param fieldValue: $narrative.asA.value /}
                        {/call}
                    </td>
                </tr>
            </table>
        </div>
        <div class="iWantTo">
            <table>
                <tr>
                    <td style="vertical-align: top; text-align: left; width: 1%; white-space:nowrap;">
                        <span class="keyword">{$narrative.iWantTo.keyword}</span>
                    </td>
                    <td style="text-align: left;">
                        {call .renderLongSingleLineField}
                            {param fieldName: 'narrative.iWantTo.value' /}
                            {param displayValue: 'I Want to' /}
                            {param fieldValue: $narrative.iWantTo.value /}
                        {/call}
                    </td>
                </tr>
            </table>
        </div>
    </div>
{/template}

/** Renders scenarios
 * @param scenarios
 */
{template .renderScenarios}
    <div class="story-scenarios">
        {foreach $scenario in $scenarios}
            // title line
            <div class="story-element-container">
                <div class="element-operations-container" style="display: none">
                    <a class="remove-element-link" href="#"
                        onclick="editButtonHandler.removeElement(event, 'scenario', '{index($scenario)}')"
                    >
                        <span class="aui-icon aui-icon-small aui-iconfont-close-dialog"></span>
                    </a>
                </div>
                <div class="story-scenario element-content-container">
                    <span class="story-scenario-keyword">{$scenario.keyword}</span>
                    <span class="story-scenario-title">
                        {call .renderLongSingleLineField}
                            {param fieldName: 'scenarios[' + index($scenario) + '].title' /}
                            {param displayValue: 'scenario title' /}
                            {param fieldValue: $scenario.title/}
                        {/call}
                    </span>
                </div>
            </div>
            // steps
            {if $scenario.steps != null}
                <div class="scenario-steps">
                    {foreach $step in $scenario.steps}
                        <div class="scenario-step">
                            {$step}
                        </div>
                    {/foreach}
                </div>
            {/if}
            <div class="insert-link-container-after-scenario-steps"/>
        {/foreach}
    </div>
{/template}

/**
 * Renders story.
 * @param story
 */
{template .renderRichEditStoryContent}
<div id="richStoryEditContent">
    {let $clickHere: '[click here to edit]' /}

    <div id="storyDescriptionContainer">
        {if $story.description != null}
            {call .renderStoryDescriptionField}
                {param description: $story.description /}
            {/call}
        {/if}
    </div>

    <div id="insertLinkContainerBeforeMeta"/>

    <div id="storyMetaContainer">
        {if $story.meta != null}
            {call .renderStoryMeta}
                {param meta: $story.meta /}
            {/call}
        {/if}
    </div>

    <div id="insertLinkContainerBeforeNarrative"/>

    <div id="storyNarrativeContainer">
        {if $story.narrative != null}
            {call .renderNarrative}
                {param narrative: $story.narrative /}
            {/call}
        {/if}
    </div>

    <div id="insertLinkContainerBeforeGiventStories"/>

    {if $story.givenStories != null}
        <div class="story-given-stories">
            <div class="story-given-stories-keyword">
                {$story.givenStories.keyword}
            </div>
        </div>
    {/if}

    <div id="insertLinkContainerBeforeLifecycle"/>

    {if $story.lifecycle != null}
        <div class="story-lifecycle">
            <div class="story-lifecycle-keyword">
                {$story.lifecycle.keyword}
            </div>
        </div>
    {/if}

    <div id="storyScenariosContainer">
        {if $story.scenarios != null}
            {call .renderScenarios}
                {param scenarios: $story.scenarios /}
            {/call}
        {/if}
    </div>

    <div id="insertLinkContainerAfterScenarios"/>
//    {call .renderInsertLinkDiv}
//        {param triggerDivId: 'anotherTriggerDivId' /}
//        {param dropdownDivId: 'anotherDropdownDivId' /}
//        {param dropdownItems: [
//            $insertGivenStoriesLinkInfo,
//            $insertLifecycleLinkInfo,
//            $insertScenarioLinkInfo
//            ]
//         /}
//    {/call}

//    {if $story.givenStories == null and $story.lifecycle == null and $story.scenarios.length == 0}
//        {call .renderInsertLinkDiv}
//            {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//            {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//            {param dropdownItems: [
//                $insertGivenStoriesLinkInfo,
//                $insertLifecycleLinkInfo,
//                $insertScenarioLinkInfo
//            ] /}
//        {/call}
//    {elseif $story.givenStories == null and $story.lifecycle == null}
//        {call .renderInsertLinkDiv}
//            {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//            {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//            {param dropdownItems: [
//                $insertGivenStoriesLinkInfo,
//                $insertLifecycleLinkInfo
//            ] /}
//        {/call}
//    {elseif $story.givenStories == null and $story.scenarios.length == 0}
//            {call .renderInsertLinkDiv}
//                {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//                {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//                {param dropdownItems: [$insertGivenStoriesLinkInfo, $insertScenarioLinkInfo] /}
//            {/call}
//    {elseif $story.givenStories == null}
//        {call .renderInsertLinkDiv}
//            {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//            {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//            {param dropdownItems: [$insertGivenStoriesLinkInfo,] /}
//        {/call}
//    {elseif $story.lifecycle == null and $story.scenarios.length == 0}
//            {call .renderInsertLinkDiv}
//                {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//                {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//                {param dropdownItems: [$insertLifecycleLinkInfo, $insertScenarioLinkInfo] /}
//            {/call}
//    {elseif $story.lifecycle == null}
//        {call .renderInsertLinkDiv}
//            {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//            {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//            {param dropdownItems: [$insertLifecycleLinkInfo,] /}
//        {/call}
//    {elseif $story.scenarios.length == 0}
//            {call .renderInsertLinkDiv}
//                {param triggerDivId: 'insertAfterNarrativeTriggerDiv' /}
//                {param dropdownDivId: 'insertAfterNarrativeDropdownDiv' /}
//                {param dropdownItems: [$insertScenarioLinkInfo,] /}
//            {/call}
//    {/if}



</div>
{/template}


