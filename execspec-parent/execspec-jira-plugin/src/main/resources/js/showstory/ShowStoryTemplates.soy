{namespace execspec.viewissuepage.showstory}

/**
 * Renders issue's story pane.
 * @param story
 * @param storyReports
 */
{template .renderStoryPanel}
<div class="aui-tabs horizontal-tabs jbehave-story-tabs">
    <ul class="tabs-menu">
        <li class="menu-item active-tab">
            <a href="#story-tab"><strong>Story</strong></a>
        </li>
        {foreach $storyReport in $storyReports}
            {call .renderStoryReportTabHeader}
              {param storyReport: $storyReport /}
              {param index: index($storyReport) /}
            {/call}
        {/foreach}
    </ul>
    <div class="tabs-pane active-pane" id="story-tab">
        {call .renderStory }
          {param story: $story /}
        {/call}
    </div>
    {foreach $storyReport in $storyReports}
        {call .renderStoryReportTabPane}
          {param storyReport: $storyReport /}
          {param index: index($storyReport) /}
        {/call}
    {/foreach}
</div>
{/template}

/**
 * Renders story report header.
 * @param storyReport
 * @param index
 */
{template .renderStoryReportTabPane autoescape="false"}
    <div class="tabs-pane story-container" id="story-report-tab-{$index}" environment="{$storyReport.environment}">
        {$storyReport.htmlReport}
    </div>
{/template}


/**
 * Renders story report header.
 * @param storyReport
 * @param index
 */
{template .renderStoryReportTabHeader}
    <li class="menu-item">
        <a href="#story-report-tab-{$index}"><strong>{$storyReport.environment}</strong><span
            class="aui-badge passed">{$storyReport.totalScenariosPassed}</span>{if $storyReport.totalScenariosFailed > 0}<span
            class="aui-badge failed">{$storyReport.totalScenariosFailed}</span>{/if}{if $storyReport.totalScenariosPending > 0}<span
            class="aui-badge pending">{$storyReport.totalScenariosPending}{/if}{if $storyReport.totalScenariosSkipped > 0}<span
            class="aui-badge skipped">{$storyReport.totalScenariosSkipped }{/if}{if $storyReport.totalScenariosNotPerformed > 0}<span
            class="aui-badge not-performed">{$storyReport.totalScenariosNotPerformed}{/if}</span></a>
    </li>
{/template}

/**
 * Renders issue's story.
 * @param story
 */
{template .renderStory}
<div class="story-container">
    <div class="story">
        <div class="narrative">
            <div class="label">{$story.narrative.label}</div>
            <div>
                <span class="keyword">In order to</span> {$story.narrative.inOrderTo|changeNewlineToBr}
            </div>
            <div>
                <span class="keyword">As a</span> {$story.narrative.asA|changeNewlineToBr}
            </div>
            <div>
                <span class="keyword">I want to</span> {$story.narrative.iWantTo|changeNewlineToBr}
            </div>
            {if length($story.narrative.soThat) != 0}
            <div>
                <span class="keyword">So that</span> {$story.narrative.soThat|changeNewlineToBr}
            </div>
            {/if}
        </div>
        <div class='scenarios'>
            {foreach $scenario in $story.scenarios}
                <div class='scenario'>
                    <div>
                        <span class="label">Scenario:</span> <span class="title">{$scenario.title|changeNewlineToBr}</span>
                    </div>
                    <div class="steps">
                    {foreach $step in $scenario.steps}
                        <div class="step">
//                            {$step.asString|changeNewlineToBr}
                            {foreach $token in $step.tokens}
                                {if $token.kind == 'table'}
                                    <table class="table-parameter">
                                        // render table token as html table
                                        <tr>
                                            {foreach $header in $token.examplesTableDTO.headers}
                                                <td>{$token.examplesTableDTO.headerSeparator}</td>
                                                <td class="header">{$header}</td>
                                                {if isLast($header)}
                                                    <td>{$token.examplesTableDTO.headerSeparator}</td>
                                                {/if}
                                            {/foreach}
                                        </tr>
                                        {foreach $rowData in $token.examplesTableDTO.data}
                                            <tr>
                                                {foreach $cellData in $rowData}
                                                    <td>{$token.examplesTableDTO.valueSeparator}</td>
                                                    <td class="value">{$cellData}</td>
                                                    {if isLast($cellData)}
                                                        <td>{$token.examplesTableDTO.valueSeparator}</td>
                                                    {/if}
                                                {/foreach}
                                            </tr>
                                        {/foreach}
                                    </table>
                                {else}
                                    <span class="{$token.kind}">{$token.asString|changeNewlineToBr}</span>
                                {/if}
                            {/foreach}
                        </div>
                    {/foreach}
                    </div>
                </div>
            {/foreach}
        </div>
    </div>
</div>
{/template}
