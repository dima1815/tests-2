Index: jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/AllowedValues.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/AllowedValues.java	(date 1409608936000)
+++ jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/AllowedValues.java	(date 1409608936000)
@@ -1,19 +0,0 @@
-package org.bitbucket.jbehaveforjira.javaclient;
-
-import java.lang.annotation.*;
-
-/**
- * Fields in the parameter types (classes annotated with @AsParameters) can be annotated with this
- * annotation to limit the range of values allowed for the annotated field. The indented usage is to
- * annotate non enum primitive field types with this annotation. For example 'discount' of type double
- * could be annotated with this annotation which would have the following allowed values: '5, 10, 15, etc.'.
- *
- * @author Maryna Stasyuk
- */
-@Retention(RetentionPolicy.RUNTIME)
-@Target({ElementType.FIELD, ElementType.PARAMETER})
-@Documented
-public @interface AllowedValues {
-
-    String[] value();
-}
Index: jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/SuggestedValues.java
===================================================================
--- jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/SuggestedValues.java	(date 1409608936000)
+++ jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/SuggestedValues.java	(date 1409608936000)
@@ -1,20 +0,0 @@
-package org.bitbucket.jbehaveforjira.javaclient;
-
-import java.lang.annotation.*;
-
-/**
- * Fields in the parameter types (classes annotated with @AsParameters) can be annotated with this
- * annotation to provide a list of suggested but not limited range of values for the annotated field. The indented usage is to
- * annotate non enum primitive field types with this annotation. For example 'discount' of type double
- * could be annotated with this annotation which would have the following allowed values: '5, 10, 15, etc.'. But user would be
- * allowed to enter other values outside of suggested values specified in this annotation.
- *
- * @author Maryna Stasyuk
- */
-@Retention(RetentionPolicy.RUNTIME)
-@Target({ElementType.FIELD, ElementType.PARAMETER})
-@Documented
-public @interface SuggestedValues {
-
-    String[] value();
-}
Index: jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/ParameterInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/ParameterInfo.java	(revision )
+++ jbehave-for-jira/jbehave-for-jira-java-client/src/main/java/org/bitbucket/jbehaveforjira/javaclient/ParameterInfo.java	(revision )
@@ -0,0 +1,30 @@
+package org.bitbucket.jbehaveforjira.javaclient;
+
+import java.lang.annotation.*;
+
+/**
+ * Used to provide meta information for the JBehave parameter fields.
+ *
+ * @author Maryna Stasyuk
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.FIELD, ElementType.PARAMETER})
+@Documented
+public @interface ParameterInfo {
+
+    public static enum EmptyEnum {
+
+    }
+
+    boolean isMandatory() default false;
+
+    String[] allowedValues() default {};
+
+    String[] suggestedValues() default {};
+
+    Class<? extends Enum> suggestedValuesEnum() default EmptyEnum.class;
+
+    String regExPattern() default "";
+}
+
+
